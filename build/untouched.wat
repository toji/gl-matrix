(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_f64_=>_i32 (func (param i32 i32 f64) (result i32)))
 (type $i32_=>_f64 (func (param i32) (result f64)))
 (type $i32_i32_i32_f64_=>_i32 (func (param i32 i32 i32 f64) (result i32)))
 (type $i32_i32_=>_f64 (func (param i32 i32) (result f64)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_f64_=>_i32 (func (param i32 f64) (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $none_=>_f64 (func (result f64)))
 (type $i32_=>_none (func (param i32)))
 (type $f64_=>_f64 (func (param f64) (result f64)))
 (type $i32_f64_=>_none (func (param i32 f64)))
 (type $i32_f64_f64_f64_f64_=>_i32 (func (param i32 f64 f64 f64 f64) (result i32)))
 (type $i32_f64_f64_f64_f64_f64_f64_=>_i32 (func (param i32 f64 f64 f64 f64 f64 f64) (result i32)))
 (type $i32_i32_i32_i32_i32_f64_=>_i32 (func (param i32 i32 i32 i32 i32 f64) (result i32)))
 (type $i32_f64_f64_=>_i32 (func (param i32 f64 f64) (result i32)))
 (type $i32_i32_f64_=>_none (func (param i32 i32 f64)))
 (type $i32_i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
 (type $i32_f64_f64_f64_i32_=>_i32 (func (param i32 f64 f64 f64 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_f64_i32_=>_i32 (func (param i32 i32 f64 i32) (result i32)))
 (type $i32_i32_f64_f64_=>_i32 (func (param i32 i32 f64 f64) (result i32)))
 (type $i32_f64_i32_=>_i32 (func (param i32 f64 i32) (result i32)))
 (type $i32_f64_f64_f64_=>_i32 (func (param i32 f64 f64 f64) (result i32)))
 (type $i32_f64_f64_f64_f64_f64_f64_f64_f64_=>_i32 (func (param i32 f64 f64 f64 f64 f64 f64 f64 f64) (result i32)))
 (type $i32_f64_f64_f64_f64_f64_f64_f64_f64_f64_=>_i32 (func (param i32 f64 f64 f64 f64 f64 f64 f64 f64 f64) (result i32)))
 (type $i32_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_=>_i32 (func (param i32 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64) (result i32)))
 (type $f64_f64_=>_i32 (func (param f64 f64) (result i32)))
 (type $f64_f64_f64_f64_=>_i32 (func (param f64 f64 f64 f64) (result i32)))
 (type $f64_f64_=>_f64 (func (param f64 f64) (result f64)))
 (type $f64_f64_f64_=>_f64 (func (param f64 f64 f64) (result f64)))
 (type $i64_=>_none (func (param i64)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $f64_=>_i32 (func (param f64) (result i32)))
 (type $i32_i64_i32_i64_i32_i64_i32_=>_i32 (func (param i32 i64 i32 i64 i32 i64 i32) (result i32)))
 (type $f64_i32_=>_i32 (func (param f64 i32) (result i32)))
 (type $f64_i64_=>_i32 (func (param f64 i64) (result i32)))
 (type $f64_f64_f64_=>_i32 (func (param f64 f64 f64) (result i32)))
 (type $f64_f64_f64_f64_f64_f64_=>_i32 (func (param f64 f64 f64 f64 f64 f64) (result i32)))
 (type $f64_f64_f64_f64_f64_f64_f64_=>_i32 (func (param f64 f64 f64 f64 f64 f64 f64) (result i32)))
 (type $f64_f64_f64_f64_f64_f64_f64_f64_=>_i32 (func (param f64 f64 f64 f64 f64 f64 f64 f64) (result i32)))
 (type $f64_f64_f64_f64_f64_f64_f64_f64_f64_=>_i32 (func (param f64 f64 f64 f64 f64 f64 f64 f64 f64) (result i32)))
 (type $f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_=>_i32 (func (param f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64) (result i32)))
 (type $i64_=>_i64 (func (param i64) (result i64)))
 (type $f64_f64_i32_=>_f64 (func (param f64 f64 i32) (result f64)))
 (type $f64_f64_f64_f64_=>_f64 (func (param f64 f64 f64 f64) (result f64)))
 (type $f64_f64_f64_f64_f64_f64_f64_=>_f64 (func (param f64 f64 f64 f64 f64 f64 f64) (result f64)))
 (type $f64_f64_f64_f64_f64_f64_f64_f64_f64_=>_f64 (func (param f64 f64 f64 f64 f64 f64 f64 f64 f64) (result f64)))
 (type $f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_f64_=>_f64 (func (param f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64 f64) (result f64)))
 (import "env" "seed" (func $~lib/builtins/seed (result f64)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_entryfile_flag i32 (i32.const 1))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_String_ID i32 (i32.const 1))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_ArrayBuffer_ID i32 (i32.const 0))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_ArrayBufferView_ID i32 (i32.const 2))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Int8Array_ID i32 (i32.const 3))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Uint8Array_ID i32 (i32.const 4))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Int16Array_ID i32 (i32.const 5))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Uint16Array_ID i32 (i32.const 6))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Int32Array_ID i32 (i32.const 7))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Uint32Array_ID i32 (i32.const 8))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Float32Array_ID i32 (i32.const 9))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Float64Array_ID i32 (i32.const 10))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Int64Array_ID i32 (i32.const 11))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Uint64Array_ID i32 (i32.const 12))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_I32Array_ID i32 (i32.const 13))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_I64Array_ID i32 (i32.const 14))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_StringArray_ID i32 (i32.const 15))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_BoolArray_ID i32 (i32.const 16))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_I32ArrayArray_ID i32 (i32.const 17))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_I64ArrayArray_ID i32 (i32.const 18))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_StringArrayArray_ID i32 (i32.const 19))
 (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_BoolArrayArray_ID i32 (i32.const 20))
 (global $assembly/common/EPSILON f64 (f64.const 1e-06))
 (global $assembly/common/ArrayTypeEnum.Float64ArrayT i32 (i32.const 10))
 (global $assembly/common/ArrayTypeEnum.ArrayF64T i32 (i32.const 21))
 (global $assembly/common/ARRAY_TYPE (mut i32) (i32.const 0))
 (global $~lib/math/random_seeded (mut i32) (i32.const 0))
 (global $~lib/math/random_state0_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state1_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state0_32 (mut i32) (i32.const 0))
 (global $~lib/math/random_state1_32 (mut i32) (i32.const 0))
 (global $assembly/common/RANDOM (mut i32) (i32.const 80))
 (global $assembly/common/ANGLE_ORDER (mut i32) (i32.const 112))
 (global $~lib/math/NativeMath.PI f64 (f64.const 3.141592653589793))
 (global $assembly/common/degree f64 (f64.const 0.017453292519943295))
 (global $assembly/mat2d/mul i32 (i32.const 272))
 (global $assembly/mat2d/sub i32 (i32.const 304))
 (global $assembly/vec3/sub i32 (i32.const 336))
 (global $assembly/vec3/mul i32 (i32.const 368))
 (global $assembly/vec3/div i32 (i32.const 400))
 (global $assembly/vec3/dist i32 (i32.const 464))
 (global $assembly/vec3/sqrDist i32 (i32.const 496))
 (global $assembly/vec3/len i32 (i32.const 528))
 (global $assembly/vec3/sqrLen i32 (i32.const 560))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/ASC_LOW_MEMORY_LIMIT i32 (i32.const 0))
 (global $~lib/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $assembly/vec3/vec (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $assembly/vec3/forEach (mut i32) (i32.const 0))
 (global $assembly/vec4/sub i32 (i32.const 1104))
 (global $assembly/vec4/mul i32 (i32.const 1136))
 (global $assembly/vec4/div i32 (i32.const 1168))
 (global $assembly/vec4/dist i32 (i32.const 1200))
 (global $assembly/vec4/sqrDist i32 (i32.const 1232))
 (global $assembly/vec4/len i32 (i32.const 1264))
 (global $assembly/vec4/sqrLen i32 (i32.const 1296))
 (global $assembly/vec4/vec (mut i32) (i32.const 0))
 (global $assembly/vec4/forEach (mut i32) (i32.const 0))
 (global $assembly/quat/clone i32 (i32.const 1392))
 (global $assembly/quat/fromValues i32 (i32.const 1424))
 (global $assembly/quat/copy i32 (i32.const 1456))
 (global $assembly/quat/set i32 (i32.const 1488))
 (global $assembly/quat/add i32 (i32.const 1520))
 (global $assembly/quat/mul i32 (i32.const 1552))
 (global $assembly/quat/scale i32 (i32.const 1584))
 (global $assembly/quat/dot i32 (i32.const 1616))
 (global $assembly/quat/lerp i32 (i32.const 1648))
 (global $assembly/quat/length i32 (i32.const 1264))
 (global $assembly/quat/len i32 (i32.const 1264))
 (global $assembly/quat/squaredLength i32 (i32.const 1296))
 (global $assembly/quat/sqrLen i32 (i32.const 1296))
 (global $assembly/quat/normalize i32 (i32.const 1680))
 (global $assembly/quat/exactEquals i32 (i32.const 1712))
 (global $assembly/quat/tmpvec3 (mut i32) (i32.const 0))
 (global $assembly/quat/xUnitVec3 (mut i32) (i32.const 0))
 (global $assembly/quat/yUnitVec3 (mut i32) (i32.const 0))
 (global $~lib/math/rempio2_y0 (mut f64) (f64.const 0))
 (global $~lib/math/rempio2_y1 (mut f64) (f64.const 0))
 (global $~lib/math/res128_hi (mut i64) (i64.const 0))
 (global $assembly/quat/rotationTo (mut i32) (i32.const 0))
 (global $assembly/quat/temp1 (mut i32) (i32.const 0))
 (global $assembly/quat/temp2 (mut i32) (i32.const 0))
 (global $assembly/quat/sqlerp (mut i32) (i32.const 0))
 (global $assembly/quat/matr (mut i32) (i32.const 0))
 (global $assembly/quat/setAxes (mut i32) (i32.const 0))
 (global $assembly/quat2/getReal i32 (i32.const 1456))
 (global $assembly/quat2/setReal i32 (i32.const 1456))
 (global $assembly/quat2/mul i32 (i32.const 2144))
 (global $assembly/quat2/dot i32 (i32.const 1616))
 (global $assembly/quat2/length i32 (i32.const 1264))
 (global $assembly/quat2/len i32 (i32.const 1264))
 (global $assembly/quat2/squaredLength i32 (i32.const 1296))
 (global $assembly/quat2/sqrLen i32 (i32.const 1296))
 (global $assembly/mat4/perspective i32 (i32.const 2208))
 (global $assembly/mat4/ortho i32 (i32.const 2240))
 (global $assembly/mat4/mul i32 (i32.const 2272))
 (global $assembly/mat4/sub i32 (i32.const 2304))
 (global $assembly/mat3/mul i32 (i32.const 2336))
 (global $assembly/mat3/sub i32 (i32.const 2368))
 (global $assembly/vec2/len i32 (i32.const 2400))
 (global $assembly/vec2/sub i32 (i32.const 2432))
 (global $assembly/vec2/mul i32 (i32.const 2464))
 (global $assembly/vec2/div i32 (i32.const 2496))
 (global $assembly/vec2/dist i32 (i32.const 2528))
 (global $assembly/vec2/sqrDist i32 (i32.const 2560))
 (global $assembly/vec2/sqrLen i32 (i32.const 2592))
 (global $assembly/vec2/vec (mut i32) (i32.const 0))
 (global $assembly/vec2/forEach (mut i32) (i32.const 0))
 (global $assembly/mat2/mul i32 (i32.const 2688))
 (global $assembly/mat2/sub i32 (i32.const 2720))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $assembly/mat4/Fov i32 (i32.const 44))
 (global $~lib/rt/__rtti_base i32 (i32.const 11472))
 (global $~lib/memory/__data_end i32 (i32.const 11836))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 28220))
 (global $~lib/memory/__heap_base i32 (i32.const 28220))
 (memory $0 1)
 (data (i32.const 12) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00~\00l\00i\00b\00/\00m\00a\00t\00h\00.\00t\00s\00\00\00\00\00")
 (data (i32.const 60) "\1c\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 92) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00z\00y\00x\00\00\00\00\00\00\00")
 (data (i32.const 124) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 188) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 252) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 284) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 316) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 348) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 380) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 412) "\1c\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\08\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 444) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 476) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 508) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 540) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 572) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 620) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 684) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data (i32.const 748) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 816) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 848) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 876) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 928) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 956) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1020) "\1c\00\00\00\00\00\00\00\00\00\00\00\1d\00\00\00\08\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1052) "\1c\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\08\00\00\00\0d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1084) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1116) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1148) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1180) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1212) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1244) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00\13\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1276) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1308) "\1c\00\00\00\00\00\00\00\00\00\00\00\1d\00\00\00\08\00\00\00\15\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1340) "\1c\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\08\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1372) "\1c\00\00\00\00\00\00\00\00\00\00\00\1e\00\00\00\08\00\00\00\17\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1404) "\1c\00\00\00\00\00\00\00\00\00\00\00\1f\00\00\00\08\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1436) "\1c\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\08\00\00\00\19\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1468) "\1c\00\00\00\00\00\00\00\00\00\00\00!\00\00\00\08\00\00\00\1a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1500) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1532) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\1c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1564) "\1c\00\00\00\00\00\00\00\00\00\00\00\"\00\00\00\08\00\00\00\1d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1596) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\00\1e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1628) "\1c\00\00\00\00\00\00\00\00\00\00\00#\00\00\00\08\00\00\00\1f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1660) "\1c\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\08\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1692) "\1c\00\00\00\00\00\00\00\00\00\00\00$\00\00\00\08\00\00\00!\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1728) "n\83\f9\a2\00\00\00\00\d1W\'\fc)\15DN\99\95b\db\c0\dd4\f5\abcQ\feA\90C<:n$\b7a\c5\bb\de\ea.I\06\e0\d2MB\1c\eb\1d\fe\1c\92\d1\t\f55\82\e8>\a7)\b1&p\9c\e9\84D\bb.9\d6\919A~_\b4\8b_\84\9c\f49S\83\ff\97\f8\1f;(\f9\bd\8b\11/\ef\0f\98\05\de\cf~6m\1fm\nZf?FO\b7\t\cb\'\c7\ba\'u-\ea_\9e\f79\07={\f1\e5\eb\b1_\fbk\ea\92R\8aF0\03V\08]\8d\1f \bc\cf\f0\abk{\fca\91\e3\a9\1d6\f4\9a_\85\99e\08\1b\e6^\80\d8\ff\8d@h\a0\14W\15\06\061\'sM")
 (data (i32.const 1932) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1964) "\1c\00\00\00\00\00\00\00\00\00\00\00%\00\00\00\08\00\00\00#\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1996) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00$\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2028) "\1c\00\00\00\00\00\00\00\00\00\00\00&\00\00\00\08\00\00\00%\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2060) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00&\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2092) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00\'\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2124) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00(\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2156) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00n\00u\00m\00b\00e\00r\00")
 (data (i32.const 2188) "\1c\00\00\00\00\00\00\00\00\00\00\00!\00\00\00\08\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2220) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00*\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2252) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00+\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2284) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2316) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00-\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2348) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2380) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00/\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2412) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2444) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\001\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2476) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\002\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2508) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\003\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2540) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\004\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2572) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\005\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2604) "\1c\00\00\00\00\00\00\00\00\00\00\00\1d\00\00\00\08\00\00\006\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2636) "\1c\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\08\00\00\007\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2668) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\008\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2700) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\009\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2732) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00m\00a\00t\002\00(\00\00\00")
 (data (i32.const 2764) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\000\00.\000\00\00\00\00\00\00\00")
 (data (i32.const 2796) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00N\00a\00N\00\00\00\00\00\00\00")
 (data (i32.const 2828) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2876) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2928) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2984) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\0dXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data (i32.const 3680) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\0d\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data (i32.const 3856) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data (i32.const
 (data (i32.const 4300) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4332) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00,\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 4364) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4396) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00m\00a\00t\002\00d\00(\00")
 (data (i32.const 4428) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00m\00a\00t\003\00(\00\00\00")
 (data (i32.const 4460) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00m\00a\00t\004\00(\00\00\00")
 (data (i32.const 4496) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?n\bf\88\1aO;\9b<53\fb\a9=\f6\ef?]\dc\d8\9c\13`q\bca\80w>\9a\ec\ef?\d1f\87\10z^\90\bc\85\7fn\e8\15\e3\ef?\13\f6g5R\d2\8c<t\85\15\d3\b0\d9\ef?\fa\8e\f9#\80\ce\8b\bc\de\f6\dd)k\d0\ef?a\c8\e6aN\f7`<\c8\9bu\18E\c7\ef?\99\d33[\e4\a3\90<\83\f3\c6\ca>\be\ef?m{\83]\a6\9a\97<\0f\89\f9lX\b5\ef?\fc\ef\fd\92\1a\b5\8e<\f7Gr+\92\ac\ef?\d1\9c/p=\be><\a2\d1\d32\ec\a3\ef?\0bn\90\894\03j\bc\1b\d3\fe\aff\9b\ef?\0e\bd/*RV\95\bcQ[\12\d0\01\93\ef?U\eaN\8c\ef\80P\bc\cc1l\c0\bd\8a\ef?\16\f4\d5\b9#\c9\91\bc\e0-\a9\ae\9a\82\ef?\afU\\\e9\e3\d3\80<Q\8e\a5\c8\98z\ef?H\93\a5\ea\15\1b\80\bc{Q}<\b8r\ef?=2\deU\f0\1f\8f\bc\ea\8d\8c8\f9j\ef?\bfS\13?\8c\89\8b<u\cbo\eb[c\ef?&\eb\11v\9c\d9\96\bc\d4\\\04\84\e0[\ef?`/:>\f7\ec\9a<\aa\b9h1\87T\ef?\9d8\86\cb\82\e7\8f\bc\1d\d9\fc\"PM\ef?\8d\c3\a6DAo\8a<\d6\8cb\88;F\ef?}\04\e4\b0\05z\80<\96\dc}\91I?\ef?\94\a8\a8\e3\fd\8e\96<8bunz8\ef?}Ht\f2\18^\87<?\a6\b2O\ce1\ef?\f2\e7\1f\98+G\80<\dd|\e2eE+\ef?^\08q?{\b8\96\bc\81c\f5\e1\df$\ef?1\ab\tm\e1\f7\82<\e1\de\1f\f5\9d\1e\ef?\fa\bfo\1a\9b!=\bc\90\d9\da\d0\7f\18\ef?\b4\n\0cr\827\8b<\0b\03\e4\a6\85\12\ef?\8f\cb\ce\89\92\14n<V/>\a9\af\0c\ef?\b6\ab\b0MuM\83<\15\b71\n\fe\06\ef?Lt\ac\e2\01B\86<1\d8L\fcp\01\ef?J\f8\d3]9\dd\8f<\ff\16d\b2\08\fc\ee?\04[\8e;\80\a3\86\bc\f1\9f\92_\c5\f6\ee?hPK\cc\edJ\92\bc\cb\a9:7\a7\f1\ee?\8e-Q\1b\f8\07\99\bcf\d8\05m\ae\ec\ee?\d26\94>\e8\d1q\bc\f7\9f\e54\db\e7\ee?\15\1b\ce\b3\19\19\99\bc\e5\a8\13\c3-\e3\ee?mL*\a7H\9f\85<\"4\12L\a6\de\ee?\8ai(z`\12\93\bc\1c\80\ac\04E\da\ee?[\89\17H\8f\a7X\bc*.\f7!\n\d6\ee?\1b\9aIg\9b,|\bc\97\a8P\d9\f5\d1\ee?\11\ac\c2`\edcC<-\89a`\08\ce\ee?\efd\06;\tf\96<W\00\1d\edA\ca\ee?y\03\a1\da\e1\ccn<\d0<\c1\b5\a2\c6\ee?0\12\0f?\8e\ff\93<\de\d3\d7\f0*\c3\ee?\b0\afz\bb\ce\90v<\'*6\d5\da\bf\ee?w\e0T\eb\bd\1d\93<\0d\dd\fd\99\b2\bc\ee?\8e\a3q\004\94\8f\bc\a7,\9dv\b2\b9\ee?I\a3\93\dc\cc\de\87\bcBf\cf\a2\da\b6\ee?_8\0f\bd\c6\dex\bc\82O\9dV+\b4\ee?\f6\\{\ecF\12\86\bc\0f\92]\ca\a4\b1\ee?\8e\d7\fd\18\055\93<\da\'\b56G\af\ee?\05\9b\8a/\b7\98{<\fd\c7\97\d4\12\ad\ee?\tT\1c\e2\e1c\90<)TH\dd\07\ab\ee?\ea\c6\19P\85\c74<\b7FY\8a&\a9\ee?5\c0d+\e62\94<H!\ad\15o\a7\ee?\9fv\99aJ\e4\8c\bc\t\dcv\b9\e1\a5\ee?\a8M\ef;\c53\8c\bc\85U:\b0~\a4\ee?\ae\e9+\89xS\84\bc \c3\cc4F\a3\ee?XXVx\dd\ce\93\bc%\"U\828\a2\ee?d\19~\80\aa\10W<s\a9L\d4U\a1\ee?(\"^\bf\ef\b3\93\bc\cd;\7ff\9e\a0\ee?\82\b94\87\ad\12j\bc\bf\da\0bu\12\a0\ee?\ee\a9m\b8\efgc\bc/\1ae<\b2\9f\ee?Q\88\e0T=\dc\80\bc\84\94Q\f9}\9f\ee?\cf>Z~d\1fx\bct_\ec\e8u\9f\ee?\b0}\8b\c0J\ee\86\bct\81\a5H\9a\9f\ee?\8a\e6U\1e2\19\86\bc\c9gBV\eb\9f\ee?\d3\d4\t^\cb\9c\90<?]\deOi\a0\ee?\1d\a5M\b9\dc2{\bc\87\01\ebs\14\a1\ee?k\c0gT\fd\ec\94<2\c10\01\ed\a1\ee?Ul\d6\ab\e1\ebe<bN\cf6\f3\a2\ee?B\cf\b3/\c5\a1\88\bc\12\1a>T\'\a4\ee?47;\f1\b6i\93\bc\13\ceL\99\89\a5\ee?\1e\ff\19:\84^\80\bc\ad\c7#F\1a\a7\ee?nWr\d8P\d4\94\bc\ed\92D\9b\d9\a8\ee?\00\8a\0e[g\ad\90<\99f\8a\d9\c7\aa\ee?\b4\ea\f0\c1/\b7\8d<\db\a0*B\e5\ac\ee?\ff\e7\c5\9c`\b6e\bc\8cD\b5\162\af\ee?D_\f3Y\83\f6{<6w\15\99\ae\b1\ee?\83=\1e\a7\1f\t\93\bc\c6\ff\91\0b[\b4\ee?)\1el\8b\b8\a9]\bc\e5\c5\cd\b07\b7\ee?Y\b9\90|\f9#l\bc\0fR\c8\cbD\ba\ee?\aa\f9\f4\"CC\92\bcPN\de\9f\82\bd\ee?K\8ef\d7l\ca\85\bc\ba\07\cap\f1\c0\ee?\'\ce\91+\fc\afq<\90\f0\a3\82\91\c4\ee?\bbs\n\e15\d2m<##\e3\19c\c8\ee?c\"b\"\04\c5\87\bce\e5]{f\cc\ee?\d51\e2\e3\86\1c\8b<3-J\ec\9b\d0\ee?\15\bb\bc\d3\d1\bb\91\bc]%>\b2\03\d5\ee?\d21\ee\9c1\cc\90<X\b30\13\9e\d9\ee?\b3Zsn\84i\84<\bf\fdyUk\de\ee?\b4\9d\8e\97\cd\df\82\bcz\f3\d3\bfk\e3\ee?\873\cb\92w\1a\8c<\ad\d3Z\99\9f\e8\ee?\fa\d9\d1J\8f{\90\bcf\b6\8d)\07\ee\ee?\ba\ae\dcV\d9\c3U\bc\fb\15O\b8\a2\f3\ee?@\f6\a6=\0e\a4\90\bc:Y\e5\8dr\f9\ee?4\93\ad8\f4\d6h\bcG^\fb\f2v\ff\ee?5\8aXk\e2\ee\91\bcJ\06\a10\b0\05\ef?\cd\dd_\n\d7\fft<\d2\c1K\90\1e\0c\ef?\ac\98\92\fa\fb\bd\91\bc\t\1e\d7[\c2\12\ef?\b3\0c\af0\aens<\9cR\85\dd\9b\19\ef?\94\fd\9f\\2\e3\8e<z\d0\ff_\ab \ef?\acY\t\d1\8f\e0\84<K\d1W.\f1\'\ef?g\1aN8\af\cdc<\b5\e7\06\94m/\ef?h\19\92l,kg<i\90\ef\dc 7\ef?\d2\b5\cc\83\18\8a\80\bc\fa\c3]U\0b?\ef?o\fa\ff?]\ad\8f\bc|\89\07J-G\ef?I\a9u8\ae\0d\90\bc\f2\89\0d\08\87O\ef?\a7\07=\a6\85\a3t<\87\a4\fb\dc\18X\ef?\0f\"@ \9e\91\82\bc\98\83\c9\16\e3`\ef?\ac\92\c1\d5PZ\8e<\852\db\03\e6i\ef?Kk\01\acY:\84<`\b4\01\f3!s\ef?\1f>\b4\07!\d5\82\bc_\9b{3\97|\ef?\c9\0dG;\b9*\89\bc)\a1\f5\14F\86\ef?\d3\88:`\04\b6t<\f6?\8b\e7.\90\ef?qr\9dQ\ec\c5\83<\83L\c7\fbQ\9a\ef?\f0\91\d3\8f\12\f7\8f\bc\da\90\a4\a2\af\a4\ef?}t#\e2\98\ae\8d\bc\f1g\8e-H\af\ef?\08 \aaA\bc\c3\8e<\'Za\ee\1b\ba\ef?2\eb\a9\c3\94+\84<\97\bak7+\c5\ef?\ee\85\d11\a9d\8a<@En[v\d0\ef?\ed\e3;\e4\ba7\8e\bc\14\be\9c\ad\fd\db\ef?\9d\cd\91M;\89w<\d8\90\9e\81\c1\e7\ef?\89\cc`A\c1\05S<\f1q\8f+\c2\f3\ef?")
 (data (i32.const 6544) "\9f\de\e0\c3\f04\f7?\00\90\e6y\7f\cc\d7\bf\1f\e9,jx\13\f7?\00\00\0d\c2\eeo\d7\bf\a0\b5\fa\08`\f2\f6?\00\e0Q\13\e3\13\d7\bf}\8c\13\1f\a6\d1\f6?\00x(8[\b8\d6\bf\d1\b4\c5\0bI\b1\f6?\00x\80\90U]\d6\bf\ba\0c/3G\91\f6?\00\00\18v\d0\02\d6\bf#B\"\18\9fq\f6?\00\90\90\86\ca\a8\d5\bf\d9\1e\a5\99OR\f6?\00P\03VCO\d5\bf\c4$\8f\aaV3\f6?\00@k\c37\f6\d4\bf\14\dc\9dk\b3\14\f6?\00P\a8\fd\a7\9d\d4\bfL\\\c6Rd\f6\f5?\00\a8\899\92E\d4\bfO,\91\b5g\d8\f5?\00\b8\b09\f4\ed\d3\bf\de\90[\cb\bc\ba\f5?\00p\8fD\ce\96\d3\bfx\1a\d9\f2a\9d\f5?\00\a0\bd\17\1e@\d3\bf\87VF\12V\80\f5?\00\80F\ef\e2\e9\d2\bf\d3k\e7\ce\97c\f5?\00\e008\1b\94\d2\bf\93\7f\a7\e2%G\f5?\00\88\da\8c\c5>\d2\bf\83E\06B\ff*\f5?\00\90\')\e1\e9\d1\bf\df\bd\b2\db\"\0f\f5?\00\f8H+m\95\d1\bf\d7\de4G\8f\f3\f4?\00\f8\b9\9agA\d1\bf@(\de\cfC\d8\f4?\00\98\ef\94\d0\ed\d0\bf\c8\a3x\c0>\bd\f4?\00\10\db\18\a5\9a\d0\bf\8a%\e0\c3\7f\a2\f4?\00\b8cR\e6G\d0\bf4\84\d4$\05\88\f4?\00\f0\86E\"\eb\cf\bf\0b-\19\1b\cem\f4?\00\b0\17uJG\cf\bfT\189\d3\d9S\f4?\000\10=D\a4\ce\bfZ\84\b4D\':\f4?\00\b0\e9D\0d\02\ce\bf\fb\f8\15A\b5 \f4?\00\f0w)\a2`\cd\bf\b1\f4>\da\82\07\f4?\00\90\95\04\01\c0\cc\bf\8f\feW]\8f\ee\f3?\00\10\89V) \cc\bf\e9L\0b\a0\d9\d5\f3?\00\10\81\8d\17\81\cb\bf+\c1\10\c0`\bd\f3?\00\d0\d3\cc\c9\e2\ca\bf\b8\dau+$\a5\f3?\00\90\12.@E\ca\bf\02\d0\9f\cd\"\8d\f3?\00\f0\1dhw\a8\c9\bf\1cz\84\c5[u\f3?\000Him\0c\c9\bf\e26\adI\ce]\f3?\00\c0E\a6 q\c8\bf@\d4M\98yF\f3?\000\14\b4\8f\d6\c7\bf$\cb\ff\ce\\/\f3?\00pb<\b8<\c7\bfI\0d\a1uw\18\f3?\00`7\9b\9a\a3\c6\bf\909>7\c8\01\f3?\00\a0\b7T1\0b\c6\bfA\f8\95\bbN\eb\f2?\000$v}s\c5\bf\d1\a9\19\02\n\d5\f2?\000\c2\8f{\dc\c4\bf*\fd\b7\a8\f9\be\f2?\00\00\d2Q,F\c4\bf\ab\1b\0cz\1c\a9\f2?\00\00\83\bc\8a\b0\c3\bf0\b5\14`r\93\f2?\00\00Ik\99\1b\c3\bf\f5\a1WW\fa}\f2?\00@\a4\90T\87\c2\bf\bf;\1d\9b\b3h\f2?\00\a0y\f8\b9\f3\c1\bf\bd\f5\8f\83\9dS\f2?\00\a0,%\c8`\c1\bf;\08\c9\aa\b7>\f2?\00 \f7W\7f\ce\c0\bf\b6@\a9+\01*\f2?\00\a0\feI\dc<\c0\bf2A\cc\96y\15\f2?\00\80K\bc\bdW\bf\bf\9b\fc\d2\1d \01\f2?\00@@\96\087\be\bf\0bHMI\f4\ec\f1?\00@\f9>\98\17\bd\bfie\8fR\f5\d8\f1?\00\a0\d8Ng\f9\bb\bf|~W\11#\c5\f1?\00`/ y\dc\ba\bf\e9&\cbt|\b1\f1?\00\80(\e7\c3\c0\b9\bf\b6\1a,\0c\01\9e\f1?\00\c0r\b3F\a6\b8\bf\bdp\b6{\b0\8a\f1?\00\00\ac\b3\01\8d\b7\bf\b6\bc\ef%\8aw\f1?\00\008E\f1t\b6\bf\da1L5\8dd\f1?\00\80\87m\0e^\b5\bf\dd_\'\90\b9Q\f1?\00\e0\a1\de\\H\b4\bfL\d22\a4\0e?\f1?\00\a0jM\d93\b3\bf\da\f9\10r\8b,\f1?\00`\c5\f8y \b2\bf1\b5\ec(0\1a\f1?\00 b\98F\0e\b1\bf\af4\84\da\fb\07\f1?\00\00\d2jl\fa\af\bf\b3kN\0f\ee\f5\f0?\00@wJ\8d\da\ad\bf\ce\9f*]\06\e4\f0?\00\00\85\e4\ec\bc\ab\bf!\a5,cD\d2\f0?\00\c0\12@\89\a1\a9\bf\1a\98\e2|\a7\c0\f0?\00\c0\023X\88\a7\bf\d16\c6\83/\af\f0?\00\80\d6g^q\a5\bf9\13\a0\98\db\9d\f0?\00\80eI\8a\\\a3\bf\df\e7R\af\ab\8c\f0?\00@\15d\e3I\a1\bf\fb(N/\9f{\f0?\00\80\eb\82\c0r\9e\bf\19\8f5\8c\b5j\f0?\00\80RR\f1U\9a\bf,\f9\ec\a5\eeY\f0?\00\80\81\cfb=\96\bf\90,\d1\cdII\f0?\00\00\aa\8c\fb(\92\bf\a9\ad\f0\c6\c68\f0?\00\00\f9 {1\8c\bf\a92y\13e(\f0?\00\00\aa]5\19\84\bfHs\ea\'$\18\f0?\00\00\ec\c2\03\12x\bf\95\b1\14\06\04\08\f0?\00\00$y\t\04`\bf\1a\fa&\f7\1f\e0\ef?\00\00\90\84\f3\efo?t\eaa\c2\1c\a1\ef?\00\00=5A\dc\87?.\99\81\b0\10c\ef?\00\80\c2\c4\a3\ce\93?\cd\ad\ee<\f6%\ef?\00\00\89\14\c1\9f\9b?\e7\13\91\03\c8\e9\ee?\00\00\11\ce\d8\b0\a1?\ab\b1\cbx\80\ae\ee?\00\c0\01\d0[\8a\a5?\9b\0c\9d\a2\1at\ee?\00\80\d8@\83\\\a9?\b5\99\n\83\91:\ee?\00\80W\efj\'\ad?V\9a`\t\e0\01\ee?\00\c0\98\e5\98u\b0?\98\bbw\e5\01\ca\ed?\00 \0d\e3\f5S\b2?\03\91|\0b\f2\92\ed?\00\008\8b\dd.\b4?\ce\\\fbf\ac\\\ed?\00\c0W\87Y\06\b6?\9d\de^\aa,\'\ed?\00\00j5v\da\b7?\cd,k>n\f2\ec?\00`\1cNC\ab\b9?\02y\a7\a2m\be\ec?\00`\0d\bb\c7x\bb?m\087m&\8b\ec?\00 \e72\13C\bd?\04X]\bd\94X\ec?\00`\deq1\n\bf?\8c\9f\bb3\b5&\ec?\00@\91+\15g\c0??\e7\ec\ee\83\f5\eb?\00\b0\92\82\85G\c1?\c1\96\dbu\fd\c4\eb?\000\ca\cdn&\c2?(J\86\0c\1e\95\eb?\00P\c5\a6\d7\03\c3?,>\ef\c5\e2e\eb?\00\103<\c3\df\c3?\8b\88\c9gH7\eb?\00\80zk6\ba\c4?J0\1d!K\t\eb?\00\f0\d1(9\93\c5?~\ef\f2\85\e8\db\ea?\00\f0\18$\cdj\c6?\a2=`1\1d\af\ea?\00\90f\ec\f8@\c7?\a7X\d3?\e6\82\ea?\00\f0\1a\f5\c0\15\c8?\8bs\t\ef@W\ea?\00\80\f6T)\e9\c8?\'K\ab\90*,\ea?\00@\f8\026\bb\c9?\d1\f2\93\13\a0\01\ea?\00\00,\1c\ed\8b\ca?\1b<\db$\9f\d7\e9?\00\d0\01\\Q[\cb?\90\b1\c7\05%\ae\e9?\00\c0\bc\ccg)\cc?/\ce\97\f2.\85\e9?\00`H\d55\f6\cc?uK\a4\ee\ba\\\e9?\00\c0F4\bd\c1\cd?8H\e7\9d\c64\e9?\00\e0\cf\b8\01\8c\ce?\e6Rg/O\0d\e9?\00\90\17\c0\tU\cf?\9d\d7\ff\8eR\e6\e8?\00\b8\1f\12l\0e\d0?|\00\cc\9f\ce\bf\e8?\00\d0\93\0e\b8q\d0?\0e\c3\be\da\c0\99\e8?\00p\86\9ek\d4\d0?\fb\17#\aa\'t\e8?\00\d0K3\876\d1?\08\9a\b3\ac\00O\e8?\00H#g\0d\98\d1?U>e\e8I*\e8?\00\80\cc\e0\ff\f8\d1?`\02\f4\95\01\06\e8?\00hc\d7_Y\d2?)\a3\e0c%\e2\e7?\00\a8\14\t0\b9\d2?\ad\b5\dcw\b3\be\e7?\00`C\10r\18\d3?\c2%\97g\aa\9b\e7?\00\18\ecm&w\d3?W\06\17\f2\07y\e7?\000\af\fbO\d5\d3?\0c\13\d6\db\caV\e7?\00\e0/\e3\ee2\d4?")
 (data (i32.const 8592) "k\b6O\01\00\10\e6?<[B\91l\02~<\95\b4M\03\000\e6?A]\00H\ea\bf\8d<x\d4\94\0d\00P\e6?\b7\a5\d6\86\a7\7f\8e<\adoN\07\00p\e6?L%Tk\ea\fca<\ae\0f\df\fe\ff\8f\e6?\fd\0eYL\'~|\bc\bc\c5c\07\00\b0\e6?\01\da\dcHh\c1\8a\bc\f6\c1\\\1e\00\d0\e6?\11\93I\9d\1c?\83<>\f6\05\eb\ff\ef\e6?S-\e2\1a\04\80~\bc\80\97\86\0e\00\10\e7?Ry\tqf\ff{<\12\e9g\fc\ff/\e7?$\87\bd&\e2\00\8c<j\11\81\df\ffO\e7?\d2\01\f1n\91\02n\bc\90\9cg\0f\00p\e7?t\9cT\cdq\fcg\bc5\c8~\fa\ff\8f\e7?\83\04\f5\9e\c1\be\81<\e6\c2 \fe\ff\af\e7?ed\cc)\17~p\bc\00\c9?\ed\ff\cf\e7?\1c\8b{\08r\80\80\bcv\1a&\e9\ff\ef\e7?\ae\f9\9dm(\c0\8d<\e8\a3\9c\04\00\10\e8?3L\e5Q\d2\7f\89<\8f,\93\17\000\e8?\81\f30\b6\e9\fe\8a\bc\9cs3\06\00P\e8?\bc5ek\bf\bf\89<\c6\89B \00p\e8?u{\11\f3e\bf\8b\bc\04y\f5\eb\ff\8f\e8?W\cb=\a2n\00\89\bc\df\04\bc\"\00\b0\e8?\nK\e08\df\00}\bc\8a\1b\0c\e5\ff\cf\e8?\05\9f\ffFq\00\88\bcC\8e\91\fc\ff\ef\e8?8pz\d0{\81\83<\c7_\fa\1e\00\10\e9?\03\b4\dfv\91>\89<\b9{F\13\000\e9?v\02\98KN\80\7f<o\07\ee\e6\ffO\e9?.b\ff\d9\f0~\8f\bc\d1\12<\de\ffo\e9?\ba8&\96\aa\82p\bc\0d\8aE\f4\ff\8f\e9?\ef\a8d\91\1b\80\87\bc>.\98\dd\ff\af\e9?7\93Z\8a\e0@\87\bcf\fbI\ed\ff\cf\e9?\00\e0\9b\c1\08\ce?<Q\9c\f1 \00\f0\e9?\n[\88\'\aa?\8a\bc\06\b0E\11\00\10\ea?V\daX\99H\fft<\fa\f6\bb\07\000\ea?\18m+\8a\ab\be\8c<y\1d\97\10\00P\ea?0yx\dd\ca\fe\88<H.\f5\1d\00p\ea?\db\ab\d8=vA\8f\bcR3Y\1c\00\90\ea?\12v\c2\84\02\bf\8e\bcK>O*\00\b0\ea?_?\ff<\04\fdi\bc\d1\1e\ae\d7\ff\cf\ea?\b4p\90\12\e7>\82\bcx\04Q\ee\ff\ef\ea?\a3\de\0e\e0>\06j<[\0de\db\ff\0f\eb?\b9\n\1f8\c8\06Z<W\ca\aa\fe\ff/\eb?\1d<#t\1e\01y\bc\dc\ba\95\d9\ffO\eb?\9f*\86h\10\ffy\bc\9ce\9e$\00p\eb?>O\86\d0E\ff\8a<@\16\87\f9\ff\8f\eb?\f9\c3\c2\96w\fe|<O\cb\04\d2\ff\af\eb?\c4+\f2\ee\'\ffc\bcE\\A\d2\ff\cf\eb?!\ea;\ee\b7\ffl\bc\df\tc\f8\ff\ef\eb?\\\0b.\97\03A\81\bcSv\b5\e1\ff\0f\ec?\19j\b7\94d\c1\8b<\e3W\fa\f1\ff/\ec?\ed\c60\8d\ef\fed\bc$\e4\bf\dc\ffO\ec?uG\ec\bch?\84\bc\f7\b9T\ed\ffo\ec?\ec\e0S\f0\a3~\84<\d5\8f\99\eb\ff\8f\ec?\f1\92\f9\8d\06\83s<\9a!%!\00\b0\ec?\04\0e\18d\8e\fdh\bc\9cF\94\dd\ff\cf\ec?r\ea\c7\1c\be~\8e<v\c4\fd\ea\ff\ef\ec?\fe\88\9f\ad9\be\8e<+\f8\9a\16\00\10\ed?qZ\b9\a8\91}u<\1d\f7\0f\0d\000\ed?\da\c7pi\90\c1\89<\c4\0fy\ea\ffO\ed?\0c\feX\c57\0eX\bc\e5\87\dc.\00p\ed?D\0f\c1M\d6\80\7f\bc\aa\82\dc!\00\90\ed?\\\\\fd\94\8f|t\bc\83\02k\d8\ff\af\ed?~a!\c5\1d\7f\8c<9Gl)\00\d0\ed?S\b1\ff\b2\9e\01\88<\f5\90D\e5\ff\ef\ed?\89\ccR\c6\d2\00n<\94\f6\ab\cd\ff\0f\ee?\d2i- @\83\7f\bc\dd\c8R\db\ff/\ee?d\08\1b\ca\c1\00{<\ef\16B\f2\ffO\ee?Q\ab\94\b0\a8\ffr<\11^\8a\e8\ffo\ee?Y\be\ef\b1s\f6W\bc\0d\ff\9e\11\00\90\ee?\01\c8\0b^\8d\80\84\bcD\17\a5\df\ff\af\ee?\b5 C\d5\06\00x<\a1\7f\12\1a\00\d0\ee?\92\\V`\f8\02P\bc\c4\bc\ba\07\00\f0\ee?\11\e65]D@\85\bc\02\8dz\f5\ff\0f\ef?\05\91\ef91\fbO\bc\c7\8a\e5\1e\000\ef?U\11s\f2\ac\81\8a<\944\82\f5\ffO\ef?C\c7\d7\d4A?\8a<kL\a9\fc\ffo\ef?ux\98\1c\f4\02b\bcA\c4\f9\e1\ff\8f\ef?K\e7w\f4\d1}w<~\e3\e0\d2\ff\af\ef?1\a3|\9a\19\01o\bc\9e\e4w\1c\00\d0\ef?\b1\ac\ceK\ee\81q<1\c3\e0\f7\ff\ef\ef?Z\87p\017\05n\bcn`e\f4\ff\0f\f0?\da\n\1cI\ad~\8a\bcXz\86\f3\ff/\f0?\e0\b2\fc\c3i\7f\97\bc\17\0d\fc\fd\ffO\f0?[\94\cb4\fe\bf\97<\82M\cd\03\00p\f0?\cbV\e4\c0\83\00\82<\e8\cb\f2\f9\ff\8f\f0?\1au7\be\df\ffm\bce\da\0c\01\00\b0\f0?\eb&\e6\ae\7f?\91\bc8\d3\a4\01\00\d0\f0?\f7\9fHy\fa}\80<\fd\fd\da\fa\ff\ef\f0?\c0k\d6p\05\04w\bc\96\fd\ba\0b\00\10\f1?b\0bm\84\d4\80\8e<]\f4\e5\fa\ff/\f1?\ef6\fdd\fa\bf\9d<\d9\9a\d5\0d\00P\f1?\aeP\12pw\00\9a<\9aU!\0f\00p\f1?\ee\de\e3\e2\f9\fd\8d<&T\'\fc\ff\8f\f1?sr;\dc0\00\91<Y<=\12\00\b0\f1?\88\01\03\80y\7f\99<\b7\9e)\f8\ff\cf\f1?g\8c\9f\ab2\f9e\bc\00\d4\8a\f4\ff\ef\f1?\eb[\a7\9d\bf\7f\93<\a4\86\8b\0c\00\10\f2?\"[\fd\91k\80\9f<\03C\85\03\000\f2?3\bf\9f\eb\c2\ff\93<\84\f6\bc\ff\ffO\f2?r..~\e7\01v<\d9!)\f5\ffo\f2?a\0c\7fv\bb\fc\7f<<:\93\14\00\90\f2?+A\02<\ca\02r\bc\13cU\14\00\b0\f2?\02\1f\f23\82\80\92\bc;R\fe\eb\ff\cf\f2?\f2\dcO8~\ff\88\bc\96\ad\b8\0b\00\f0\f2?\c5A0PQ\ff\85\bc\af\e2z\fb\ff\0f\f3?\9d(^\88q\00\81\bc\7f_\ac\fe\ff/\f3?\15\b7\b7?]\ff\91\bcVg\a6\0c\00P\f3?\bd\82\8b\"\82\7f\95<!\f7\fb\11\00p\f3?\cc\d5\0d\c4\ba\00\80<\b9/Y\f9\ff\8f\f3?Q\a7\b2-\9d?\94\bcB\d2\dd\04\00\b0\f3?\e18vpk\7f\85<W\c9\b2\f5\ff\cf\f3?1\12\bf\10:\02z<\18\b4\b0\ea\ff\ef\f3?\b0R\b1fm\7f\98<\f4\af2\15\00\10\f4?$\85\19_7\f8g<)\8bG\17\000\f4?CQ\dcr\e6\01\83<c\b4\95\e7\ffO\f4?Z\89\b2\b8i\ff\89<\e0u\04\e8\ffo\f4?T\f2\c2\9b\b1\c0\95\bc\e7\c1o\ef\ff\8f\f4?r*:\f2\t@\9b<\04\a7\be\e5\ff\af\f4?E}\0d\bf\b7\ff\94\bc\de\'\10\17\00\d0\f4?=j\dcqd\c0\99\bc\e2>\f0\0f\00\f0\f4?\1cS\85\0b\89\7f\97<\d1K\dc\12\00\10\f5?6\a4fqe\04`<z\'\05\16\000\f5?\t2#\ce\ce\bf\96\bcLp\db\ec\ffO\f5?\d7\a1\05\05r\02\89\bc\a9T_\ef\ffo\f5?\12d\c9\0e\e6\bf\9b<\12\10\e6\17\00\90\f5?\90\ef\af\81\c5~\88<\92>\c9\03\00\b0\f5?\c0\0c\bf\n\08A\9f\bc\bc\19I\1d\00\d0\f5?)G%\fb*\81\98\bc\89z\b8\e7\ff\ef\f5?\04i\ed\80\b7~\94\bc")
 (data (i32.const 10652) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00x\00y\00z\00\00\00\00\00\00\00")
 (data (i32.const 10684) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00x\00z\00y\00\00\00\00\00\00\00")
 (data (i32.const 10716) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00y\00x\00z\00\00\00\00\00\00\00")
 (data (i32.const 10748) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00y\00z\00x\00\00\00\00\00\00\00")
 (data (i32.const 10780) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00z\00x\00y\00\00\00\00\00\00\00")
 (data (i32.const 10812) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00U\00n\00k\00n\00o\00w\00n\00 \00a\00n\00g\00l\00e\00 \00o\00r\00d\00e\00r\00 \00\00\00\00\00")
 (data (i32.const 10876) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00a\00s\00s\00e\00m\00b\00l\00y\00/\00q\00u\00a\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10940) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00q\00u\00a\00t\00(\00\00\00")
 (data (i32.const 10972) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\00q\00u\00a\00t\002\00(\00")
 (data (i32.const 11004) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00v\00e\00c\002\00(\00\00\00")
 (data (i32.const 11036) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11068) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11100) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data (i32.const 11148) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11180) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11212) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11244) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11276) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00v\00e\00c\003\00(\00\00\00")
 (data (i32.const 11308) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00v\00e\00c\004\00(\00\00\00")
 (data (i32.const 11340) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00*\00\00\00O\00b\00j\00e\00c\00t\00 \00a\00l\00r\00e\00a\00d\00y\00 \00p\00i\00n\00n\00e\00d\00\00\00")
 (data (i32.const 11404) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00O\00b\00j\00e\00c\00t\00 \00i\00s\00 \00n\00o\00t\00 \00p\00i\00n\00n\00e\00d\00\00\00\00\00")
 (data (i32.const 11472) "-\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00A\08\00\00\02\00\00\00A\00\00\00\02\00\00\00\81\08\00\00\02\00\00\00\81\00\00\00\02\00\00\00\01\t\00\00\02\00\00\00\01\01\00\00\02\00\00\00\01\19\00\00\02\00\00\00\01\1a\00\00\02\00\00\00\01\n\00\00\02\00\00\00\01\02\00\00\02\00\00\00\02\t\00\00\00\00\00\00\02\n\00\00\00\00\00\00\02A\00\00\00\00\00\00B\00\00\00\00\00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00\02\1a
 (table $0 58 funcref)
 (elem $0 (i32.const 1) $~lib/math/NativeMath.random $assembly/mat2d/multiply $assembly/mat2d/subtract $assembly/vec3/subtract $assembly/vec3/multiply $assembly/vec3/divide $~lib/math/NativeMath.hypot $assembly/vec3/distance $assembly/vec3/squaredDistance $assembly/vec3/length $assembly/vec3/squaredLength $start:assembly/vec3~anonymous|0~anonymous|0 $start:assembly/vec3~anonymous|0 $assembly/vec4/subtract $assembly/vec4/multiply $assembly/vec4/divide $assembly/vec4/distance $assembly/vec4/squaredDistance $assembly/vec4/length $assembly/vec4/squaredLength $start:assembly/vec4~anonymous|0~anonymous|0 $start:assembly/vec4~anonymous|0 $assembly/vec4/clone $assembly/vec4/fromValues $assembly/vec4/copy $assembly/vec4/set $assembly/vec4/add $assembly/quat/multiply $assembly/vec4/scale $assembly/vec4/dot $assembly/vec4/lerp $assembly/vec4/normalize $assembly/vec4/exactEquals $start:assembly/quat~anonymous|0~anonymous|0 $start:assembly/quat~anonymous|0 $start:assembly/quat~anonymous|1~anonymous|0 $start:assembly/quat~anonymous|1 $start:assembly/quat~anonymous|2~anonymous|0 $start:assembly/quat~anonymous|2 $assembly/quat2/multiply $assembly/mat4/perspectiveNO $assembly/mat4/orthoNO $assembly/mat4/multiply $assembly/mat4/subtract $assembly/mat3/multiply $assembly/mat3/subtract $assembly/vec2/length $assembly/vec2/subtract $assembly/vec2/multiply $assembly/vec2/divide $assembly/vec2/distance $assembly/vec2/squaredDistance $assembly/vec2/squaredLength $start:assembly/vec2~anonymous|0~anonymous|0 $start:assembly/vec2~anonymous|0 $assembly/mat2/multiply $assembly/mat2/subtract)
 (export "__asbind_entryfile_flag" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_entryfile_flag))
 (export "__asbind_String_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_String_ID))
 (export "__asbind_ArrayBuffer_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_ArrayBuffer_ID))
 (export "__asbind_ArrayBufferView_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_ArrayBufferView_ID))
 (export "__asbind_Int8Array_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Int8Array_ID))
 (export "__asbind_Uint8Array_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Uint8Array_ID))
 (export "__asbind_Int16Array_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Int16Array_ID))
 (export "__asbind_Uint16Array_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Uint16Array_ID))
 (export "__asbind_Int32Array_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Int32Array_ID))
 (export "__asbind_Uint32Array_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Uint32Array_ID))
 (export "__asbind_Float32Array_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Float32Array_ID))
 (export "__asbind_Float64Array_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Float64Array_ID))
 (export "__asbind_Int64Array_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Int64Array_ID))
 (export "__asbind_Uint64Array_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_Uint64Array_ID))
 (export "__asbind_I32Array_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_I32Array_ID))
 (export "__asbind_I64Array_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_I64Array_ID))
 (export "__asbind_StringArray_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_StringArray_ID))
 (export "__asbind_BoolArray_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_BoolArray_ID))
 (export "__asbind_I32ArrayArray_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_I32ArrayArray_ID))
 (export "__asbind_I64ArrayArray_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_I64ArrayArray_ID))
 (export "__asbind_StringArrayArray_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_StringArrayArray_ID))
 (export "__asbind_BoolArrayArray_ID" (global $node_modules/as-bind/lib/assembly/as-bind/__asbind_BoolArrayArray_ID))
 (export "glMatrix.EPSILON" (global $assembly/common/EPSILON))
 (export "glMatrix.ArrayTypeEnum.Float64ArrayT" (global $assembly/common/ArrayTypeEnum.Float64ArrayT))
 (export "glMatrix.ArrayTypeEnum.ArrayF64T" (global $assembly/common/ArrayTypeEnum.ArrayF64T))
 (export "glMatrix.ARRAY_TYPE" (global $assembly/common/ARRAY_TYPE))
 (export "glMatrix.RANDOM" (global $assembly/common/RANDOM))
 (export "glMatrix.ANGLE_ORDER" (global $assembly/common/ANGLE_ORDER))
 (export "glMatrix.setMatrixArrayType" (func $assembly/common/setMatrixArrayType))
 (export "glMatrix.toRadian" (func $assembly/common/toRadian))
 (export "glMatrix.equals" (func $assembly/common/equals))
 (export "mat2.create" (func $assembly/mat2/create))
 (export "mat2.fromValues" (func $assembly/mat2/fromValues))
 (export "mat2.mul" (global $assembly/mat2/mul))
 (export "mat2.sub" (global $assembly/mat2/sub))
 (export "mat2d.create" (func $assembly/mat2d/create))
 (export "mat2d.fromValues" (func $assembly/mat2d/fromValues))
 (export "mat2d.mul" (global $assembly/mat2d/mul))
 (export "mat2d.sub" (global $assembly/mat2d/sub))
 (export "mat3.create" (func $assembly/mat3/create))
 (export "mat3.fromValues" (func $assembly/mat3/fromValues))
 (export "mat3.mul" (global $assembly/mat3/mul))
 (export "mat3.sub" (global $assembly/mat3/sub))
 (export "mat4.Fov" (global $assembly/mat4/Fov))
 (export "mat4.create" (func $assembly/mat4/create))
 (export "mat4.fromValues" (func $assembly/mat4/fromValues))
 (export "mat4.perspective" (global $assembly/mat4/perspective))
 (export "mat4.ortho" (global $assembly/mat4/ortho))
 (export "mat4.mul" (global $assembly/mat4/mul))
 (export "mat4.sub" (global $assembly/mat4/sub))
 (export "quat.create" (func $assembly/quat/create))
 (export "quat.clone" (global $assembly/quat/clone))
 (export "quat.fromValues" (global $assembly/quat/fromValues))
 (export "quat.copy" (global $assembly/quat/copy))
 (export "quat.set" (global $assembly/quat/set))
 (export "quat.add" (global $assembly/quat/add))
 (export "quat.mul" (global $assembly/quat/mul))
 (export "quat.scale" (global $assembly/quat/scale))
 (export "quat.dot" (global $assembly/quat/dot))
 (export "quat.lerp" (global $assembly/quat/lerp))
 (export "quat.length" (global $assembly/quat/length))
 (export "quat.len" (global $assembly/quat/len))
 (export "quat.squaredLength" (global $assembly/quat/squaredLength))
 (export "quat.sqrLen" (global $assembly/quat/sqrLen))
 (export "quat.normalize" (global $assembly/quat/normalize))
 (export "quat.exactEquals" (global $assembly/quat/exactEquals))
 (export "quat.rotationTo" (global $assembly/quat/rotationTo))
 (export "quat.sqlerp" (global $assembly/quat/sqlerp))
 (export "quat.setAxes" (global $assembly/quat/setAxes))
 (export "quat2.create" (func $assembly/quat2/create))
 (export "quat2.fromValues" (func $assembly/quat2/fromValues))
 (export "quat2.fromRotationTranslationValues" (func $assembly/quat2/fromRotationTranslationValues))
 (export "quat2.getReal" (global $assembly/quat2/getReal))
 (export "quat2.setReal" (global $assembly/quat2/setReal))
 (export "quat2.mul" (global $assembly/quat2/mul))
 (export "quat2.dot" (global $assembly/quat2/dot))
 (export "quat2.length" (global $assembly/quat2/length))
 (export "quat2.len" (global $assembly/quat2/len))
 (export "quat2.squaredLength" (global $assembly/quat2/squaredLength))
 (export "quat2.sqrLen" (global $assembly/quat2/sqrLen))
 (export "vec2.create" (func $assembly/vec2/create))
 (export "vec2.fromValues" (func $assembly/vec2/fromValues))
 (export "vec2.len" (global $assembly/vec2/len))
 (export "vec2.sub" (global $assembly/vec2/sub))
 (export "vec2.mul" (global $assembly/vec2/mul))
 (export "vec2.div" (global $assembly/vec2/div))
 (export "vec2.dist" (global $assembly/vec2/dist))
 (export "vec2.sqrDist" (global $assembly/vec2/sqrDist))
 (export "vec2.sqrLen" (global $assembly/vec2/sqrLen))
 (export "vec2.forEach" (global $assembly/vec2/forEach))
 (export "vec3.create" (func $assembly/vec3/create))
 (export "vec3.fromValues" (func $assembly/vec3/fromValues))
 (export "vec3.sub" (global $assembly/vec3/sub))
 (export "vec3.mul" (global $assembly/vec3/mul))
 (export "vec3.div" (global $assembly/vec3/div))
 (export "vec3.dist" (global $assembly/vec3/dist))
 (export "vec3.sqrDist" (global $assembly/vec3/sqrDist))
 (export "vec3.len" (global $assembly/vec3/len))
 (export "vec3.sqrLen" (global $assembly/vec3/sqrLen))
 (export "vec3.forEach" (global $assembly/vec3/forEach))
 (export "vec4.create" (func $assembly/vec4/create))
 (export "vec4.fromValues" (func $assembly/vec4/fromValues))
 (export "vec4.sub" (global $assembly/vec4/sub))
 (export "vec4.mul" (global $assembly/vec4/mul))
 (export "vec4.div" (global $assembly/vec4/div))
 (export "vec4.dist" (global $assembly/vec4/dist))
 (export "vec4.sqrDist" (global $assembly/vec4/sqrDist))
 (export "vec4.len" (global $assembly/vec4/len))
 (export "vec4.sqrLen" (global $assembly/vec4/sqrLen))
 (export "vec4.forEach" (global $assembly/vec4/forEach))
 (export "__new" (func $~lib/rt/itcms/__new))
 (export "__pin" (func $~lib/rt/itcms/__pin))
 (export "__unpin" (func $~lib/rt/itcms/__unpin))
 (export "__collect" (func $~lib/rt/itcms/__collect))
 (export "__rtti_base" (global $~lib/rt/__rtti_base))
 (export "memory" (memory $0))
 (export "__setArgumentsLength" (func $~setArgumentsLength))
 (export "mat2.clone" (func $export:assembly/mat2/clone))
 (export "mat2.copy" (func $export:assembly/mat2/copy))
 (export "mat2.identity" (func $export:assembly/mat2/identity))
 (export "mat2.set" (func $export:assembly/mat2/set))
 (export "mat2.transpose" (func $export:assembly/mat2/transpose))
 (export "mat2.invert" (func $export:assembly/mat2/invert))
 (export "mat2.adjoint" (func $export:assembly/mat2/adjoint))
 (export "mat2.determinant" (func $export:assembly/mat2/determinant))
 (export "mat2.multiply" (func $export:assembly/mat2/multiply))
 (export "mat2.rotate" (func $export:assembly/mat2/rotate))
 (export "mat2.scale" (func $export:assembly/mat2/scale))
 (export "mat2.fromRotation" (func $export:assembly/mat2/fromRotation))
 (export "mat2.fromScaling" (func $export:assembly/mat2/fromScaling))
 (export "mat2.str" (func $export:assembly/mat2/str))
 (export "mat2.frob" (func $export:assembly/mat2/frob))
 (export "mat2.LDU" (func $export:assembly/mat2/LDU))
 (export "mat2.add" (func $export:assembly/mat2/add))
 (export "mat2.subtract" (func $export:assembly/mat2/subtract))
 (export "mat2.exactEquals" (func $export:assembly/mat2/exactEquals))
 (export "mat2.equals" (func $export:assembly/mat2/equals))
 (export "mat2.multiplyScalar" (func $export:assembly/mat2/multiplyScalar))
 (export "mat2.multiplyScalarAndAdd" (func $export:assembly/mat2/multiplyScalarAndAdd))
 (export "mat2d.clone" (func $export:assembly/mat2d/clone))
 (export "mat2d.copy" (func $export:assembly/mat2d/copy))
 (export "mat2d.identity" (func $export:assembly/mat2d/identity))
 (export "mat2d.set" (func $export:assembly/mat2d/set))
 (export "mat2d.invert" (func $export:assembly/mat2d/invert))
 (export "mat2d.determinant" (func $export:assembly/mat2d/determinant))
 (export "mat2d.multiply" (func $export:assembly/mat2d/multiply))
 (export "mat2d.rotate" (func $export:assembly/mat2d/rotate))
 (export "mat2d.scale" (func $export:assembly/mat2d/scale))
 (export "mat2d.translate" (func $export:assembly/mat2d/translate))
 (export "mat2d.fromRotation" (func $export:assembly/mat2d/fromRotation))
 (export "mat2d.fromScaling" (func $export:assembly/mat2d/fromScaling))
 (export "mat2d.fromTranslation" (func $export:assembly/mat2d/fromTranslation))
 (export "mat2d.str" (func $export:assembly/mat2d/str))
 (export "mat2d.frob" (func $export:assembly/mat2d/frob))
 (export "mat2d.add" (func $export:assembly/mat2d/add))
 (export "mat2d.subtract" (func $export:assembly/mat2d/subtract))
 (export "mat2d.multiplyScalar" (func $export:assembly/mat2d/multiplyScalar))
 (export "mat2d.multiplyScalarAndAdd" (func $export:assembly/mat2d/multiplyScalarAndAdd))
 (export "mat2d.exactEquals" (func $export:assembly/mat2d/exactEquals))
 (export "mat2d.equals" (func $export:assembly/mat2d/equals))
 (export "mat3.fromMat4" (func $export:assembly/mat3/fromMat4))
 (export "mat3.clone" (func $export:assembly/mat3/clone))
 (export "mat3.copy" (func $export:assembly/mat3/copy))
 (export "mat3.set" (func $export:assembly/mat3/set))
 (export "mat3.identity" (func $export:assembly/mat3/identity))
 (export "mat3.transpose" (func $export:assembly/mat3/transpose))
 (export "mat3.invert" (func $export:assembly/mat3/invert))
 (export "mat3.adjoint" (func $export:assembly/mat3/adjoint))
 (export "mat3.determinant" (func $export:assembly/mat3/determinant))
 (export "mat3.multiply" (func $export:assembly/mat3/multiply))
 (export "mat3.translate" (func $export:assembly/mat3/translate))
 (export "mat3.rotate" (func $export:assembly/mat3/rotate))
 (export "mat3.scale" (func $export:assembly/mat3/scale))
 (export "mat3.fromTranslation" (func $export:assembly/mat3/fromTranslation))
 (export "mat3.fromRotation" (func $export:assembly/mat3/fromRotation))
 (export "mat3.fromScaling" (func $export:assembly/mat3/fromScaling))
 (export "mat3.fromMat2d" (func $export:assembly/mat3/fromMat2d))
 (export "mat3.fromQuat" (func $export:assembly/mat3/fromQuat))
 (export "mat3.normalFromMat4" (func $export:assembly/mat3/normalFromMat4))
 (export "mat3.projection" (func $export:assembly/mat3/projection))
 (export "mat3.str" (func $export:assembly/mat3/str))
 (export "mat3.frob" (func $export:assembly/mat3/frob))
 (export "mat3.add" (func $export:assembly/mat3/add))
 (export "mat3.subtract" (func $export:assembly/mat3/subtract))
 (export "mat3.multiplyScalar" (func $export:assembly/mat3/multiplyScalar))
 (export "mat3.multiplyScalarAndAdd" (func $export:assembly/mat3/multiplyScalarAndAdd))
 (export "mat3.exactEquals" (func $export:assembly/mat3/exactEquals))
 (export "mat3.equals" (func $export:assembly/mat3/equals))
 (export "mat4.Fov#get:upDegrees" (func $export:assembly/mat4/Fov#get:upDegrees))
 (export "mat4.Fov#set:upDegrees" (func $export:assembly/mat4/Fov#set:upDegrees))
 (export "mat4.Fov#get:downDegrees" (func $export:assembly/mat4/Fov#get:downDegrees))
 (export "mat4.Fov#set:downDegrees" (func $export:assembly/mat4/Fov#set:downDegrees))
 (export "mat4.Fov#get:leftDegrees" (func $export:assembly/mat4/Fov#get:leftDegrees))
 (export "mat4.Fov#set:leftDegrees" (func $export:assembly/mat4/Fov#set:leftDegrees))
 (export "mat4.Fov#get:rightDegrees" (func $export:assembly/mat4/Fov#get:rightDegrees))
 (export "mat4.Fov#set:rightDegrees" (func $export:assembly/mat4/Fov#set:rightDegrees))
 (export "mat4.Fov#constructor" (func $export:assembly/mat4/Fov#constructor))
 (export "mat4.clone" (func $export:assembly/mat4/clone))
 (export "mat4.copy" (func $export:assembly/mat4/copy))
 (export "mat4.set" (func $export:assembly/mat4/set))
 (export "mat4.identity" (func $export:assembly/mat4/identity))
 (export "mat4.transpose" (func $export:assembly/mat4/transpose))
 (export "mat4.invert" (func $export:assembly/mat4/invert))
 (export "mat4.adjoint" (func $export:assembly/mat4/adjoint))
 (export "mat4.determinant" (func $export:assembly/mat4/determinant))
 (export "mat4.multiply" (func $export:assembly/mat4/multiply))
 (export "mat4.translate" (func $export:assembly/mat4/translate))
 (export "mat4.scale" (func $export:assembly/mat4/scale))
 (export "mat4.rotate" (func $export:assembly/mat4/rotate))
 (export "mat4.rotateX" (func $export:assembly/mat4/rotateX))
 (export "mat4.rotateY" (func $export:assembly/mat4/rotateY))
 (export "mat4.rotateZ" (func $export:assembly/mat4/rotateZ))
 (export "mat4.fromTranslation" (func $export:assembly/mat4/fromTranslation))
 (export "mat4.fromScaling" (func $export:assembly/mat4/fromScaling))
 (export "mat4.fromRotation" (func $export:assembly/mat4/fromRotation))
 (export "mat4.fromXRotation" (func $export:assembly/mat4/fromXRotation))
 (export "mat4.fromYRotation" (func $export:assembly/mat4/fromYRotation))
 (export "mat4.fromZRotation" (func $export:assembly/mat4/fromZRotation))
 (export "mat4.fromRotationTranslation" (func $export:assembly/mat4/fromRotationTranslation))
 (export "mat4.fromQuat2" (func $export:assembly/mat4/fromQuat2))
 (export "mat4.getTranslation" (func $export:assembly/mat4/getTranslation))
 (export "mat4.getScaling" (func $export:assembly/mat4/getScaling))
 (export "mat4.getRotation" (func $export:assembly/mat4/getRotation))
 (export "mat4.decompose" (func $export:assembly/mat4/decompose))
 (export "mat4.fromRotationTranslationScale" (func $export:assembly/mat4/fromRotationTranslationScale))
 (export "mat4.fromRotationTranslationScaleOrigin" (func $export:assembly/mat4/fromRotationTranslationScaleOrigin))
 (export "mat4.fromQuat" (func $export:assembly/mat4/fromQuat))
 (export "mat4.frustum" (func $export:assembly/mat4/frustum))
 (export "mat4.perspectiveNO" (func $export:assembly/mat4/perspectiveNO))
 (export "mat4.perspectiveZO" (func $export:assembly/mat4/perspectiveZO))
 (export "mat4.perspectiveFromFieldOfView" (func $export:assembly/mat4/perspectiveFromFieldOfView))
 (export "mat4.orthoNO" (func $export:assembly/mat4/orthoNO))
 (export "mat4.orthoZO" (func $export:assembly/mat4/orthoZO))
 (export "mat4.lookAt" (func $export:assembly/mat4/lookAt))
 (export "mat4.targetTo" (func $export:assembly/mat4/targetTo))
 (export "mat4.str" (func $export:assembly/mat4/str))
 (export "mat4.frob" (func $export:assembly/mat4/frob))
 (export "mat4.add" (func $export:assembly/mat4/add))
 (export "mat4.subtract" (func $export:assembly/mat4/subtract))
 (export "mat4.multiplyScalar" (func $export:assembly/mat4/multiplyScalar))
 (export "mat4.multiplyScalarAndAdd" (func $export:assembly/mat4/multiplyScalarAndAdd))
 (export "mat4.exactEquals" (func $export:assembly/mat4/exactEquals))
 (export "mat4.equals" (func $export:assembly/mat4/equals))
 (export "quat.identity" (func $export:assembly/quat/identity))
 (export "quat.setAxisAngle" (func $export:assembly/quat/setAxisAngle))
 (export "quat.getAxisAngle" (func $export:assembly/quat/getAxisAngle))
 (export "quat.getAngle" (func $export:assembly/quat/getAngle))
 (export "quat.multiply" (func $export:assembly/quat/multiply))
 (export "quat.rotateX" (func $export:assembly/quat/rotateX))
 (export "quat.rotateY" (func $export:assembly/quat/rotateY))
 (export "quat.rotateZ" (func $export:assembly/quat/rotateZ))
 (export "quat.calculateW" (func $export:assembly/quat/calculateW))
 (export "quat.exp" (func $export:assembly/quat/exp))
 (export "quat.ln" (func $export:assembly/quat/ln))
 (export "quat.pow" (func $export:assembly/quat/pow))
 (export "quat.slerp" (func $export:assembly/quat/slerp))
 (export "quat.random" (func $export:assembly/quat/random))
 (export "quat.invert" (func $export:assembly/quat/invert))
 (export "quat.conjugate" (func $export:assembly/quat/conjugate))
 (export "quat.fromMat3" (func $export:assembly/quat/fromMat3))
 (export "quat.fromEuler" (func $export:assembly/quat/fromEuler@varargs))
 (export "quat.str" (func $export:assembly/quat/str))
 (export "quat.equals" (func $export:assembly/quat/equals))
 (export "quat2.clone" (func $export:assembly/quat2/clone))
 (export "quat2.fromRotationTranslation" (func $export:assembly/quat2/fromRotationTranslation))
 (export "quat2.fromTranslation" (func $export:assembly/quat2/fromTranslation))
 (export "quat2.fromRotation" (func $export:assembly/quat2/fromRotation))
 (export "quat2.fromMat4" (func $export:assembly/quat2/fromMat4))
 (export "quat2.copy" (func $export:assembly/quat2/copy))
 (export "quat2.identity" (func $export:assembly/quat2/identity))
 (export "quat2.set" (func $export:assembly/quat2/set))
 (export "quat2.getDual" (func $export:assembly/quat2/getDual))
 (export "quat2.setDual" (func $export:assembly/quat2/setDual))
 (export "quat2.getTranslation" (func $export:assembly/quat2/getTranslation))
 (export "quat2.translate" (func $export:assembly/quat2/translate))
 (export "quat2.rotateX" (func $export:assembly/quat2/rotateX))
 (export "quat2.rotateY" (func $export:assembly/quat2/rotateY))
 (export "quat2.rotateZ" (func $export:assembly/quat2/rotateZ))
 (export "quat2.rotateByQuatAppend" (func $export:assembly/quat2/rotateByQuatAppend))
 (export "quat2.rotateByQuatPrepend" (func $export:assembly/quat2/rotateByQuatPrepend))
 (export "quat2.rotateAroundAxis" (func $export:assembly/quat2/rotateAroundAxis))
 (export "quat2.add" (func $export:assembly/quat2/add))
 (export "quat2.multiply" (func $export:assembly/quat2/multiply))
 (export "quat2.scale" (func $export:assembly/quat2/scale))
 (export "quat2.lerp" (func $export:assembly/quat2/lerp))
 (export "quat2.invert" (func $export:assembly/quat2/invert))
 (export "quat2.conjugate" (func $export:assembly/quat2/conjugate))
 (export "quat2.normalize" (func $export:assembly/quat2/normalize))
 (export "quat2.str" (func $export:assembly/quat2/str))
 (export "quat2.exactEquals" (func $export:assembly/quat2/exactEquals))
 (export "quat2.equals" (func $export:assembly/quat2/equals))
 (export "vec2.clone" (func $export:assembly/vec2/clone))
 (export "vec2.copy" (func $export:assembly/vec2/copy))
 (export "vec2.set" (func $export:assembly/vec2/set))
 (export "vec2.add" (func $export:assembly/vec2/add))
 (export "vec2.subtract" (func $export:assembly/vec2/subtract))
 (export "vec2.multiply" (func $export:assembly/vec2/multiply))
 (export "vec2.divide" (func $export:assembly/vec2/divide))
 (export "vec2.ceil" (func $export:assembly/vec2/ceil))
 (export "vec2.floor" (func $export:assembly/vec2/floor))
 (export "vec2.min" (func $export:assembly/vec2/min))
 (export "vec2.max" (func $export:assembly/vec2/max))
 (export "vec2.round" (func $export:assembly/vec2/round))
 (export "vec2.scale" (func $export:assembly/vec2/scale))
 (export "vec2.scaleAndAdd" (func $export:assembly/vec2/scaleAndAdd))
 (export "vec2.distance" (func $export:assembly/vec2/distance))
 (export "vec2.squaredDistance" (func $export:assembly/vec2/squaredDistance))
 (export "vec2.length" (func $export:assembly/vec2/length))
 (export "vec2.squaredLength" (func $export:assembly/vec2/squaredLength))
 (export "vec2.negate" (func $export:assembly/vec2/negate))
 (export "vec2.inverse" (func $export:assembly/vec2/inverse))
 (export "vec2.normalize" (func $export:assembly/vec2/normalize))
 (export "vec2.dot" (func $export:assembly/vec2/dot))
 (export "vec2.cross" (func $export:assembly/vec2/cross))
 (export "vec2.lerp" (func $export:assembly/vec2/lerp))
 (export "vec2.random" (func $export:assembly/vec2/random))
 (export "vec2.transformMat2" (func $export:assembly/vec2/transformMat2))
 (export "vec2.transformMat2d" (func $export:assembly/vec2/transformMat2d))
 (export "vec2.transformMat3" (func $export:assembly/vec2/transformMat3))
 (export "vec2.transformMat4" (func $export:assembly/vec2/transformMat4))
 (export "vec2.rotate" (func $export:assembly/vec2/rotate))
 (export "vec2.angle" (func $export:assembly/vec2/angle))
 (export "vec2.zero" (func $export:assembly/vec2/zero))
 (export "vec2.str" (func $export:assembly/vec2/str))
 (export "vec2.exactEquals" (func $export:assembly/vec2/exactEquals))
 (export "vec2.equals" (func $export:assembly/vec2/equals))
 (export "vec3.clone" (func $export:assembly/vec3/clone))
 (export "vec3.length" (func $export:assembly/vec3/length))
 (export "vec3.copy" (func $export:assembly/vec3/copy))
 (export "vec3.set" (func $export:assembly/vec3/set))
 (export "vec3.add" (func $export:assembly/vec3/add))
 (export "vec3.subtract" (func $export:assembly/vec3/subtract))
 (export "vec3.multiply" (func $export:assembly/vec3/multiply))
 (export "vec3.divide" (func $export:assembly/vec3/divide))
 (export "vec3.ceil" (func $export:assembly/vec3/ceil))
 (export "vec3.floor" (func $export:assembly/vec3/floor))
 (export "vec3.min" (func $export:assembly/vec3/min))
 (export "vec3.max" (func $export:assembly/vec3/max))
 (export "vec3.round" (func $export:assembly/vec3/round))
 (export "vec3.scale" (func $export:assembly/vec3/scale))
 (export "vec3.scaleAndAdd" (func $export:assembly/vec3/scaleAndAdd))
 (export "vec3.distance" (func $export:assembly/vec3/distance))
 (export "vec3.squaredDistance" (func $export:assembly/vec3/squaredDistance))
 (export "vec3.squaredLength" (func $export:assembly/vec3/squaredLength))
 (export "vec3.negate" (func $export:assembly/vec3/negate))
 (export "vec3.inverse" (func $export:assembly/vec3/inverse))
 (export "vec3.normalize" (func $export:assembly/vec3/normalize))
 (export "vec3.dot" (func $export:assembly/vec3/dot))
 (export "vec3.cross" (func $export:assembly/vec3/cross))
 (export "vec3.lerp" (func $export:assembly/vec3/lerp))
 (export "vec3.slerp" (func $export:assembly/vec3/slerp))
 (export "vec3.hermite" (func $export:assembly/vec3/hermite))
 (export "vec3.bezier" (func $export:assembly/vec3/bezier))
 (export "vec3.random" (func $export:assembly/vec3/random))
 (export "vec3.transformMat4" (func $export:assembly/vec3/transformMat4))
 (export "vec3.transformMat3" (func $export:assembly/vec3/transformMat3))
 (export "vec3.transformQuat" (func $export:assembly/vec3/transformQuat))
 (export "vec3.rotateX" (func $export:assembly/vec3/rotateX))
 (export "vec3.rotateY" (func $export:assembly/vec3/rotateY))
 (export "vec3.rotateZ" (func $export:assembly/vec3/rotateZ))
 (export "vec3.angle" (func $export:assembly/vec3/angle))
 (export "vec3.zero" (func $export:assembly/vec3/zero))
 (export "vec3.str" (func $export:assembly/vec3/str))
 (export "vec3.exactEquals" (func $export:assembly/vec3/exactEquals))
 (export "vec3.equals" (func $export:assembly/vec3/equals))
 (export "vec4.clone" (func $export:assembly/vec4/clone))
 (export "vec4.copy" (func $export:assembly/vec4/copy))
 (export "vec4.set" (func $export:assembly/vec4/set))
 (export "vec4.add" (func $export:assembly/vec4/add))
 (export "vec4.subtract" (func $export:assembly/vec4/subtract))
 (export "vec4.multiply" (func $export:assembly/vec4/multiply))
 (export "vec4.divide" (func $export:assembly/vec4/divide))
 (export "vec4.ceil" (func $export:assembly/vec4/ceil))
 (export "vec4.floor" (func $export:assembly/vec4/floor))
 (export "vec4.min" (func $export:assembly/vec4/min))
 (export "vec4.max" (func $export:assembly/vec4/max))
 (export "vec4.round" (func $export:assembly/vec4/round))
 (export "vec4.scale" (func $export:assembly/vec4/scale))
 (export "vec4.scaleAndAdd" (func $export:assembly/vec4/scaleAndAdd))
 (export "vec4.distance" (func $export:assembly/vec4/distance))
 (export "vec4.squaredDistance" (func $export:assembly/vec4/squaredDistance))
 (export "vec4.length" (func $export:assembly/vec4/length))
 (export "vec4.squaredLength" (func $export:assembly/vec4/squaredLength))
 (export "vec4.negate" (func $export:assembly/vec4/negate))
 (export "vec4.inverse" (func $export:assembly/vec4/inverse))
 (export "vec4.normalize" (func $export:assembly/vec4/normalize))
 (export "vec4.dot" (func $export:assembly/vec4/dot))
 (export "vec4.cross" (func $export:assembly/vec4/cross))
 (export "vec4.lerp" (func $export:assembly/vec4/lerp))
 (export "vec4.random" (func $export:assembly/vec4/random))
 (export "vec4.transformMat4" (func $export:assembly/vec4/transformMat4))
 (export "vec4.transformQuat" (func $export:assembly/vec4/transformQuat))
 (export "vec4.zero" (func $export:assembly/vec4/zero))
 (export "vec4.str" (func $export:assembly/vec4/str))
 (export "vec4.exactEquals" (func $export:assembly/vec4/exactEquals))
 (export "vec4.equals" (func $export:assembly/vec4/equals))
 (start $~start)
 (func $~lib/math/murmurHash3 (param $0 i64) (result i64)
  local.get $0
  local.get $0
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
  i64.const -49064778989728563
  i64.mul
  local.set $0
  local.get $0
  local.get $0
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
  i64.const -4265267296055464877
  i64.mul
  local.set $0
  local.get $0
  local.get $0
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
 )
 (func $~lib/math/splitMix32 (param $0 i32) (result i32)
  local.get $0
  i32.const 1831565813
  i32.add
  local.set $0
  local.get $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  local.get $0
  i32.const 1
  i32.or
  i32.mul
  local.set $0
  local.get $0
  local.get $0
  local.get $0
  local.get $0
  i32.const 7
  i32.shr_u
  i32.xor
  local.get $0
  i32.const 61
  i32.or
  i32.mul
  i32.add
  i32.xor
  local.set $0
  local.get $0
  local.get $0
  i32.const 14
  i32.shr_u
  i32.xor
 )
 (func $~lib/math/NativeMath.seedRandom (param $0 i64)
  i32.const 1
  global.set $~lib/math/random_seeded
  local.get $0
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state0_64
  global.get $~lib/math/random_state0_64
  i64.const -1
  i64.xor
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state1_64
  local.get $0
  i32.wrap_i64
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state0_32
  global.get $~lib/math/random_state0_32
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state1_32
  global.get $~lib/math/random_state0_64
  i64.const 0
  i64.ne
  if (result i32)
   global.get $~lib/math/random_state1_64
   i64.const 0
   i64.ne
  else
   i32.const 0
  end
  if (result i32)
   global.get $~lib/math/random_state0_32
   i32.const 0
   i32.ne
  else
   i32.const 0
  end
  if (result i32)
   global.get $~lib/math/random_state1_32
   i32.const 0
   i32.ne
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 32
   i32.const 1417
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/math/NativeMath.random (result f64)
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  global.get $~lib/math/random_seeded
  i32.eqz
  if
   call $~lib/builtins/seed
   i64.reinterpret_f64
   call $~lib/math/NativeMath.seedRandom
  end
  global.get $~lib/math/random_state0_64
  local.set $0
  global.get $~lib/math/random_state1_64
  local.set $1
  local.get $1
  global.set $~lib/math/random_state0_64
  local.get $0
  local.get $0
  i64.const 23
  i64.shl
  i64.xor
  local.set $0
  local.get $0
  local.get $0
  i64.const 17
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
  local.get $1
  i64.xor
  local.set $0
  local.get $0
  local.get $1
  i64.const 26
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
  global.set $~lib/math/random_state1_64
  local.get $1
  i64.const 12
  i64.shr_u
  i64.const 4607182418800017408
  i64.or
  local.set $2
  local.get $2
  f64.reinterpret_i64
  f64.const 1
  f64.sub
 )
 (func $start:assembly/common
  global.get $assembly/common/ArrayTypeEnum.Float64ArrayT
  global.set $assembly/common/ARRAY_TYPE
 )
 (func $~lib/typedarray/Float64Array#__get (param $0 i32) (param $1 i32) (result f64)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 144
   i32.const 208
   i32.const 1374
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load
 )
 (func $~lib/typedarray/Float64Array#__set (param $0 i32) (param $1 i32) (param $2 f64)
  local.get $1
  local.get $0
  i32.load offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 144
   i32.const 208
   i32.const 1385
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  local.get $2
  f64.store
 )
 (func $assembly/mat2d/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $0
  i32.const 0
  local.get $3
  local.get $9
  f64.mul
  local.get $5
  local.get $10
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $9
  f64.mul
  local.get $6
  local.get $10
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  local.get $11
  f64.mul
  local.get $5
  local.get $12
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $4
  local.get $11
  f64.mul
  local.get $6
  local.get $12
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $3
  local.get $13
  f64.mul
  local.get $5
  local.get $14
  f64.mul
  f64.add
  local.get $7
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $4
  local.get $13
  f64.mul
  local.get $6
  local.get $14
  f64.mul
  f64.add
  local.get $8
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/divide (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $~lib/math/NativeMath.hypot (param $0 f64) (param $1 f64) (result f64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  local.get $0
  i64.reinterpret_f64
  local.set $2
  local.get $1
  i64.reinterpret_f64
  local.set $3
  local.get $2
  i64.const 9223372036854775807
  i64.and
  local.set $2
  local.get $3
  i64.const 9223372036854775807
  i64.and
  local.set $3
  local.get $2
  local.get $3
  i64.lt_u
  if
   local.get $2
   local.set $4
   local.get $3
   local.set $2
   local.get $4
   local.set $3
  end
  local.get $2
  i64.const 52
  i64.shr_u
  i32.wrap_i64
  local.set $5
  local.get $3
  i64.const 52
  i64.shr_u
  i32.wrap_i64
  local.set $6
  local.get $3
  f64.reinterpret_i64
  local.set $1
  local.get $6
  i32.const 2047
  i32.eq
  if
   local.get $1
   return
  end
  local.get $2
  f64.reinterpret_i64
  local.set $0
  local.get $5
  i32.const 2047
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $3
   i64.const 0
   i64.eq
  end
  if
   local.get $0
   return
  end
  local.get $5
  local.get $6
  i32.sub
  i32.const 64
  i32.gt_s
  if
   local.get $0
   local.get $1
   f64.add
   return
  end
  f64.const 1
  local.set $7
  local.get $5
  i32.const 1023
  i32.const 510
  i32.add
  i32.gt_s
  if
   f64.const 5260135901548373507240989e186
   local.set $7
   local.get $0
   f64.const 1.90109156629516e-211
   f64.mul
   local.set $0
   local.get $1
   f64.const 1.90109156629516e-211
   f64.mul
   local.set $1
  else
   local.get $6
   i32.const 1023
   i32.const 450
   i32.sub
   i32.lt_s
   if
    f64.const 1.90109156629516e-211
    local.set $7
    local.get $0
    f64.const 5260135901548373507240989e186
    f64.mul
    local.set $0
    local.get $1
    f64.const 5260135901548373507240989e186
    f64.mul
    local.set $1
   end
  end
  local.get $0
  f64.const 134217729
  f64.mul
  local.set $8
  local.get $0
  local.get $8
  f64.sub
  local.get $8
  f64.add
  local.set $9
  local.get $0
  local.get $9
  f64.sub
  local.set $10
  local.get $0
  local.get $0
  f64.mul
  local.set $11
  local.get $9
  local.get $9
  f64.mul
  local.get $11
  f64.sub
  f64.const 2
  local.get $9
  f64.mul
  local.get $10
  f64.add
  local.get $10
  f64.mul
  f64.add
  local.set $12
  local.get $1
  f64.const 134217729
  f64.mul
  local.set $8
  local.get $1
  local.get $8
  f64.sub
  local.get $8
  f64.add
  local.set $9
  local.get $1
  local.get $9
  f64.sub
  local.set $10
  local.get $1
  local.get $1
  f64.mul
  local.set $13
  local.get $9
  local.get $9
  f64.mul
  local.get $13
  f64.sub
  f64.const 2
  local.get $9
  f64.mul
  local.get $10
  f64.add
  local.get $10
  f64.mul
  f64.add
  local.set $14
  local.get $7
  local.get $14
  local.get $12
  f64.add
  local.get $13
  f64.add
  local.get $11
  f64.add
  f64.sqrt
  f64.mul
 )
 (func $assembly/maths/Maths.max (param $0 f64) (param $1 f64) (param $2 f64) (result f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  local.get $1
  local.set $4
  local.get $2
  local.set $3
  local.get $4
  local.get $3
  f64.max
  local.set $4
  local.get $0
  local.set $5
  local.get $4
  local.set $3
  local.get $5
  local.get $3
  f64.max
 )
 (func $assembly/maths/Maths.hypot3 (param $0 f64) (param $1 f64) (param $2 f64) (result f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  local.get $0
  local.set $3
  local.get $3
  f64.abs
  local.set $0
  local.get $1
  local.set $3
  local.get $3
  f64.abs
  local.set $1
  local.get $2
  local.set $3
  local.get $3
  f64.abs
  local.set $2
  i32.const 432
  drop
  local.get $0
  local.get $1
  local.get $2
  call $assembly/maths/Maths.max
  local.set $3
  local.get $3
  f64.const 0
  f64.eq
  if
   f64.const 0
   return
  end
  f64.const 1
  local.get $3
  f64.div
  local.set $4
  local.get $0
  local.get $4
  f64.mul
  local.set $0
  local.get $1
  local.get $4
  f64.mul
  local.set $1
  local.get $2
  local.get $4
  f64.mul
  local.set $2
  local.get $3
  local.get $0
  local.get $0
  f64.mul
  local.get $1
  local.get $1
  f64.mul
  f64.add
  local.get $2
  local.get $2
  f64.mul
  f64.add
  local.set $5
  local.get $5
  f64.sqrt
  f64.mul
 )
 (func $assembly/vec3/distance (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $4
  local.get $2
  local.get $3
  local.get $4
  call $assembly/maths/Maths.hypot3
 )
 (func $assembly/vec3/squaredDistance (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $4
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.get $4
  local.get $4
  f64.mul
  f64.add
 )
 (func $assembly/vec3/length (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  local.get $2
  local.get $3
  call $assembly/maths/Maths.hypot3
 )
 (func $assembly/vec3/squaredLength (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  local.get $1
  f64.mul
  local.get $2
  local.get $2
  f64.mul
  f64.add
  local.get $3
  local.get $3
  f64.mul
  f64.add
 )
 (func $~lib/rt/itcms/Object#set:nextWithColor (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/rt/itcms/Object#set:prev (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/rt/itcms/initLazy (param $0 i32) (result i32)
  local.get $0
  local.get $0
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $0
  local.get $0
  call $~lib/rt/itcms/Object#set:prev
  local.get $0
 )
 (func $~lib/rt/itcms/Object#get:next (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
 )
 (func $~lib/rt/itcms/Object#get:color (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.and
 )
 (func $~lib/rt/itcms/visitRoots (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.set $1
  local.get $1
  call $~lib/rt/itcms/Object#get:next
  local.set $2
  loop $while-continue|0
   local.get $2
   local.get $1
   i32.ne
   local.set $3
   local.get $3
   if
    i32.const 1
    drop
    local.get $2
    call $~lib/rt/itcms/Object#get:color
    i32.const 3
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 768
     i32.const 159
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $2
    i32.const 20
    i32.add
    local.get $0
    call $~lib/rt/__visit_members
    local.get $2
    call $~lib/rt/itcms/Object#get:next
    local.set $2
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (param $0 i32) (param $1 i32)
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $1
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#set:next (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#unlink (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/itcms/Object#get:next
  local.set $1
  local.get $1
  i32.const 0
  i32.eq
  if
   i32.const 1
   drop
   local.get $0
   i32.load offset=8
   i32.const 0
   i32.eq
   if (result i32)
    local.get $0
    global.get $~lib/memory/__heap_base
    i32.lt_u
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 768
    i32.const 127
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $0
  i32.load offset=8
  local.set $2
  i32.const 1
  drop
  local.get $2
  i32.eqz
  if
   i32.const 0
   i32.const 768
   i32.const 131
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $2
  call $~lib/rt/itcms/Object#set:prev
  local.get $2
  local.get $1
  call $~lib/rt/itcms/Object#set:next
 )
 (func $~lib/rt/__typeinfo (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/rt/__rtti_base
  local.set $1
  local.get $0
  local.get $1
  i32.load
  i32.gt_u
  if
   i32.const 144
   i32.const 896
   i32.const 22
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $0
  i32.const 8
  i32.mul
  i32.add
  i32.load
 )
 (func $~lib/rt/itcms/Object#get:isPointerfree (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.load offset=12
  local.set $1
  local.get $1
  i32.const 1
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $1
   call $~lib/rt/__typeinfo
   i32.const 32
   i32.and
   i32.const 0
   i32.ne
  end
 )
 (func $~lib/rt/itcms/Object#linkTo (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  i32.load offset=8
  local.set $3
  local.get $0
  local.get $1
  local.get $2
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $0
  local.get $3
  call $~lib/rt/itcms/Object#set:prev
  local.get $3
  local.get $0
  call $~lib/rt/itcms/Object#set:next
  local.get $1
  local.get $0
  call $~lib/rt/itcms/Object#set:prev
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  local.get $0
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.eqz
   if (result i32)
    i32.const 0
    i32.const 768
    i32.const 147
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   else
    local.get $1
   end
   global.set $~lib/rt/itcms/iter
  end
  local.get $0
  call $~lib/rt/itcms/Object#unlink
  local.get $0
  global.get $~lib/rt/itcms/toSpace
  local.get $0
  call $~lib/rt/itcms/Object#get:isPointerfree
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  local.set $2
  i32.const 0
  drop
  local.get $2
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $2
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/itcms/visitStack (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  local.set $1
  loop $while-continue|0
   local.get $1
   global.get $~lib/memory/__heap_base
   i32.lt_u
   local.set $2
   local.get $2
   if
    local.get $1
    i32.load
    local.get $0
    call $~lib/rt/itcms/__visit
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#get:size (param $0 i32) (result i32)
  i32.const 4
  local.get $0
  i32.load
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
 )
 (func $~lib/rt/tlsf/Root#set:flMap (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
 )
 (func $~lib/rt/tlsf/Block#set:prev (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/Block#set:next (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $1
  i32.load
  local.set $2
  i32.const 1
  drop
  local.get $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 976
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $3
  i32.const 1
  drop
  local.get $3
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 976
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $4
   local.get $3
   i32.const 4
   i32.shr_u
   local.set $5
  else
   local.get $3
   local.tee $6
   i32.const 1073741820
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_u
   select
   local.set $6
   i32.const 31
   local.get $6
   i32.clz
   i32.sub
   local.set $4
   local.get $6
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $5
   local.get $4
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $4
  end
  i32.const 1
  drop
  local.get $4
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $5
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 976
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=4
  local.set $8
  local.get $1
  i32.load offset=8
  local.set $9
  local.get $8
  if
   local.get $8
   local.get $9
   call $~lib/rt/tlsf/Block#set:next
  end
  local.get $9
  if
   local.get $9
   local.get $8
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $1
  local.get $0
  local.set $10
  local.get $4
  local.set $6
  local.get $5
  local.set $7
  local.get $10
  local.get $6
  i32.const 4
  i32.shl
  local.get $7
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  i32.eq
  if
   local.get $0
   local.set $11
   local.get $4
   local.set $10
   local.get $5
   local.set $6
   local.get $9
   local.set $7
   local.get $11
   local.get $10
   i32.const 4
   i32.shl
   local.get $6
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $7
   i32.store offset=96
   local.get $9
   i32.eqz
   if
    local.get $0
    local.set $6
    local.get $4
    local.set $7
    local.get $6
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.set $6
    local.get $0
    local.set $7
    local.get $4
    local.set $11
    local.get $6
    i32.const 1
    local.get $5
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $6
    local.set $10
    local.get $7
    local.get $11
    i32.const 2
    i32.shl
    i32.add
    local.get $10
    i32.store offset=4
    local.get $6
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load
     i32.const 1
     local.get $4
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     call $~lib/rt/tlsf/Root#set:flMap
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  i32.const 1
  drop
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 976
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load
  local.set $2
  i32.const 1
  drop
  local.get $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 976
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.set $3
  local.get $3
  i32.const 4
  i32.add
  local.get $3
  i32.load
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  local.set $4
  local.get $4
  i32.load
  local.set $5
  local.get $5
  i32.const 1
  i32.and
  if
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $2
   i32.const 4
   i32.add
   local.get $5
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $2
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $1
   local.set $3
   local.get $3
   i32.const 4
   i32.add
   local.get $3
   i32.load
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.set $4
   local.get $4
   i32.load
   local.set $5
  end
  local.get $2
  i32.const 2
  i32.and
  if
   local.get $1
   local.set $3
   local.get $3
   i32.const 4
   i32.sub
   i32.load
   local.set $3
   local.get $3
   i32.load
   local.set $6
   i32.const 1
   drop
   local.get $6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 976
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $3
   call $~lib/rt/tlsf/removeBlock
   local.get $3
   local.set $1
   local.get $1
   local.get $6
   i32.const 4
   i32.add
   local.get $2
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $2
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
  local.get $4
  local.get $5
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $2
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $7
  i32.const 1
  drop
  local.get $7
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 976
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  drop
  local.get $1
  i32.const 4
  i32.add
  local.get $7
  i32.add
  local.get $4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 976
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store
  local.get $7
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $8
   local.get $7
   i32.const 4
   i32.shr_u
   local.set $9
  else
   local.get $7
   local.tee $3
   i32.const 1073741820
   local.tee $6
   local.get $3
   local.get $6
   i32.lt_u
   select
   local.set $3
   i32.const 31
   local.get $3
   i32.clz
   i32.sub
   local.set $8
   local.get $3
   local.get $8
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $9
   local.get $8
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $8
  end
  i32.const 1
  drop
  local.get $8
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $9
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 976
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $10
  local.get $8
  local.set $3
  local.get $9
  local.set $6
  local.get $10
  local.get $3
  i32.const 4
  i32.shl
  local.get $6
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  local.set $11
  local.get $1
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $1
  local.get $11
  call $~lib/rt/tlsf/Block#set:next
  local.get $11
  if
   local.get $11
   local.get $1
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $0
  local.set $12
  local.get $8
  local.set $10
  local.get $9
  local.set $3
  local.get $1
  local.set $6
  local.get $12
  local.get $10
  i32.const 4
  i32.shl
  local.get $3
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $6
  i32.store offset=96
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  local.get $8
  i32.shl
  i32.or
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $0
  local.set $13
  local.get $8
  local.set $12
  local.get $0
  local.set $3
  local.get $8
  local.set $6
  local.get $3
  local.get $6
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const 1
  local.get $9
  i32.shl
  i32.or
  local.set $10
  local.get $13
  local.get $12
  i32.const 2
  i32.shl
  i32.add
  local.get $10
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  i32.const 1
  drop
  local.get $1
  local.get $2
  i32.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 976
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $2
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $2
  local.get $0
  local.set $3
  local.get $3
  i32.load offset=1568
  local.set $4
  i32.const 0
  local.set $5
  local.get $4
  if
   i32.const 1
   drop
   local.get $1
   local.get $4
   i32.const 4
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 976
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 16
   i32.sub
   local.get $4
   i32.eq
   if
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
    local.get $4
    i32.load
    local.set $5
   else
    nop
   end
  else
   i32.const 1
   drop
   local.get $1
   local.get $0
   i32.const 1572
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 976
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  local.get $1
  i32.sub
  local.set $6
  local.get $6
  i32.const 4
  i32.const 12
  i32.add
  i32.const 4
  i32.add
  i32.lt_u
  if
   i32.const 0
   return
  end
  local.get $6
  i32.const 2
  i32.const 4
  i32.mul
  i32.sub
  local.set $7
  local.get $1
  local.set $8
  local.get $8
  local.get $7
  i32.const 1
  i32.or
  local.get $5
  i32.const 2
  i32.and
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $8
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $8
  i32.const 0
  call $~lib/rt/tlsf/Block#set:next
  local.get $1
  i32.const 4
  i32.add
  local.get $7
  i32.add
  local.set $4
  local.get $4
  i32.const 0
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $0
  local.set $9
  local.get $4
  local.set $3
  local.get $9
  local.get $3
  i32.store offset=1568
  local.get $0
  local.get $8
  call $~lib/rt/tlsf/insertBlock
  i32.const 1
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  i32.const 0
  drop
  global.get $~lib/memory/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $0
  memory.size
  local.set $1
  local.get $0
  i32.const 1572
  i32.add
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $2
  local.get $2
  local.get $1
  i32.gt_s
  if (result i32)
   local.get $2
   local.get $1
   i32.sub
   memory.grow
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  local.get $0
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $3
  local.set $5
  i32.const 0
  local.set $4
  local.get $5
  local.get $4
  i32.store offset=1568
  i32.const 0
  local.set $5
  loop $for-loop|0
   local.get $5
   i32.const 23
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $3
    local.set $8
    local.get $5
    local.set $7
    i32.const 0
    local.set $6
    local.get $8
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    local.get $6
    i32.store offset=4
    i32.const 0
    local.set $8
    loop $for-loop|1
     local.get $8
     i32.const 16
     i32.lt_u
     local.set $7
     local.get $7
     if
      local.get $3
      local.set $11
      local.get $5
      local.set $10
      local.get $8
      local.set $9
      i32.const 0
      local.set $6
      local.get $11
      local.get $10
      i32.const 4
      i32.shl
      local.get $9
      i32.add
      i32.const 2
      i32.shl
      i32.add
      local.get $6
      i32.store offset=96
      local.get $8
      i32.const 1
      i32.add
      local.set $8
      br $for-loop|1
     end
    end
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $0
  i32.const 1572
  i32.add
  local.set $12
  i32.const 0
  drop
  local.get $3
  local.get $12
  memory.size
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
  local.get $3
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/checkUsedBlock (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   local.get $0
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $1
   i32.load
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 976
   i32.const 559
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
 )
 (func $~lib/rt/tlsf/freeBlock (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $1
  local.get $1
  i32.load
  i32.const 1
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/__free (param $0 i32)
  local.get $0
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  call $~lib/rt/tlsf/checkUsedBlock
  call $~lib/rt/tlsf/freeBlock
 )
 (func $~lib/rt/itcms/free (param $0 i32)
  local.get $0
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/Object#set:nextWithColor
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/Object#set:prev
  else
   global.get $~lib/rt/itcms/total
   local.get $0
   call $~lib/rt/itcms/Object#get:size
   i32.sub
   global.set $~lib/rt/itcms/total
   i32.const 0
   drop
   local.get $0
   i32.const 4
   i32.add
   call $~lib/rt/tlsf/__free
  end
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      local.set $1
      local.get $1
      i32.const 0
      i32.eq
      br_if $case0|0
      local.get $1
      i32.const 1
      i32.eq
      br_if $case1|0
      local.get $1
      i32.const 2
      i32.eq
      br_if $case2|0
      br $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     i32.const 0
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     i32.const 1
     i32.mul
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $1
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $0
    loop $while-continue|1
     local.get $0
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     local.set $2
     local.get $2
     if
      local.get $0
      global.set $~lib/rt/itcms/iter
      local.get $0
      call $~lib/rt/itcms/Object#get:color
      local.get $1
      i32.ne
      if
       local.get $0
       local.get $1
       call $~lib/rt/itcms/Object#set:color
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $0
       i32.const 20
       i32.add
       i32.const 0
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       i32.const 1
       i32.mul
       return
      end
      local.get $0
      call $~lib/rt/itcms/Object#get:next
      local.set $0
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    i32.const 0
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $0
    local.get $0
    global.get $~lib/rt/itcms/toSpace
    i32.eq
    if
     i32.const 0
     call $~lib/rt/itcms/visitStack
     global.get $~lib/rt/itcms/iter
     call $~lib/rt/itcms/Object#get:next
     local.set $0
     loop $while-continue|2
      local.get $0
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      local.set $2
      local.get $2
      if
       local.get $0
       call $~lib/rt/itcms/Object#get:color
       local.get $1
       i32.ne
       if
        local.get $0
        local.get $1
        call $~lib/rt/itcms/Object#set:color
        local.get $0
        i32.const 20
        i32.add
        i32.const 0
        call $~lib/rt/__visit_members
       end
       local.get $0
       call $~lib/rt/itcms/Object#get:next
       local.set $0
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $2
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $2
     global.set $~lib/rt/itcms/toSpace
     local.get $1
     global.set $~lib/rt/itcms/white
     local.get $2
     call $~lib/rt/itcms/Object#get:next
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    i32.const 1
    i32.mul
    return
   end
   global.get $~lib/rt/itcms/iter
   local.set $0
   local.get $0
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $0
    call $~lib/rt/itcms/Object#get:next
    global.set $~lib/rt/itcms/iter
    i32.const 1
    drop
    local.get $0
    call $~lib/rt/itcms/Object#get:color
    global.get $~lib/rt/itcms/white
    i32.eqz
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 768
     i32.const 228
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    call $~lib/rt/itcms/free
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:nextWithColor
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:prev
   i32.const 0
   global.set $~lib/rt/itcms/state
   br $break|0
  end
  i32.const 0
 )
 (func $~lib/rt/itcms/interrupt
  (local $0 i32)
  (local $1 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1024
  i32.const 200
  i32.mul
  i32.const 100
  i32.div_u
  local.set $0
  loop $do-continue|0
   local.get $0
   call $~lib/rt/itcms/step
   i32.sub
   local.set $0
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.eq
   if
    i32.const 0
    drop
    global.get $~lib/rt/itcms/total
    i64.extend_i32_u
    i64.const 200
    i64.mul
    i64.const 100
    i64.div_u
    i32.wrap_i64
    i32.const 1024
    i32.add
    global.set $~lib/rt/itcms/threshold
    i32.const 0
    drop
    return
   end
   local.get $0
   i32.const 0
   i32.gt_s
   local.set $1
   local.get $1
   br_if $do-continue|0
  end
  i32.const 0
  drop
  global.get $~lib/rt/itcms/total
  i32.const 1024
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.sub
  i32.const 1024
  i32.lt_u
  i32.mul
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
 )
 (func $~lib/rt/tlsf/computeSize (param $0 i32) (result i32)
  local.get $0
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $0
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
  end
 )
 (func $~lib/rt/tlsf/prepareSize (param $0 i32) (result i32)
  local.get $0
  i32.const 1073741820
  i32.ge_u
  if
   i32.const 704
   i32.const 976
   i32.const 458
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/tlsf/computeSize
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $2
   local.get $1
   i32.const 4
   i32.shr_u
   local.set $3
  else
   local.get $1
   i32.const 536870910
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 1
    i32.const 27
    local.get $1
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
   else
    local.get $1
   end
   local.set $4
   i32.const 31
   local.get $4
   i32.clz
   i32.sub
   local.set $2
   local.get $4
   local.get $2
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $3
   local.get $2
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $2
  end
  i32.const 1
  drop
  local.get $2
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $3
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 976
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $5
  local.get $2
  local.set $4
  local.get $5
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const 0
  i32.const -1
  i32.xor
  local.get $3
  i32.shl
  i32.and
  local.set $6
  i32.const 0
  local.set $7
  local.get $6
  i32.eqz
  if
   local.get $0
   i32.load
   i32.const 0
   i32.const -1
   i32.xor
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.set $5
   local.get $5
   i32.eqz
   if
    i32.const 0
    local.set $7
   else
    local.get $5
    i32.ctz
    local.set $2
    local.get $0
    local.set $8
    local.get $2
    local.set $4
    local.get $8
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.set $6
    i32.const 1
    drop
    local.get $6
    i32.eqz
    if
     i32.const 0
     i32.const 976
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.set $9
    local.get $2
    local.set $8
    local.get $6
    i32.ctz
    local.set $4
    local.get $9
    local.get $8
    i32.const 4
    i32.shl
    local.get $4
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
    local.set $7
   end
  else
   local.get $0
   local.set $9
   local.get $2
   local.set $8
   local.get $6
   i32.ctz
   local.set $4
   local.get $9
   local.get $8
   i32.const 4
   i32.shl
   local.get $4
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
   local.set $7
  end
  local.get $7
 )
 (func $~lib/rt/tlsf/growMemory (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  i32.const 0
  drop
  local.get $1
  i32.const 536870910
  i32.lt_u
  if
   local.get $1
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.set $1
  end
  memory.size
  local.set $2
  local.get $1
  i32.const 4
  local.get $2
  i32.const 16
  i32.shl
  i32.const 4
  i32.sub
  local.get $0
  local.set $3
  local.get $3
  i32.load offset=1568
  i32.ne
  i32.shl
  i32.add
  local.set $1
  local.get $1
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $4
  local.get $2
  local.tee $3
  local.get $4
  local.tee $5
  local.get $3
  local.get $5
  i32.gt_s
  select
  local.set $6
  local.get $6
  memory.grow
  i32.const 0
  i32.lt_s
  if
   local.get $4
   memory.grow
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  memory.size
  local.set $7
  local.get $0
  local.get $2
  i32.const 16
  i32.shl
  local.get $7
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
 )
 (func $~lib/rt/tlsf/prepareBlock (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  local.set $3
  i32.const 1
  drop
  local.get $2
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 976
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $2
  i32.sub
  local.set $4
  local.get $4
  i32.const 4
  i32.const 12
  i32.add
  i32.ge_u
  if
   local.get $1
   local.get $2
   local.get $3
   i32.const 2
   i32.and
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $1
   i32.const 4
   i32.add
   local.get $2
   i32.add
   local.set $5
   local.get $5
   local.get $4
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $0
   local.get $5
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $1
   local.get $3
   i32.const 1
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $1
   local.set $5
   local.get $5
   i32.const 4
   i32.add
   local.get $5
   i32.load
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.get $1
   local.set $5
   local.get $5
   i32.const 4
   i32.add
   local.get $5
   i32.load
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   i32.load
   i32.const 2
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/tlsf/prepareSize
  local.set $2
  local.get $0
  local.get $2
  call $~lib/rt/tlsf/searchBlock
  local.set $3
  local.get $3
  i32.eqz
  if
   local.get $0
   local.get $2
   call $~lib/rt/tlsf/growMemory
   local.get $0
   local.get $2
   call $~lib/rt/tlsf/searchBlock
   local.set $3
   i32.const 1
   drop
   local.get $3
   i32.eqz
   if
    i32.const 0
    i32.const 976
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 1
  drop
  local.get $3
  i32.load
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $2
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 976
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $3
  call $~lib/rt/tlsf/removeBlock
  local.get $0
  local.get $3
  local.get $2
  call $~lib/rt/tlsf/prepareBlock
  i32.const 0
  drop
  local.get $3
 )
 (func $~lib/rt/tlsf/__alloc (param $0 i32) (result i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
 )
 (func $~lib/rt/itcms/Object#set:rtId (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/rt/itcms/Object#set:rtSize (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=16
 )
 (func $~lib/memory/memory.fill (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i32)
  block $~lib/util/memory/memset|inlined.0
   local.get $0
   local.set $5
   local.get $1
   local.set $4
   local.get $2
   local.set $3
   i32.const 0
   i32.const 1
   i32.gt_s
   drop
   local.get $3
   i32.eqz
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   local.get $3
   i32.add
   local.set $6
   local.get $5
   local.get $4
   i32.store8
   local.get $6
   i32.const 1
   i32.sub
   local.get $4
   i32.store8
   local.get $3
   i32.const 2
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   local.get $4
   i32.store8 offset=1
   local.get $5
   local.get $4
   i32.store8 offset=2
   local.get $6
   i32.const 2
   i32.sub
   local.get $4
   i32.store8
   local.get $6
   i32.const 3
   i32.sub
   local.get $4
   i32.store8
   local.get $3
   i32.const 6
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   local.get $4
   i32.store8 offset=3
   local.get $6
   i32.const 4
   i32.sub
   local.get $4
   i32.store8
   local.get $3
   i32.const 8
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   i32.const 0
   local.get $5
   i32.sub
   i32.const 3
   i32.and
   local.set $7
   local.get $5
   local.get $7
   i32.add
   local.set $5
   local.get $3
   local.get $7
   i32.sub
   local.set $3
   local.get $3
   i32.const -4
   i32.and
   local.set $3
   i32.const -1
   i32.const 255
   i32.div_u
   local.get $4
   i32.const 255
   i32.and
   i32.mul
   local.set $8
   local.get $5
   local.get $3
   i32.add
   local.set $6
   local.get $5
   local.get $8
   i32.store
   local.get $6
   i32.const 4
   i32.sub
   local.get $8
   i32.store
   local.get $3
   i32.const 8
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   local.get $8
   i32.store offset=4
   local.get $5
   local.get $8
   i32.store offset=8
   local.get $6
   i32.const 12
   i32.sub
   local.get $8
   i32.store
   local.get $6
   i32.const 8
   i32.sub
   local.get $8
   i32.store
   local.get $3
   i32.const 24
   i32.le_u
   if
    br $~lib/util/memory/memset|inlined.0
   end
   local.get $5
   local.get $8
   i32.store offset=12
   local.get $5
   local.get $8
   i32.store offset=16
   local.get $5
   local.get $8
   i32.store offset=20
   local.get $5
   local.get $8
   i32.store offset=24
   local.get $6
   i32.const 28
   i32.sub
   local.get $8
   i32.store
   local.get $6
   i32.const 24
   i32.sub
   local.get $8
   i32.store
   local.get $6
   i32.const 20
   i32.sub
   local.get $8
   i32.store
   local.get $6
   i32.const 16
   i32.sub
   local.get $8
   i32.store
   i32.const 24
   local.get $5
   i32.const 4
   i32.and
   i32.add
   local.set $7
   local.get $5
   local.get $7
   i32.add
   local.set $5
   local.get $3
   local.get $7
   i32.sub
   local.set $3
   local.get $8
   i64.extend_i32_u
   local.get $8
   i64.extend_i32_u
   i64.const 32
   i64.shl
   i64.or
   local.set $9
   loop $while-continue|0
    local.get $3
    i32.const 32
    i32.ge_u
    local.set $10
    local.get $10
    if
     local.get $5
     local.get $9
     i64.store
     local.get $5
     local.get $9
     i64.store offset=8
     local.get $5
     local.get $9
     i64.store offset=16
     local.get $5
     local.get $9
     i64.store offset=24
     local.get $3
     i32.const 32
     i32.sub
     local.set $3
     local.get $5
     i32.const 32
     i32.add
     local.set $5
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 704
   i32.const 768
   i32.const 260
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   call $~lib/rt/itcms/interrupt
  end
  i32.const 16
  local.get $0
  i32.add
  call $~lib/rt/tlsf/__alloc
  i32.const 4
  i32.sub
  local.set $2
  local.get $2
  local.get $1
  call $~lib/rt/itcms/Object#set:rtId
  local.get $2
  local.get $0
  call $~lib/rt/itcms/Object#set:rtSize
  local.get $2
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $2
  call $~lib/rt/itcms/Object#get:size
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.set $3
  local.get $3
  i32.const 0
  local.get $0
  call $~lib/memory/memory.fill
  local.get $3
 )
 (func $~lib/rt/itcms/__link (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.eqz
  if
   return
  end
  i32.const 1
  drop
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 768
   i32.const 294
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 20
  i32.sub
  local.set $3
  local.get $3
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $0
   i32.const 20
   i32.sub
   local.set $4
   local.get $4
   call $~lib/rt/itcms/Object#get:color
   local.set $5
   local.get $5
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $2
    if
     local.get $4
     call $~lib/rt/itcms/Object#makeGray
    else
     local.get $3
     call $~lib/rt/itcms/Object#makeGray
    end
   else
    local.get $5
    i32.const 3
    i32.eq
    if (result i32)
     global.get $~lib/rt/itcms/state
     i32.const 1
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $3
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/typedarray/Float64Array#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=8
  i32.const 3
  i32.shr_u
 )
 (func $start:assembly/vec3~anonymous|0 (result i32)
  i32.const 1040
 )
 (func $start:assembly/vec3
  memory.size
  i32.const 16
  i32.shl
  global.get $~lib/memory/__heap_base
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 816
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 848
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 928
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
  call $assembly/vec3/create
  global.set $assembly/vec3/vec
  i32.const 0
  global.set $~argumentsLength
  i32.const 1072
  i32.load
  call_indirect $0 (type $none_=>_i32)
  global.set $assembly/vec3/forEach
 )
 (func $assembly/vec4/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/divide (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/maths/Maths.hypot4 (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (result f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  local.get $0
  local.set $4
  local.get $4
  f64.abs
  local.set $0
  local.get $1
  local.set $4
  local.get $4
  f64.abs
  local.set $1
  local.get $2
  local.set $4
  local.get $4
  f64.abs
  local.set $2
  local.get $3
  local.set $4
  local.get $4
  f64.abs
  local.set $3
  local.get $0
  local.set $5
  local.get $1
  local.get $2
  local.get $3
  call $assembly/maths/Maths.max
  local.set $4
  local.get $5
  local.get $4
  f64.max
  local.set $5
  local.get $5
  f64.const 0
  f64.eq
  if
   f64.const 0
   return
  end
  f64.const 1
  local.get $5
  f64.div
  local.set $4
  local.get $0
  local.get $4
  f64.mul
  local.set $0
  local.get $1
  local.get $4
  f64.mul
  local.set $1
  local.get $2
  local.get $4
  f64.mul
  local.set $2
  local.get $3
  local.get $4
  f64.mul
  local.set $3
  local.get $5
  local.get $0
  local.get $0
  f64.mul
  local.get $1
  local.get $1
  f64.mul
  f64.add
  local.get $2
  local.get $2
  f64.mul
  f64.add
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.set $6
  local.get $6
  f64.sqrt
  f64.mul
 )
 (func $assembly/vec4/distance (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $5
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  call $assembly/maths/Maths.hypot4
 )
 (func $assembly/vec4/squaredDistance (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $5
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.get $4
  local.get $4
  f64.mul
  f64.add
  local.get $5
  local.get $5
  f64.mul
  f64.add
 )
 (func $assembly/vec4/length (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $assembly/maths/Maths.hypot4
 )
 (func $assembly/vec4/squaredLength (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  local.get $1
  f64.mul
  local.get $2
  local.get $2
  f64.mul
  f64.add
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.get $4
  local.get $4
  f64.mul
  f64.add
 )
 (func $start:assembly/vec4~anonymous|0 (result i32)
  i32.const 1328
 )
 (func $start:assembly/vec4
  call $assembly/vec4/create
  global.set $assembly/vec4/vec
  i32.const 0
  global.set $~argumentsLength
  i32.const 1360
  i32.load
  call_indirect $0 (type $none_=>_i32)
  global.set $assembly/vec4/forEach
 )
 (func $assembly/vec4/copy (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $0
  i32.const 0
  local.get $3
  local.get $10
  f64.mul
  local.get $6
  local.get $7
  f64.mul
  f64.add
  local.get $4
  local.get $9
  f64.mul
  f64.add
  local.get $5
  local.get $8
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $10
  f64.mul
  local.get $6
  local.get $8
  f64.mul
  f64.add
  local.get $5
  local.get $7
  f64.mul
  f64.add
  local.get $3
  local.get $9
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $5
  local.get $10
  f64.mul
  local.get $6
  local.get $9
  f64.mul
  f64.add
  local.get $3
  local.get $8
  f64.mul
  f64.add
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $6
  local.get $10
  f64.mul
  local.get $3
  local.get $7
  f64.mul
  f64.sub
  local.get $4
  local.get $8
  f64.mul
  f64.sub
  local.get $5
  local.get $9
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/scale (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/dot (param $0 i32) (param $1 i32) (result f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
 )
 (func $assembly/vec4/lerp (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $0
  i32.const 0
  local.get $4
  local.get $3
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.sub
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $5
  local.get $3
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.sub
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $6
  local.get $3
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $6
  f64.sub
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $7
  local.get $3
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $7
  f64.sub
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/normalize (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.get $4
  local.get $4
  f64.mul
  f64.add
  local.get $5
  local.get $5
  f64.mul
  f64.add
  local.set $6
  local.get $6
  f64.const 0
  f64.gt
  if
   f64.const 1
   local.get $6
   local.set $7
   local.get $7
   f64.sqrt
   f64.div
   local.set $6
  end
  local.get $0
  i32.const 0
  local.get $2
  local.get $6
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $3
  local.get $6
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $4
  local.get $6
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $5
  local.get $6
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/exactEquals (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.eq
  if (result i32)
   local.get $0
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
 )
 (func $assembly/vec3/dot (param $0 i32) (param $1 i32) (result f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
 )
 (func $assembly/vec3/cross (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $0
  i32.const 0
  local.get $4
  local.get $8
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $5
  local.get $6
  f64.mul
  local.get $3
  local.get $8
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  local.get $7
  f64.mul
  local.get $4
  local.get $6
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/normalize (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.get $4
  local.get $4
  f64.mul
  f64.add
  local.set $5
  local.get $5
  f64.const 0
  f64.gt
  if
   f64.const 1
   local.get $5
   local.set $6
   local.get $6
   f64.sqrt
   f64.div
   local.set $5
  end
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $~lib/math/pio2_large_quot (param $0 f64) (param $1 i64) (result i32)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i32)
  (local $6 i64)
  (local $7 i64)
  (local $8 i64)
  (local $9 i64)
  (local $10 i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  (local $15 i64)
  (local $16 i64)
  (local $17 i64)
  (local $18 i64)
  (local $19 i64)
  (local $20 i64)
  (local $21 i64)
  (local $22 i64)
  (local $23 i64)
  (local $24 i64)
  (local $25 i64)
  (local $26 i64)
  (local $27 i64)
  (local $28 i64)
  (local $29 i64)
  (local $30 i64)
  (local $31 i64)
  (local $32 i64)
  (local $33 i64)
  (local $34 i64)
  (local $35 i64)
  (local $36 f64)
  local.get $1
  i64.const 9223372036854775807
  i64.and
  local.set $2
  local.get $2
  i64.const 52
  i64.shr_s
  i64.const 1045
  i64.sub
  local.set $3
  local.get $3
  i64.const 63
  i64.and
  local.set $4
  i32.const 1728
  local.get $3
  i64.const 6
  i64.shr_s
  i32.wrap_i64
  i32.const 3
  i32.shl
  i32.add
  local.set $5
  local.get $5
  i64.load
  local.set $9
  local.get $5
  i64.load offset=8
  local.set $10
  local.get $5
  i64.load offset=16
  local.set $11
  local.get $4
  i64.const 0
  i64.ne
  if
   i32.const 64
   i64.extend_i32_s
   local.get $4
   i64.sub
   local.set $12
   local.get $5
   i64.load offset=24
   local.set $13
   local.get $10
   local.get $12
   i64.shr_u
   local.get $9
   local.get $4
   i64.shl
   i64.or
   local.set $6
   local.get $11
   local.get $12
   i64.shr_u
   local.get $10
   local.get $4
   i64.shl
   i64.or
   local.set $7
   local.get $13
   local.get $12
   i64.shr_u
   local.get $11
   local.get $4
   i64.shl
   i64.or
   local.set $8
  else
   local.get $9
   local.set $6
   local.get $10
   local.set $7
   local.get $11
   local.set $8
  end
  local.get $1
  i64.const 4503599627370495
  i64.and
  i64.const 4503599627370496
  i64.or
  local.set $14
  local.get $7
  local.set $13
  local.get $14
  local.set $12
  local.get $13
  i64.const 4294967295
  i64.and
  local.set $15
  local.get $12
  i64.const 4294967295
  i64.and
  local.set $16
  local.get $13
  i64.const 32
  i64.shr_u
  local.set $13
  local.get $12
  i64.const 32
  i64.shr_u
  local.set $12
  local.get $15
  local.get $16
  i64.mul
  local.set $19
  local.get $19
  i64.const 4294967295
  i64.and
  local.set $17
  local.get $13
  local.get $16
  i64.mul
  local.get $19
  i64.const 32
  i64.shr_u
  i64.add
  local.set $19
  local.get $19
  i64.const 32
  i64.shr_u
  local.set $18
  local.get $15
  local.get $12
  i64.mul
  local.get $19
  i64.const 4294967295
  i64.and
  i64.add
  local.set $19
  local.get $13
  local.get $12
  i64.mul
  local.get $18
  i64.add
  local.get $19
  i64.const 32
  i64.shr_u
  i64.add
  global.set $~lib/math/res128_hi
  local.get $19
  i64.const 32
  i64.shl
  local.get $17
  i64.add
  local.set $20
  global.get $~lib/math/res128_hi
  local.set $21
  local.get $6
  local.get $14
  i64.mul
  local.set $22
  local.get $8
  i64.const 32
  i64.shr_u
  local.get $14
  i64.const 32
  i64.shr_s
  i64.mul
  local.set $23
  local.get $20
  local.get $23
  i64.add
  local.set $24
  local.get $22
  local.get $21
  i64.add
  local.get $24
  local.get $23
  i64.lt_u
  i64.extend_i32_u
  i64.add
  local.set $25
  local.get $24
  i64.const 2
  i64.shl
  local.set $26
  local.get $25
  i64.const 2
  i64.shl
  local.get $24
  i64.const 62
  i64.shr_u
  i64.or
  local.set $27
  local.get $27
  i64.const 63
  i64.shr_s
  local.set $28
  local.get $28
  i64.const 1
  i64.shr_s
  local.set $29
  local.get $25
  i64.const 62
  i64.shr_s
  local.get $28
  i64.sub
  local.set $30
  i64.const 4372995238176751616
  local.get $26
  local.get $28
  i64.xor
  local.set $13
  local.get $27
  local.get $29
  i64.xor
  local.set $12
  local.get $12
  i64.clz
  local.set $19
  local.get $12
  local.get $19
  i64.shl
  local.get $13
  i64.const 64
  local.get $19
  i64.sub
  i64.shr_u
  i64.or
  local.set $12
  local.get $13
  local.get $19
  i64.shl
  local.set $13
  i64.const -3958705157555305932
  local.set $16
  local.get $12
  local.set $15
  local.get $16
  i64.const 4294967295
  i64.and
  local.set $18
  local.get $15
  i64.const 4294967295
  i64.and
  local.set $17
  local.get $16
  i64.const 32
  i64.shr_u
  local.set $16
  local.get $15
  i64.const 32
  i64.shr_u
  local.set $15
  local.get $18
  local.get $17
  i64.mul
  local.set $33
  local.get $33
  i64.const 4294967295
  i64.and
  local.set $31
  local.get $16
  local.get $17
  i64.mul
  local.get $33
  i64.const 32
  i64.shr_u
  i64.add
  local.set $33
  local.get $33
  i64.const 32
  i64.shr_u
  local.set $32
  local.get $18
  local.get $15
  i64.mul
  local.get $33
  i64.const 4294967295
  i64.and
  i64.add
  local.set $33
  local.get $16
  local.get $15
  i64.mul
  local.get $32
  i64.add
  local.get $33
  i64.const 32
  i64.shr_u
  i64.add
  global.set $~lib/math/res128_hi
  local.get $33
  i64.const 32
  i64.shl
  local.get $31
  i64.add
  local.set $33
  global.get $~lib/math/res128_hi
  local.set $32
  local.get $32
  i64.const 11
  i64.shr_u
  local.set $31
  local.get $33
  i64.const 11
  i64.shr_u
  local.get $32
  i64.const 53
  i64.shl
  i64.or
  local.set $17
  f64.const 2.6469779601696886e-23
  i64.const -4267615245585081135
  f64.convert_i64_u
  f64.mul
  local.get $12
  f64.convert_i64_u
  f64.mul
  f64.const 2.6469779601696886e-23
  i64.const -3958705157555305932
  f64.convert_i64_u
  f64.mul
  local.get $13
  f64.convert_i64_u
  f64.mul
  f64.add
  i64.trunc_f64_u
  local.set $18
  local.get $31
  local.get $33
  local.get $18
  i64.lt_u
  i64.extend_i32_u
  i64.add
  f64.convert_i64_u
  global.set $~lib/math/rempio2_y0
  f64.const 5.421010862427522e-20
  local.get $17
  local.get $18
  i64.add
  f64.convert_i64_u
  f64.mul
  global.set $~lib/math/rempio2_y1
  local.get $19
  i64.const 52
  i64.shl
  i64.sub
  local.set $34
  local.get $1
  local.get $27
  i64.xor
  i64.const -9223372036854775808
  i64.and
  local.set $35
  local.get $34
  local.get $35
  i64.or
  f64.reinterpret_i64
  local.set $36
  global.get $~lib/math/rempio2_y0
  local.get $36
  f64.mul
  global.set $~lib/math/rempio2_y0
  global.get $~lib/math/rempio2_y1
  local.get $36
  f64.mul
  global.set $~lib/math/rempio2_y1
  local.get $30
  i32.wrap_i64
 )
 (func $~lib/math/NativeMath.sin (param $0 f64) (result f64)
  (local $1 i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 i64)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f64)
  (local $17 i32)
  (local $18 f64)
  (local $19 f64)
  local.get $0
  i64.reinterpret_f64
  local.set $1
  local.get $1
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $2
  local.get $2
  i32.const 31
  i32.shr_u
  local.set $3
  local.get $2
  i32.const 2147483647
  i32.and
  local.set $2
  local.get $2
  i32.const 1072243195
  i32.le_u
  if
   local.get $2
   i32.const 1045430272
   i32.lt_u
   if
    local.get $0
    return
   end
   block $~lib/math/sin_kern|inlined.0 (result f64)
    local.get $0
    local.set $6
    f64.const 0
    local.set $5
    i32.const 0
    local.set $4
    local.get $6
    local.get $6
    f64.mul
    local.set $7
    local.get $7
    local.get $7
    f64.mul
    local.set $8
    f64.const 0.00833333333332249
    local.get $7
    f64.const -1.984126982985795e-04
    local.get $7
    f64.const 2.7557313707070068e-06
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $7
    local.get $8
    f64.mul
    f64.const -2.5050760253406863e-08
    local.get $7
    f64.const 1.58969099521155e-10
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $9
    local.get $7
    local.get $6
    f64.mul
    local.set $10
    local.get $4
    i32.eqz
    if
     local.get $6
     local.get $10
     f64.const -0.16666666666666632
     local.get $7
     local.get $9
     f64.mul
     f64.add
     f64.mul
     f64.add
     br $~lib/math/sin_kern|inlined.0
    else
     local.get $6
     local.get $7
     f64.const 0.5
     local.get $5
     f64.mul
     local.get $10
     local.get $9
     f64.mul
     f64.sub
     f64.mul
     local.get $5
     f64.sub
     local.get $10
     f64.const -0.16666666666666632
     f64.mul
     f64.sub
     f64.sub
     br $~lib/math/sin_kern|inlined.0
    end
    unreachable
   end
   return
  end
  local.get $2
  i32.const 2146435072
  i32.ge_u
  if
   local.get $0
   local.get $0
   f64.sub
   return
  end
  block $~lib/math/rempio2|inlined.0 (result i32)
   local.get $0
   local.set $5
   local.get $1
   local.set $11
   local.get $3
   local.set $4
   local.get $11
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const 2147483647
   i32.and
   local.set $12
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   local.get $12
   i32.const 1073928572
   i32.lt_u
   if
    i32.const 1
    local.set $13
    local.get $4
    i32.eqz
    if
     local.get $5
     f64.const 1.5707963267341256
     f64.sub
     local.set $10
     local.get $12
     i32.const 1073291771
     i32.ne
     if
      local.get $10
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $9
      local.get $10
      local.get $9
      f64.sub
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $8
     else
      local.get $10
      f64.const 6.077100506303966e-11
      f64.sub
      local.set $10
      local.get $10
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $9
      local.get $10
      local.get $9
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $8
     end
    else
     local.get $5
     f64.const 1.5707963267341256
     f64.add
     local.set $10
     local.get $12
     i32.const 1073291771
     i32.ne
     if
      local.get $10
      f64.const 6.077100506506192e-11
      f64.add
      local.set $9
      local.get $10
      local.get $9
      f64.sub
      f64.const 6.077100506506192e-11
      f64.add
      local.set $8
     else
      local.get $10
      f64.const 6.077100506303966e-11
      f64.add
      local.set $10
      local.get $10
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $9
      local.get $10
      local.get $9
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $8
     end
     i32.const -1
     local.set $13
    end
    local.get $9
    global.set $~lib/math/rempio2_y0
    local.get $8
    global.set $~lib/math/rempio2_y1
    local.get $13
    br $~lib/math/rempio2|inlined.0
   end
   local.get $12
   i32.const 1094263291
   i32.lt_u
   if
    local.get $5
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.set $8
    local.get $5
    local.get $8
    f64.const 1.5707963267341256
    f64.mul
    f64.sub
    local.set $9
    local.get $8
    f64.const 6.077100506506192e-11
    f64.mul
    local.set $10
    local.get $12
    i32.const 20
    i32.shr_u
    local.set $13
    local.get $9
    local.get $10
    f64.sub
    local.set $7
    local.get $7
    i64.reinterpret_f64
    i64.const 32
    i64.shr_u
    i32.wrap_i64
    local.set $14
    local.get $13
    local.get $14
    i32.const 20
    i32.shr_u
    i32.const 2047
    i32.and
    i32.sub
    local.set $15
    local.get $15
    i32.const 16
    i32.gt_u
    if
     local.get $9
     local.set $6
     local.get $8
     f64.const 6.077100506303966e-11
     f64.mul
     local.set $10
     local.get $6
     local.get $10
     f64.sub
     local.set $9
     local.get $8
     f64.const 2.0222662487959506e-21
     f64.mul
     local.get $6
     local.get $9
     f64.sub
     local.get $10
     f64.sub
     f64.sub
     local.set $10
     local.get $9
     local.get $10
     f64.sub
     local.set $7
     local.get $7
     i64.reinterpret_f64
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     local.set $14
     local.get $13
     local.get $14
     i32.const 20
     i32.shr_u
     i32.const 2047
     i32.and
     i32.sub
     local.set $15
     local.get $15
     i32.const 49
     i32.gt_u
     if
      local.get $9
      local.set $16
      local.get $8
      f64.const 2.0222662487111665e-21
      f64.mul
      local.set $10
      local.get $16
      local.get $10
      f64.sub
      local.set $9
      local.get $8
      f64.const 8.4784276603689e-32
      f64.mul
      local.get $16
      local.get $9
      f64.sub
      local.get $10
      f64.sub
      f64.sub
      local.set $10
      local.get $9
      local.get $10
      f64.sub
      local.set $7
     end
    end
    local.get $9
    local.get $7
    f64.sub
    local.get $10
    f64.sub
    local.set $6
    local.get $7
    global.set $~lib/math/rempio2_y0
    local.get $6
    global.set $~lib/math/rempio2_y1
    local.get $8
    i32.trunc_f64_s
    br $~lib/math/rempio2|inlined.0
   end
   local.get $5
   local.get $11
   call $~lib/math/pio2_large_quot
   local.set $15
   i32.const 0
   local.get $15
   i32.sub
   local.get $15
   local.get $4
   select
  end
  local.set $17
  global.get $~lib/math/rempio2_y0
  local.set $18
  global.get $~lib/math/rempio2_y1
  local.set $19
  local.get $17
  i32.const 1
  i32.and
  if (result f64)
   local.get $18
   local.set $8
   local.get $19
   local.set $16
   local.get $8
   local.get $8
   f64.mul
   local.set $5
   local.get $5
   local.get $5
   f64.mul
   local.set $6
   local.get $5
   f64.const 0.0416666666666666
   local.get $5
   f64.const -0.001388888888887411
   local.get $5
   f64.const 2.480158728947673e-05
   f64.mul
   f64.add
   f64.mul
   f64.add
   f64.mul
   local.get $6
   local.get $6
   f64.mul
   f64.const -2.7557314351390663e-07
   local.get $5
   f64.const 2.087572321298175e-09
   local.get $5
   f64.const -1.1359647557788195e-11
   f64.mul
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.set $7
   f64.const 0.5
   local.get $5
   f64.mul
   local.set $10
   f64.const 1
   local.get $10
   f64.sub
   local.set $6
   local.get $6
   f64.const 1
   local.get $6
   f64.sub
   local.get $10
   f64.sub
   local.get $5
   local.get $7
   f64.mul
   local.get $8
   local.get $16
   f64.mul
   f64.sub
   f64.add
   f64.add
  else
   block $~lib/math/sin_kern|inlined.1 (result f64)
    local.get $18
    local.set $16
    local.get $19
    local.set $9
    i32.const 1
    local.set $13
    local.get $16
    local.get $16
    f64.mul
    local.set $10
    local.get $10
    local.get $10
    f64.mul
    local.set $7
    f64.const 0.00833333333332249
    local.get $10
    f64.const -1.984126982985795e-04
    local.get $10
    f64.const 2.7557313707070068e-06
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $10
    local.get $7
    f64.mul
    f64.const -2.5050760253406863e-08
    local.get $10
    f64.const 1.58969099521155e-10
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $6
    local.get $10
    local.get $16
    f64.mul
    local.set $5
    local.get $13
    i32.eqz
    if
     local.get $16
     local.get $5
     f64.const -0.16666666666666632
     local.get $10
     local.get $6
     f64.mul
     f64.add
     f64.mul
     f64.add
     br $~lib/math/sin_kern|inlined.1
    else
     local.get $16
     local.get $10
     f64.const 0.5
     local.get $9
     f64.mul
     local.get $5
     local.get $6
     f64.mul
     f64.sub
     f64.mul
     local.get $9
     f64.sub
     local.get $5
     f64.const -0.16666666666666632
     f64.mul
     f64.sub
     f64.sub
     br $~lib/math/sin_kern|inlined.1
    end
    unreachable
   end
  end
  local.set $0
  local.get $17
  i32.const 2
  i32.and
  if (result f64)
   local.get $0
   f64.neg
  else
   local.get $0
  end
 )
 (func $~lib/math/NativeMath.cos (param $0 f64) (result f64)
  (local $1 i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 i32)
  (local $11 i64)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f64)
  (local $17 i32)
  (local $18 f64)
  (local $19 f64)
  local.get $0
  i64.reinterpret_f64
  local.set $1
  local.get $1
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $2
  local.get $2
  i32.const 31
  i32.shr_u
  local.set $3
  local.get $2
  i32.const 2147483647
  i32.and
  local.set $2
  local.get $2
  i32.const 1072243195
  i32.le_u
  if
   local.get $2
   i32.const 1044816030
   i32.lt_u
   if
    f64.const 1
    return
   end
   local.get $0
   local.set $5
   f64.const 0
   local.set $4
   local.get $5
   local.get $5
   f64.mul
   local.set $6
   local.get $6
   local.get $6
   f64.mul
   local.set $7
   local.get $6
   f64.const 0.0416666666666666
   local.get $6
   f64.const -0.001388888888887411
   local.get $6
   f64.const 2.480158728947673e-05
   f64.mul
   f64.add
   f64.mul
   f64.add
   f64.mul
   local.get $7
   local.get $7
   f64.mul
   f64.const -2.7557314351390663e-07
   local.get $6
   f64.const 2.087572321298175e-09
   local.get $6
   f64.const -1.1359647557788195e-11
   f64.mul
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.set $8
   f64.const 0.5
   local.get $6
   f64.mul
   local.set $9
   f64.const 1
   local.get $9
   f64.sub
   local.set $7
   local.get $7
   f64.const 1
   local.get $7
   f64.sub
   local.get $9
   f64.sub
   local.get $6
   local.get $8
   f64.mul
   local.get $5
   local.get $4
   f64.mul
   f64.sub
   f64.add
   f64.add
   return
  end
  local.get $2
  i32.const 2146435072
  i32.ge_u
  if
   local.get $0
   local.get $0
   f64.sub
   return
  end
  block $~lib/math/rempio2|inlined.1 (result i32)
   local.get $0
   local.set $4
   local.get $1
   local.set $11
   local.get $3
   local.set $10
   local.get $11
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const 2147483647
   i32.and
   local.set $12
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   local.get $12
   i32.const 1073928572
   i32.lt_u
   if
    i32.const 1
    local.set $13
    local.get $10
    i32.eqz
    if
     local.get $4
     f64.const 1.5707963267341256
     f64.sub
     local.set $9
     local.get $12
     i32.const 1073291771
     i32.ne
     if
      local.get $9
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $8
      local.get $9
      local.get $8
      f64.sub
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $7
     else
      local.get $9
      f64.const 6.077100506303966e-11
      f64.sub
      local.set $9
      local.get $9
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $8
      local.get $9
      local.get $8
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $7
     end
    else
     local.get $4
     f64.const 1.5707963267341256
     f64.add
     local.set $9
     local.get $12
     i32.const 1073291771
     i32.ne
     if
      local.get $9
      f64.const 6.077100506506192e-11
      f64.add
      local.set $8
      local.get $9
      local.get $8
      f64.sub
      f64.const 6.077100506506192e-11
      f64.add
      local.set $7
     else
      local.get $9
      f64.const 6.077100506303966e-11
      f64.add
      local.set $9
      local.get $9
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $8
      local.get $9
      local.get $8
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $7
     end
     i32.const -1
     local.set $13
    end
    local.get $8
    global.set $~lib/math/rempio2_y0
    local.get $7
    global.set $~lib/math/rempio2_y1
    local.get $13
    br $~lib/math/rempio2|inlined.1
   end
   local.get $12
   i32.const 1094263291
   i32.lt_u
   if
    local.get $4
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.set $7
    local.get $4
    local.get $7
    f64.const 1.5707963267341256
    f64.mul
    f64.sub
    local.set $8
    local.get $7
    f64.const 6.077100506506192e-11
    f64.mul
    local.set $9
    local.get $12
    i32.const 20
    i32.shr_u
    local.set $13
    local.get $8
    local.get $9
    f64.sub
    local.set $6
    local.get $6
    i64.reinterpret_f64
    i64.const 32
    i64.shr_u
    i32.wrap_i64
    local.set $14
    local.get $13
    local.get $14
    i32.const 20
    i32.shr_u
    i32.const 2047
    i32.and
    i32.sub
    local.set $15
    local.get $15
    i32.const 16
    i32.gt_u
    if
     local.get $8
     local.set $5
     local.get $7
     f64.const 6.077100506303966e-11
     f64.mul
     local.set $9
     local.get $5
     local.get $9
     f64.sub
     local.set $8
     local.get $7
     f64.const 2.0222662487959506e-21
     f64.mul
     local.get $5
     local.get $8
     f64.sub
     local.get $9
     f64.sub
     f64.sub
     local.set $9
     local.get $8
     local.get $9
     f64.sub
     local.set $6
     local.get $6
     i64.reinterpret_f64
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     local.set $14
     local.get $13
     local.get $14
     i32.const 20
     i32.shr_u
     i32.const 2047
     i32.and
     i32.sub
     local.set $15
     local.get $15
     i32.const 49
     i32.gt_u
     if
      local.get $8
      local.set $16
      local.get $7
      f64.const 2.0222662487111665e-21
      f64.mul
      local.set $9
      local.get $16
      local.get $9
      f64.sub
      local.set $8
      local.get $7
      f64.const 8.4784276603689e-32
      f64.mul
      local.get $16
      local.get $8
      f64.sub
      local.get $9
      f64.sub
      f64.sub
      local.set $9
      local.get $8
      local.get $9
      f64.sub
      local.set $6
     end
    end
    local.get $8
    local.get $6
    f64.sub
    local.get $9
    f64.sub
    local.set $5
    local.get $6
    global.set $~lib/math/rempio2_y0
    local.get $5
    global.set $~lib/math/rempio2_y1
    local.get $7
    i32.trunc_f64_s
    br $~lib/math/rempio2|inlined.1
   end
   local.get $4
   local.get $11
   call $~lib/math/pio2_large_quot
   local.set $15
   i32.const 0
   local.get $15
   i32.sub
   local.get $15
   local.get $10
   select
  end
  local.set $17
  global.get $~lib/math/rempio2_y0
  local.set $18
  global.get $~lib/math/rempio2_y1
  local.set $19
  local.get $17
  i32.const 1
  i32.and
  if (result f64)
   block $~lib/math/sin_kern|inlined.2 (result f64)
    local.get $18
    local.set $7
    local.get $19
    local.set $16
    i32.const 1
    local.set $13
    local.get $7
    local.get $7
    f64.mul
    local.set $4
    local.get $4
    local.get $4
    f64.mul
    local.set $5
    f64.const 0.00833333333332249
    local.get $4
    f64.const -1.984126982985795e-04
    local.get $4
    f64.const 2.7557313707070068e-06
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.get $4
    local.get $5
    f64.mul
    f64.const -2.5050760253406863e-08
    local.get $4
    f64.const 1.58969099521155e-10
    f64.mul
    f64.add
    f64.mul
    f64.add
    local.set $6
    local.get $4
    local.get $7
    f64.mul
    local.set $9
    local.get $13
    i32.eqz
    if
     local.get $7
     local.get $9
     f64.const -0.16666666666666632
     local.get $4
     local.get $6
     f64.mul
     f64.add
     f64.mul
     f64.add
     br $~lib/math/sin_kern|inlined.2
    else
     local.get $7
     local.get $4
     f64.const 0.5
     local.get $16
     f64.mul
     local.get $9
     local.get $6
     f64.mul
     f64.sub
     f64.mul
     local.get $16
     f64.sub
     local.get $9
     f64.const -0.16666666666666632
     f64.mul
     f64.sub
     f64.sub
     br $~lib/math/sin_kern|inlined.2
    end
    unreachable
   end
  else
   local.get $18
   local.set $16
   local.get $19
   local.set $8
   local.get $16
   local.get $16
   f64.mul
   local.set $9
   local.get $9
   local.get $9
   f64.mul
   local.set $6
   local.get $9
   f64.const 0.0416666666666666
   local.get $9
   f64.const -0.001388888888887411
   local.get $9
   f64.const 2.480158728947673e-05
   f64.mul
   f64.add
   f64.mul
   f64.add
   f64.mul
   local.get $6
   local.get $6
   f64.mul
   f64.const -2.7557314351390663e-07
   local.get $9
   f64.const 2.087572321298175e-09
   local.get $9
   f64.const -1.1359647557788195e-11
   f64.mul
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.set $5
   f64.const 0.5
   local.get $9
   f64.mul
   local.set $4
   f64.const 1
   local.get $4
   f64.sub
   local.set $6
   local.get $6
   f64.const 1
   local.get $6
   f64.sub
   local.get $4
   f64.sub
   local.get $9
   local.get $5
   f64.mul
   local.get $16
   local.get $8
   f64.mul
   f64.sub
   f64.add
   f64.add
  end
  local.set $0
  local.get $17
  i32.const 1
  i32.add
  i32.const 2
  i32.and
  if (result f64)
   local.get $0
   f64.neg
  else
   local.get $0
  end
 )
 (func $assembly/quat/setAxisAngle (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 f64)
  local.get $2
  f64.const 0.5
  f64.mul
  local.set $2
  local.get $2
  call $~lib/math/NativeMath.sin
  local.set $3
  local.get $0
  i32.const 0
  local.get $3
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $2
  call $~lib/math/NativeMath.cos
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $start:assembly/quat~anonymous|0 (result i32)
  i32.const 1952
 )
 (func $~lib/math/R (param $0 f64) (result f64)
  (local $1 f64)
  (local $2 f64)
  local.get $0
  f64.const 0.16666666666666666
  local.get $0
  f64.const -0.3255658186224009
  local.get $0
  f64.const 0.20121253213486293
  local.get $0
  f64.const -0.04005553450067941
  local.get $0
  f64.const 7.915349942898145e-04
  local.get $0
  f64.const 3.479331075960212e-05
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  local.set $1
  f64.const 1
  local.get $0
  f64.const -2.403394911734414
  local.get $0
  f64.const 2.0209457602335057
  local.get $0
  f64.const -0.6882839716054533
  local.get $0
  f64.const 0.07703815055590194
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  local.set $2
  local.get $1
  local.get $2
  f64.div
 )
 (func $~lib/math/NativeMath.acos (param $0 f64) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  local.get $0
  i64.reinterpret_f64
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $1
  local.get $1
  i32.const 2147483647
  i32.and
  local.set $2
  local.get $2
  i32.const 1072693248
  i32.ge_u
  if
   local.get $0
   i64.reinterpret_f64
   i32.wrap_i64
   local.set $3
   local.get $2
   i32.const 1072693248
   i32.sub
   local.get $3
   i32.or
   i32.const 0
   i32.eq
   if
    local.get $1
    i32.const 31
    i32.shr_u
    if
     f64.const 2
     f64.const 1.5707963267948966
     f64.mul
     f32.const 7.52316384526264e-37
     f64.promote_f32
     f64.add
     return
    end
    f64.const 0
    return
   end
   f64.const 0
   local.get $0
   local.get $0
   f64.sub
   f64.div
   return
  end
  local.get $2
  i32.const 1071644672
  i32.lt_u
  if
   local.get $2
   i32.const 1012924416
   i32.le_u
   if
    f64.const 1.5707963267948966
    f32.const 7.52316384526264e-37
    f64.promote_f32
    f64.add
    return
   end
   f64.const 1.5707963267948966
   local.get $0
   f64.const 6.123233995736766e-17
   local.get $0
   local.get $0
   local.get $0
   f64.mul
   call $~lib/math/R
   f64.mul
   f64.sub
   f64.sub
   f64.sub
   return
  end
  local.get $1
  i32.const 31
  i32.shr_u
  if
   f64.const 0.5
   local.get $0
   f64.const 0.5
   f64.mul
   f64.add
   local.set $6
   local.get $6
   f64.sqrt
   local.set $4
   local.get $6
   call $~lib/math/R
   local.get $4
   f64.mul
   f64.const 6.123233995736766e-17
   f64.sub
   local.set $5
   f64.const 2
   f64.const 1.5707963267948966
   local.get $4
   local.get $5
   f64.add
   f64.sub
   f64.mul
   return
  end
  f64.const 0.5
  local.get $0
  f64.const 0.5
  f64.mul
  f64.sub
  local.set $6
  local.get $6
  f64.sqrt
  local.set $4
  local.get $4
  i64.reinterpret_f64
  i64.const -4294967296
  i64.and
  f64.reinterpret_i64
  local.set $7
  local.get $6
  local.get $7
  local.get $7
  f64.mul
  f64.sub
  local.get $4
  local.get $7
  f64.add
  f64.div
  local.set $8
  local.get $6
  call $~lib/math/R
  local.get $4
  f64.mul
  local.get $8
  f64.add
  local.set $5
  f64.const 2
  local.get $7
  local.get $5
  f64.add
  f64.mul
 )
 (func $assembly/quat/slerp (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $4
  local.get $8
  f64.mul
  local.get $5
  local.get $9
  f64.mul
  f64.add
  local.get $6
  local.get $10
  f64.mul
  f64.add
  local.get $7
  local.get $11
  f64.mul
  f64.add
  local.set $13
  local.get $13
  f64.const 0
  f64.lt
  if
   local.get $13
   f64.neg
   local.set $13
   local.get $8
   f64.neg
   local.set $8
   local.get $9
   f64.neg
   local.set $9
   local.get $10
   f64.neg
   local.set $10
   local.get $11
   f64.neg
   local.set $11
  end
  f64.const 1
  local.get $13
  f64.sub
  global.get $assembly/common/EPSILON
  f64.gt
  if
   local.get $13
   call $~lib/math/NativeMath.acos
   local.set $12
   local.get $12
   call $~lib/math/NativeMath.sin
   local.set $14
   f64.const 1
   local.get $3
   f64.sub
   local.get $12
   f64.mul
   call $~lib/math/NativeMath.sin
   local.get $14
   f64.div
   local.set $15
   local.get $3
   local.get $12
   f64.mul
   call $~lib/math/NativeMath.sin
   local.get $14
   f64.div
   local.set $16
  else
   f64.const 1
   local.get $3
   f64.sub
   local.set $15
   local.get $3
   local.set $16
  end
  local.get $0
  i32.const 0
  local.get $15
  local.get $4
  f64.mul
  local.get $16
  local.get $8
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $15
  local.get $5
  f64.mul
  local.get $16
  local.get $9
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $15
  local.get $6
  f64.mul
  local.get $16
  local.get $10
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $15
  local.get $7
  f64.mul
  local.get $16
  local.get $11
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $start:assembly/quat~anonymous|1 (result i32)
  i32.const 2016
 )
 (func $assembly/quat/fromMat3 (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  f64.add
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  f64.add
  local.set $2
  local.get $2
  f64.const 0
  f64.gt
  if
   local.get $2
   f64.const 1
   f64.add
   local.set $4
   local.get $4
   f64.sqrt
   local.set $3
   local.get $0
   i32.const 3
   f64.const 0.5
   local.get $3
   f64.mul
   call $~lib/typedarray/Float64Array#__set
   f64.const 0.5
   local.get $3
   f64.div
   local.set $3
   local.get $0
   i32.const 0
   local.get $1
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   f64.sub
   local.get $3
   f64.mul
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   local.get $1
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   f64.sub
   local.get $3
   f64.mul
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   f64.sub
   local.get $3
   f64.mul
   call $~lib/typedarray/Float64Array#__set
  else
   i32.const 0
   local.set $5
   local.get $1
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   f64.gt
   if
    i32.const 1
    local.set $5
   end
   local.get $1
   i32.const 8
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   local.get $5
   i32.const 3
   i32.mul
   local.get $5
   i32.add
   call $~lib/typedarray/Float64Array#__get
   f64.gt
   if
    i32.const 2
    local.set $5
   end
   local.get $5
   i32.const 1
   i32.add
   i32.const 3
   i32.rem_s
   local.set $6
   local.get $5
   i32.const 2
   i32.add
   i32.const 3
   i32.rem_s
   local.set $7
   local.get $1
   local.get $5
   i32.const 3
   i32.mul
   local.get $5
   i32.add
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   local.get $6
   i32.const 3
   i32.mul
   local.get $6
   i32.add
   call $~lib/typedarray/Float64Array#__get
   f64.sub
   local.get $1
   local.get $7
   i32.const 3
   i32.mul
   local.get $7
   i32.add
   call $~lib/typedarray/Float64Array#__get
   f64.sub
   f64.const 1
   f64.add
   local.set $4
   local.get $4
   f64.sqrt
   local.set $3
   local.get $0
   local.get $5
   f64.const 0.5
   local.get $3
   f64.mul
   call $~lib/typedarray/Float64Array#__set
   f64.const 0.5
   local.get $3
   f64.div
   local.set $3
   local.get $0
   i32.const 3
   local.get $1
   local.get $6
   i32.const 3
   i32.mul
   local.get $7
   i32.add
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   local.get $7
   i32.const 3
   i32.mul
   local.get $6
   i32.add
   call $~lib/typedarray/Float64Array#__get
   f64.sub
   local.get $3
   f64.mul
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   local.get $6
   local.get $1
   local.get $6
   i32.const 3
   i32.mul
   local.get $5
   i32.add
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   local.get $5
   i32.const 3
   i32.mul
   local.get $6
   i32.add
   call $~lib/typedarray/Float64Array#__get
   f64.add
   local.get $3
   f64.mul
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   local.get $7
   local.get $1
   local.get $7
   i32.const 3
   i32.mul
   local.get $5
   i32.add
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   local.get $5
   i32.const 3
   i32.mul
   local.get $7
   i32.add
   call $~lib/typedarray/Float64Array#__get
   f64.add
   local.get $3
   f64.mul
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
 )
 (func $start:assembly/quat~anonymous|2 (result i32)
  i32.const 2080
 )
 (func $start:assembly/quat
  call $start:assembly/vec3
  call $start:assembly/vec4
  call $assembly/vec3/create
  global.set $assembly/quat/tmpvec3
  f64.const 1
  f64.const 0
  f64.const 0
  call $assembly/vec3/fromValues
  global.set $assembly/quat/xUnitVec3
  f64.const 0
  f64.const 1
  f64.const 0
  call $assembly/vec3/fromValues
  global.set $assembly/quat/yUnitVec3
  i32.const 0
  global.set $~argumentsLength
  i32.const 1984
  i32.load
  call_indirect $0 (type $none_=>_i32)
  global.set $assembly/quat/rotationTo
  call $assembly/quat/create
  global.set $assembly/quat/temp1
  call $assembly/quat/create
  global.set $assembly/quat/temp2
  i32.const 0
  global.set $~argumentsLength
  i32.const 2048
  i32.load
  call_indirect $0 (type $none_=>_i32)
  global.set $assembly/quat/sqlerp
  call $assembly/mat3/create
  global.set $assembly/quat/matr
  i32.const 0
  global.set $~argumentsLength
  i32.const 2112
  i32.load
  call_indirect $0 (type $none_=>_i32)
  global.set $assembly/quat/setAxes
 )
 (func $assembly/quat2/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $15
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $16
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $17
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $18
  local.get $0
  i32.const 0
  local.get $3
  local.get $18
  f64.mul
  local.get $6
  local.get $15
  f64.mul
  f64.add
  local.get $4
  local.get $17
  f64.mul
  f64.add
  local.get $5
  local.get $16
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $18
  f64.mul
  local.get $6
  local.get $16
  f64.mul
  f64.add
  local.get $5
  local.get $15
  f64.mul
  f64.add
  local.get $3
  local.get $17
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $5
  local.get $18
  f64.mul
  local.get $6
  local.get $17
  f64.mul
  f64.add
  local.get $3
  local.get $16
  f64.mul
  f64.add
  local.get $4
  local.get $15
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $6
  local.get $18
  f64.mul
  local.get $3
  local.get $15
  f64.mul
  f64.sub
  local.get $4
  local.get $16
  f64.mul
  f64.sub
  local.get $5
  local.get $17
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $3
  local.get $10
  f64.mul
  local.get $6
  local.get $7
  f64.mul
  f64.add
  local.get $4
  local.get $9
  f64.mul
  f64.add
  local.get $5
  local.get $8
  f64.mul
  f64.sub
  local.get $11
  local.get $18
  f64.mul
  f64.add
  local.get $14
  local.get $15
  f64.mul
  f64.add
  local.get $12
  local.get $17
  f64.mul
  f64.add
  local.get $13
  local.get $16
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $4
  local.get $10
  f64.mul
  local.get $6
  local.get $8
  f64.mul
  f64.add
  local.get $5
  local.get $7
  f64.mul
  f64.add
  local.get $3
  local.get $9
  f64.mul
  f64.sub
  local.get $12
  local.get $18
  f64.mul
  f64.add
  local.get $14
  local.get $16
  f64.mul
  f64.add
  local.get $13
  local.get $15
  f64.mul
  f64.add
  local.get $11
  local.get $17
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $5
  local.get $10
  f64.mul
  local.get $6
  local.get $9
  f64.mul
  f64.add
  local.get $3
  local.get $8
  f64.mul
  f64.add
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  local.get $13
  local.get $18
  f64.mul
  f64.add
  local.get $14
  local.get $17
  f64.mul
  f64.add
  local.get $11
  local.get $16
  f64.mul
  f64.add
  local.get $12
  local.get $15
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $6
  local.get $10
  f64.mul
  local.get $3
  local.get $7
  f64.mul
  f64.sub
  local.get $4
  local.get $8
  f64.mul
  f64.sub
  local.get $5
  local.get $9
  f64.mul
  f64.sub
  local.get $14
  local.get $18
  f64.mul
  f64.add
  local.get $11
  local.get $15
  f64.mul
  f64.sub
  local.get $12
  local.get $16
  f64.mul
  f64.sub
  local.get $13
  local.get $17
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $~lib/math/tan_kern (param $0 f64) (param $1 f64) (param $2 i32) (result f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f64)
  (local $12 f64)
  local.get $0
  i64.reinterpret_f64
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $8
  local.get $8
  i32.const 2147483647
  i32.and
  local.set $9
  local.get $9
  i32.const 1072010280
  i32.ge_s
  local.set $10
  local.get $10
  if
   local.get $8
   i32.const 0
   i32.lt_s
   if
    local.get $0
    f64.neg
    local.set $0
    local.get $1
    f64.neg
    local.set $1
   end
   f64.const 0.7853981633974483
   local.get $0
   f64.sub
   local.set $3
   f64.const 3.061616997868383e-17
   local.get $1
   f64.sub
   local.set $6
   local.get $3
   local.get $6
   f64.add
   local.set $0
   f64.const 0
   local.set $1
  end
  local.get $0
  local.get $0
  f64.mul
  local.set $3
  local.get $3
  local.get $3
  f64.mul
  local.set $6
  f64.const 0.13333333333320124
  local.get $6
  f64.const 0.021869488294859542
  local.get $6
  f64.const 3.5920791075913124e-03
  local.get $6
  f64.const 5.880412408202641e-04
  local.get $6
  f64.const 7.817944429395571e-05
  local.get $6
  f64.const -1.8558637485527546e-05
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  local.set $4
  local.get $3
  f64.const 0.05396825397622605
  local.get $6
  f64.const 0.0088632398235993
  local.get $6
  f64.const 1.4562094543252903e-03
  local.get $6
  f64.const 2.464631348184699e-04
  local.get $6
  f64.const 7.140724913826082e-05
  local.get $6
  f64.const 2.590730518636337e-05
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  local.set $5
  local.get $3
  local.get $0
  f64.mul
  local.set $7
  local.get $1
  local.get $3
  local.get $7
  local.get $4
  local.get $5
  f64.add
  f64.mul
  local.get $1
  f64.add
  f64.mul
  f64.add
  local.set $4
  local.get $4
  f64.const 0.3333333333333341
  local.get $7
  f64.mul
  f64.add
  local.set $4
  local.get $0
  local.get $4
  f64.add
  local.set $6
  local.get $10
  if
   local.get $2
   f64.convert_i32_s
   local.set $5
   f64.const 1
   local.get $8
   i32.const 30
   i32.shr_s
   i32.const 2
   i32.and
   f64.convert_i32_s
   f64.sub
   local.get $5
   f64.const 2
   local.get $0
   local.get $6
   local.get $6
   f64.mul
   local.get $6
   local.get $5
   f64.add
   f64.div
   local.get $4
   f64.sub
   f64.sub
   f64.mul
   f64.sub
   f64.mul
   return
  end
  local.get $2
  i32.const 1
  i32.eq
  if
   local.get $6
   return
  end
  local.get $6
  local.set $3
  local.get $3
  i64.reinterpret_f64
  i64.const -4294967296
  i64.and
  f64.reinterpret_i64
  local.set $3
  local.get $4
  local.get $3
  local.get $0
  f64.sub
  f64.sub
  local.set $5
  f64.const 1
  f64.neg
  local.get $6
  f64.div
  local.tee $11
  local.set $12
  local.get $12
  i64.reinterpret_f64
  i64.const -4294967296
  i64.and
  f64.reinterpret_i64
  local.set $12
  f64.const 1
  local.get $12
  local.get $3
  f64.mul
  f64.add
  local.set $7
  local.get $12
  local.get $11
  local.get $7
  local.get $12
  local.get $5
  f64.mul
  f64.add
  f64.mul
  f64.add
 )
 (func $~lib/math/NativeMath.tan (param $0 f64) (result f64)
  (local $1 i64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 i32)
  (local $14 i32)
  (local $15 f64)
  (local $16 f64)
  (local $17 i32)
  local.get $0
  i64.reinterpret_f64
  local.set $1
  local.get $1
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $2
  local.get $2
  i32.const 31
  i32.shr_u
  local.set $3
  local.get $2
  i32.const 2147483647
  i32.and
  local.set $2
  local.get $2
  i32.const 1072243195
  i32.le_s
  if
   local.get $2
   i32.const 1044381696
   i32.lt_s
   if
    local.get $0
    return
   end
   local.get $0
   f64.const 0
   i32.const 1
   call $~lib/math/tan_kern
   return
  end
  local.get $2
  i32.const 2146435072
  i32.ge_s
  if
   local.get $0
   local.get $0
   f64.sub
   return
  end
  block $~lib/math/rempio2|inlined.2 (result i32)
   local.get $0
   local.set $6
   local.get $1
   local.set $5
   local.get $3
   local.set $4
   local.get $5
   i64.const 32
   i64.shr_u
   i32.wrap_i64
   i32.const 2147483647
   i32.and
   local.set $7
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   local.get $7
   i32.const 1073928572
   i32.lt_u
   if
    i32.const 1
    local.set $8
    local.get $4
    i32.eqz
    if
     local.get $6
     f64.const 1.5707963267341256
     f64.sub
     local.set $9
     local.get $7
     i32.const 1073291771
     i32.ne
     if
      local.get $9
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $10
      local.get $9
      local.get $10
      f64.sub
      f64.const 6.077100506506192e-11
      f64.sub
      local.set $11
     else
      local.get $9
      f64.const 6.077100506303966e-11
      f64.sub
      local.set $9
      local.get $9
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $10
      local.get $9
      local.get $10
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.sub
      local.set $11
     end
    else
     local.get $6
     f64.const 1.5707963267341256
     f64.add
     local.set $9
     local.get $7
     i32.const 1073291771
     i32.ne
     if
      local.get $9
      f64.const 6.077100506506192e-11
      f64.add
      local.set $10
      local.get $9
      local.get $10
      f64.sub
      f64.const 6.077100506506192e-11
      f64.add
      local.set $11
     else
      local.get $9
      f64.const 6.077100506303966e-11
      f64.add
      local.set $9
      local.get $9
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $10
      local.get $9
      local.get $10
      f64.sub
      f64.const 2.0222662487959506e-21
      f64.add
      local.set $11
     end
     i32.const -1
     local.set $8
    end
    local.get $10
    global.set $~lib/math/rempio2_y0
    local.get $11
    global.set $~lib/math/rempio2_y1
    local.get $8
    br $~lib/math/rempio2|inlined.2
   end
   local.get $7
   i32.const 1094263291
   i32.lt_u
   if
    local.get $6
    f64.const 0.6366197723675814
    f64.mul
    f64.nearest
    local.set $11
    local.get $6
    local.get $11
    f64.const 1.5707963267341256
    f64.mul
    f64.sub
    local.set $10
    local.get $11
    f64.const 6.077100506506192e-11
    f64.mul
    local.set $9
    local.get $7
    i32.const 20
    i32.shr_u
    local.set $8
    local.get $10
    local.get $9
    f64.sub
    local.set $12
    local.get $12
    i64.reinterpret_f64
    i64.const 32
    i64.shr_u
    i32.wrap_i64
    local.set $13
    local.get $8
    local.get $13
    i32.const 20
    i32.shr_u
    i32.const 2047
    i32.and
    i32.sub
    local.set $14
    local.get $14
    i32.const 16
    i32.gt_u
    if
     local.get $10
     local.set $15
     local.get $11
     f64.const 6.077100506303966e-11
     f64.mul
     local.set $9
     local.get $15
     local.get $9
     f64.sub
     local.set $10
     local.get $11
     f64.const 2.0222662487959506e-21
     f64.mul
     local.get $15
     local.get $10
     f64.sub
     local.get $9
     f64.sub
     f64.sub
     local.set $9
     local.get $10
     local.get $9
     f64.sub
     local.set $12
     local.get $12
     i64.reinterpret_f64
     i64.const 32
     i64.shr_u
     i32.wrap_i64
     local.set $13
     local.get $8
     local.get $13
     i32.const 20
     i32.shr_u
     i32.const 2047
     i32.and
     i32.sub
     local.set $14
     local.get $14
     i32.const 49
     i32.gt_u
     if
      local.get $10
      local.set $16
      local.get $11
      f64.const 2.0222662487111665e-21
      f64.mul
      local.set $9
      local.get $16
      local.get $9
      f64.sub
      local.set $10
      local.get $11
      f64.const 8.4784276603689e-32
      f64.mul
      local.get $16
      local.get $10
      f64.sub
      local.get $9
      f64.sub
      f64.sub
      local.set $9
      local.get $10
      local.get $9
      f64.sub
      local.set $12
     end
    end
    local.get $10
    local.get $12
    f64.sub
    local.get $9
    f64.sub
    local.set $15
    local.get $12
    global.set $~lib/math/rempio2_y0
    local.get $15
    global.set $~lib/math/rempio2_y1
    local.get $11
    i32.trunc_f64_s
    br $~lib/math/rempio2|inlined.2
   end
   local.get $6
   local.get $5
   call $~lib/math/pio2_large_quot
   local.set $14
   i32.const 0
   local.get $14
   i32.sub
   local.get $14
   local.get $4
   select
  end
  local.set $17
  global.get $~lib/math/rempio2_y0
  global.get $~lib/math/rempio2_y1
  i32.const 1
  local.get $17
  i32.const 1
  i32.and
  i32.const 1
  i32.shl
  i32.sub
  call $~lib/math/tan_kern
 )
 (func $assembly/mat4/perspectiveNO (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (result i32)
  (local $5 f64)
  (local $6 f64)
  f64.const 1
  local.get $1
  f64.const 2
  f64.div
  call $~lib/math/NativeMath.tan
  f64.div
  local.set $5
  local.get $0
  i32.const 0
  local.get $5
  local.get $2
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const -1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $4
  drop
  i32.const 2176
  i32.const 2176
  i32.eq
  if (result i32)
   local.get $4
   f64.const inf
   f64.ne
  else
   i32.const 0
  end
  if
   i32.const 1
   f64.convert_i32_s
   local.get $3
   local.get $4
   f64.sub
   f64.div
   local.set $6
   local.get $0
   i32.const 10
   local.get $4
   local.get $3
   f64.add
   local.get $6
   f64.mul
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 14
   f64.const 2
   local.get $4
   f64.mul
   local.get $3
   f64.mul
   local.get $6
   f64.mul
   call $~lib/typedarray/Float64Array#__set
  else
   local.get $0
   i32.const 10
   f64.const -1
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 14
   f64.const -2
   local.get $3
   f64.mul
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
 )
 (func $assembly/mat4/orthoNO (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (result i32)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  i32.const 1
  f64.convert_i32_s
  local.get $1
  local.get $2
  f64.sub
  f64.div
  local.set $7
  i32.const 1
  f64.convert_i32_s
  local.get $3
  local.get $4
  f64.sub
  f64.div
  local.set $8
  i32.const 1
  f64.convert_i32_s
  local.get $5
  local.get $6
  f64.sub
  f64.div
  local.set $9
  local.get $0
  i32.const 0
  f64.const -2
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const -2
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  f64.const 2
  local.get $9
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $1
  local.get $2
  f64.add
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $4
  local.get $3
  f64.add
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $6
  local.get $5
  f64.add
  local.get $9
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $1
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.set $15
  local.get $1
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.set $16
  local.get $1
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.set $17
  local.get $1
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.set $18
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $19
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $20
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $21
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $22
  local.get $0
  i32.const 0
  local.get $19
  local.get $3
  f64.mul
  local.get $20
  local.get $7
  f64.mul
  f64.add
  local.get $21
  local.get $11
  f64.mul
  f64.add
  local.get $22
  local.get $15
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $19
  local.get $4
  f64.mul
  local.get $20
  local.get $8
  f64.mul
  f64.add
  local.get $21
  local.get $12
  f64.mul
  f64.add
  local.get $22
  local.get $16
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $19
  local.get $5
  f64.mul
  local.get $20
  local.get $9
  f64.mul
  f64.add
  local.get $21
  local.get $13
  f64.mul
  f64.add
  local.get $22
  local.get $17
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $19
  local.get $6
  f64.mul
  local.get $20
  local.get $10
  f64.mul
  f64.add
  local.get $21
  local.get $14
  f64.mul
  f64.add
  local.get $22
  local.get $18
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $19
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $20
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $21
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $22
  local.get $0
  i32.const 4
  local.get $19
  local.get $3
  f64.mul
  local.get $20
  local.get $7
  f64.mul
  f64.add
  local.get $21
  local.get $11
  f64.mul
  f64.add
  local.get $22
  local.get $15
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $19
  local.get $4
  f64.mul
  local.get $20
  local.get $8
  f64.mul
  f64.add
  local.get $21
  local.get $12
  f64.mul
  f64.add
  local.get $22
  local.get $16
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $19
  local.get $5
  f64.mul
  local.get $20
  local.get $9
  f64.mul
  f64.add
  local.get $21
  local.get $13
  f64.mul
  f64.add
  local.get $22
  local.get $17
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $19
  local.get $6
  f64.mul
  local.get $20
  local.get $10
  f64.mul
  f64.add
  local.get $21
  local.get $14
  f64.mul
  f64.add
  local.get $22
  local.get $18
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $2
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $19
  local.get $2
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.set $20
  local.get $2
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.set $21
  local.get $2
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.set $22
  local.get $0
  i32.const 8
  local.get $19
  local.get $3
  f64.mul
  local.get $20
  local.get $7
  f64.mul
  f64.add
  local.get $21
  local.get $11
  f64.mul
  f64.add
  local.get $22
  local.get $15
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $19
  local.get $4
  f64.mul
  local.get $20
  local.get $8
  f64.mul
  f64.add
  local.get $21
  local.get $12
  f64.mul
  f64.add
  local.get $22
  local.get $16
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $19
  local.get $5
  f64.mul
  local.get $20
  local.get $9
  f64.mul
  f64.add
  local.get $21
  local.get $13
  f64.mul
  f64.add
  local.get $22
  local.get $17
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  local.get $19
  local.get $6
  f64.mul
  local.get $20
  local.get $10
  f64.mul
  f64.add
  local.get $21
  local.get $14
  f64.mul
  f64.add
  local.get $22
  local.get $18
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $2
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.set $19
  local.get $2
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.set $20
  local.get $2
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.set $21
  local.get $2
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.set $22
  local.get $0
  i32.const 12
  local.get $19
  local.get $3
  f64.mul
  local.get $20
  local.get $7
  f64.mul
  f64.add
  local.get $21
  local.get $11
  f64.mul
  f64.add
  local.get $22
  local.get $15
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $19
  local.get $4
  f64.mul
  local.get $20
  local.get $8
  f64.mul
  f64.add
  local.get $21
  local.get $12
  f64.mul
  f64.add
  local.get $22
  local.get $16
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $19
  local.get $5
  f64.mul
  local.get $20
  local.get $9
  f64.mul
  f64.add
  local.get $21
  local.get $13
  f64.mul
  f64.add
  local.get $22
  local.get $17
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  local.get $19
  local.get $6
  f64.mul
  local.get $20
  local.get $10
  f64.mul
  f64.add
  local.get $21
  local.get $14
  f64.mul
  f64.add
  local.get $22
  local.get $18
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $1
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $1
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $1
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  local.get $1
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $start:assembly/mat4
  call $start:assembly/quat
 )
 (func $assembly/mat3/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $15
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $16
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $17
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $18
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $19
  local.get $2
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $20
  local.get $0
  i32.const 0
  local.get $12
  local.get $3
  f64.mul
  local.get $13
  local.get $6
  f64.mul
  f64.add
  local.get $14
  local.get $9
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $12
  local.get $4
  f64.mul
  local.get $13
  local.get $7
  f64.mul
  f64.add
  local.get $14
  local.get $10
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $12
  local.get $5
  f64.mul
  local.get $13
  local.get $8
  f64.mul
  f64.add
  local.get $14
  local.get $11
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $15
  local.get $3
  f64.mul
  local.get $16
  local.get $6
  f64.mul
  f64.add
  local.get $17
  local.get $9
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $15
  local.get $4
  f64.mul
  local.get $16
  local.get $7
  f64.mul
  f64.add
  local.get $17
  local.get $10
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $15
  local.get $5
  f64.mul
  local.get $16
  local.get $8
  f64.mul
  f64.add
  local.get $17
  local.get $11
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $18
  local.get $3
  f64.mul
  local.get $19
  local.get $6
  f64.mul
  f64.add
  local.get $20
  local.get $9
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $18
  local.get $4
  f64.mul
  local.get $19
  local.get $7
  f64.mul
  f64.add
  local.get $20
  local.get $10
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $18
  local.get $5
  f64.mul
  local.get $19
  local.get $8
  f64.mul
  f64.add
  local.get $20
  local.get $11
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $start:assembly/mat3
  call $start:assembly/mat4
 )
 (func $assembly/vec2/length (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  local.get $2
  call $~lib/math/NativeMath.hypot
 )
 (func $assembly/vec2/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/divide (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/distance (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $3
  local.get $2
  local.get $3
  call $~lib/math/NativeMath.hypot
 )
 (func $assembly/vec2/squaredDistance (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $3
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $3
  f64.mul
  f64.add
 )
 (func $assembly/vec2/squaredLength (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  local.get $1
  f64.mul
  local.get $2
  local.get $2
  f64.mul
  f64.add
 )
 (func $start:assembly/vec2~anonymous|0 (result i32)
  i32.const 2624
 )
 (func $start:assembly/vec2
  call $start:assembly/mat3
  call $assembly/vec2/create
  global.set $assembly/vec2/vec
  i32.const 0
  global.set $~argumentsLength
  i32.const 2656
  i32.load
  call_indirect $0 (type $none_=>_i32)
  global.set $assembly/vec2/forEach
 )
 (func $assembly/mat2/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $0
  i32.const 0
  local.get $3
  local.get $7
  f64.mul
  local.get $5
  local.get $8
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $7
  f64.mul
  local.get $6
  local.get $8
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  local.get $9
  f64.mul
  local.get $5
  local.get $10
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $4
  local.get $9
  f64.mul
  local.get $6
  local.get $10
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $start:assembly/mat2
  call $start:assembly/vec2
 )
 (func $start:assembly/index
  call $start:assembly/common
  call $start:assembly/mat2
 )
 (func $assembly/common/setMatrixArrayType (param $0 i32)
  local.get $0
  global.set $assembly/common/ARRAY_TYPE
 )
 (func $assembly/common/toRadian (param $0 f64) (result f64)
  local.get $0
  global.get $assembly/common/degree
  f64.mul
 )
 (func $assembly/common/equals (param $0 f64) (param $1 f64) (result i32)
  (local $2 f64)
  local.get $0
  local.get $1
  f64.sub
  local.set $2
  local.get $2
  f64.abs
  global.get $assembly/common/EPSILON
  f64.const 1
  local.get $0
  local.set $2
  local.get $2
  f64.abs
  local.get $1
  local.set $2
  local.get $2
  f64.abs
  call $assembly/maths/Maths.max
  f64.mul
  f64.le
 )
 (func $assembly/mat2/copy (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2/identity (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2/transpose (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  local.get $0
  local.get $1
  i32.eq
  if
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.set $2
   local.get $0
   i32.const 1
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $2
   call $~lib/typedarray/Float64Array#__set
  else
   local.get $0
   i32.const 0
   local.get $1
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 3
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
 )
 (func $assembly/mat2/invert (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  local.get $5
  f64.mul
  local.get $4
  local.get $3
  f64.mul
  f64.sub
  local.set $6
  local.get $6
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  i32.eqz
  if
   i32.const 0
   return
  end
  f64.const 1
  local.get $6
  f64.div
  local.set $6
  local.get $0
  i32.const 0
  local.get $5
  local.get $6
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $3
  f64.neg
  local.get $6
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $4
  f64.neg
  local.get $6
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $2
  local.get $6
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2/adjoint (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 0
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2/determinant (param $0 i32) (result f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.sub
 )
 (func $assembly/mat2/rotate (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $2
  call $~lib/math/NativeMath.sin
  local.set $7
  local.get $2
  call $~lib/math/NativeMath.cos
  local.set $8
  local.get $0
  i32.const 0
  local.get $3
  local.get $8
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $8
  f64.mul
  local.get $6
  local.get $7
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  local.get $7
  f64.neg
  f64.mul
  local.get $5
  local.get $8
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $4
  local.get $7
  f64.neg
  f64.mul
  local.get $6
  local.get $8
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2/scale (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $0
  i32.const 0
  local.get $3
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $5
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $6
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2/fromRotation (param $0 i32) (param $1 f64) (result i32)
  (local $2 f64)
  (local $3 f64)
  local.get $1
  call $~lib/math/NativeMath.sin
  local.set $2
  local.get $1
  call $~lib/math/NativeMath.cos
  local.set $3
  local.get $0
  i32.const 0
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $2
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2/fromScaling (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $~lib/util/number/decimalCount32 (param $0 i32) (result i32)
  local.get $0
  i32.const 100000
  i32.lt_u
  if
   local.get $0
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    local.get $0
    i32.const 10
    i32.ge_u
    i32.add
    return
   else
    i32.const 3
    local.get $0
    i32.const 10000
    i32.ge_u
    i32.add
    local.get $0
    i32.const 1000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $0
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    local.get $0
    i32.const 1000000
    i32.ge_u
    i32.add
    return
   else
    i32.const 8
    local.get $0
    i32.const 1000000000
    i32.ge_u
    i32.add
    local.get $0
    i32.const 100000000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/genDigits (param $0 i32) (param $1 i64) (param $2 i32) (param $3 i64) (param $4 i32) (param $5 i64) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i64)
  (local $11 i32)
  (local $12 i64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i64)
  (local $19 i64)
  (local $20 i64)
  (local $21 i64)
  (local $22 i64)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i64)
  i32.const 0
  local.get $4
  i32.sub
  local.set $7
  i64.const 1
  local.get $7
  i64.extend_i32_s
  i64.shl
  local.set $8
  local.get $8
  i64.const 1
  i64.sub
  local.set $9
  local.get $3
  local.get $1
  i64.sub
  local.set $10
  local.get $3
  local.get $7
  i64.extend_i32_s
  i64.shr_u
  i32.wrap_i64
  local.set $11
  local.get $3
  local.get $9
  i64.and
  local.set $12
  local.get $11
  call $~lib/util/number/decimalCount32
  local.set $13
  local.get $6
  local.set $14
  loop $while-continue|0
   local.get $13
   i32.const 0
   i32.gt_s
   local.set $15
   local.get $15
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $13
                local.set $17
                local.get $17
                i32.const 10
                i32.eq
                br_if $case0|1
                local.get $17
                i32.const 9
                i32.eq
                br_if $case1|1
                local.get $17
                i32.const 8
                i32.eq
                br_if $case2|1
                local.get $17
                i32.const 7
                i32.eq
                br_if $case3|1
                local.get $17
                i32.const 6
                i32.eq
                br_if $case4|1
                local.get $17
                i32.const 5
                i32.eq
                br_if $case5|1
                local.get $17
                i32.const 4
                i32.eq
                br_if $case6|1
                local.get $17
                i32.const 3
                i32.eq
                br_if $case7|1
                local.get $17
                i32.const 2
                i32.eq
                br_if $case8|1
                local.get $17
                i32.const 1
                i32.eq
                br_if $case9|1
                br $case10|1
               end
               local.get $11
               i32.const 1000000000
               i32.div_u
               local.set $16
               local.get $11
               i32.const 1000000000
               i32.rem_u
               local.set $11
               br $break|1
              end
              local.get $11
              i32.const 100000000
              i32.div_u
              local.set $16
              local.get $11
              i32.const 100000000
              i32.rem_u
              local.set $11
              br $break|1
             end
             local.get $11
             i32.const 10000000
             i32.div_u
             local.set $16
             local.get $11
             i32.const 10000000
             i32.rem_u
             local.set $11
             br $break|1
            end
            local.get $11
            i32.const 1000000
            i32.div_u
            local.set $16
            local.get $11
            i32.const 1000000
            i32.rem_u
            local.set $11
            br $break|1
           end
           local.get $11
           i32.const 100000
           i32.div_u
           local.set $16
           local.get $11
           i32.const 100000
           i32.rem_u
           local.set $11
           br $break|1
          end
          local.get $11
          i32.const 10000
          i32.div_u
          local.set $16
          local.get $11
          i32.const 10000
          i32.rem_u
          local.set $11
          br $break|1
         end
         local.get $11
         i32.const 1000
         i32.div_u
         local.set $16
         local.get $11
         i32.const 1000
         i32.rem_u
         local.set $11
         br $break|1
        end
        local.get $11
        i32.const 100
        i32.div_u
        local.set $16
        local.get $11
        i32.const 100
        i32.rem_u
        local.set $11
        br $break|1
       end
       local.get $11
       i32.const 10
       i32.div_u
       local.set $16
       local.get $11
       i32.const 10
       i32.rem_u
       local.set $11
       br $break|1
      end
      local.get $11
      local.set $16
      i32.const 0
      local.set $11
      br $break|1
     end
     i32.const 0
     local.set $16
     br $break|1
    end
    local.get $16
    local.get $14
    i32.or
    if
     local.get $0
     local.get $14
     local.tee $17
     i32.const 1
     i32.add
     local.set $14
     local.get $17
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $16
     i32.const 65535
     i32.and
     i32.add
     i32.store16
    end
    local.get $13
    i32.const 1
    i32.sub
    local.set $13
    local.get $11
    i64.extend_i32_u
    local.get $7
    i64.extend_i32_s
    i64.shl
    local.get $12
    i64.add
    local.set $18
    local.get $18
    local.get $5
    i64.le_u
    if
     global.get $~lib/util/number/_K
     local.get $13
     i32.add
     global.set $~lib/util/number/_K
     local.get $0
     local.set $23
     local.get $14
     local.set $17
     local.get $5
     local.set $22
     local.get $18
     local.set $21
     i32.const 3856
     local.get $13
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u
     local.get $7
     i64.extend_i32_s
     i64.shl
     local.set $20
     local.get $10
     local.set $19
     local.get $23
     local.get $17
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $24
     local.get $24
     i32.load16_u
     local.set $25
     loop $while-continue|3
      local.get $21
      local.get $19
      i64.lt_u
      if (result i32)
       local.get $22
       local.get $21
       i64.sub
       local.get $20
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $21
       local.get $20
       i64.add
       local.get $19
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $19
        local.get $21
        i64.sub
        local.get $21
        local.get $20
        i64.add
        local.get $19
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      local.set $26
      local.get $26
      if
       local.get $25
       i32.const 1
       i32.sub
       local.set $25
       local.get $21
       local.get $20
       i64.add
       local.set $21
       br $while-continue|3
      end
     end
     local.get $24
     local.get $25
     i32.store16
     local.get $14
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   i32.const 1
   local.set $15
   local.get $15
   if
    local.get $12
    i64.const 10
    i64.mul
    local.set $12
    local.get $5
    i64.const 10
    i64.mul
    local.set $5
    local.get $12
    local.get $7
    i64.extend_i32_s
    i64.shr_u
    local.set $22
    local.get $22
    local.get $14
    i64.extend_i32_s
    i64.or
    i64.const 0
    i64.ne
    if
     local.get $0
     local.get $14
     local.tee $25
     i32.const 1
     i32.add
     local.set $14
     local.get $25
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $22
     i32.wrap_i64
     i32.const 65535
     i32.and
     i32.add
     i32.store16
    end
    local.get $12
    local.get $9
    i64.and
    local.set $12
    local.get $13
    i32.const 1
    i32.sub
    local.set $13
    local.get $12
    local.get $5
    i64.lt_u
    if
     global.get $~lib/util/number/_K
     local.get $13
     i32.add
     global.set $~lib/util/number/_K
     local.get $10
     i32.const 3856
     i32.const 0
     local.get $13
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u
     i64.mul
     local.set $10
     local.get $0
     local.set $17
     local.get $14
     local.set $26
     local.get $5
     local.set $27
     local.get $12
     local.set $21
     local.get $8
     local.set $20
     local.get $10
     local.set $19
     local.get $17
     local.get $26
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $25
     local.get $25
     i32.load16_u
     local.set $24
     loop $while-continue|6
      local.get $21
      local.get $19
      i64.lt_u
      if (result i32)
       local.get $27
       local.get $21
       i64.sub
       local.get $20
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $21
       local.get $20
       i64.add
       local.get $19
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $19
        local.get $21
        i64.sub
        local.get $21
        local.get $20
        i64.add
        local.get $19
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      local.set $23
      local.get $23
      if
       local.get $24
       i32.const 1
       i32.sub
       local.set $24
       local.get $21
       local.get $20
       i64.add
       local.set $21
       br $while-continue|6
      end
     end
     local.get $25
     local.get $24
     i32.store16
     local.get $14
     return
    end
    br $while-continue|4
   end
  end
  unreachable
 )
 (func $~lib/util/memory/memcpy (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  loop $while-continue|0
   local.get $2
   if (result i32)
    local.get $1
    i32.const 3
    i32.and
   else
    i32.const 0
   end
   local.set $5
   local.get $5
   if
    local.get $0
    local.tee $6
    i32.const 1
    i32.add
    local.set $0
    local.get $6
    local.get $1
    local.tee $6
    i32.const 1
    i32.add
    local.set $1
    local.get $6
    i32.load8_u
    i32.store8
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.const 3
  i32.and
  i32.const 0
  i32.eq
  if
   loop $while-continue|1
    local.get $2
    i32.const 16
    i32.ge_u
    local.set $5
    local.get $5
    if
     local.get $0
     local.get $1
     i32.load
     i32.store
     local.get $0
     i32.const 4
     i32.add
     local.get $1
     i32.const 4
     i32.add
     i32.load
     i32.store
     local.get $0
     i32.const 8
     i32.add
     local.get $1
     i32.const 8
     i32.add
     i32.load
     i32.store
     local.get $0
     i32.const 12
     i32.add
     local.get $1
     i32.const 12
     i32.add
     i32.load
     i32.store
     local.get $1
     i32.const 16
     i32.add
     local.set $1
     local.get $0
     i32.const 16
     i32.add
     local.set $0
     local.get $2
     i32.const 16
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
   local.get $2
   i32.const 8
   i32.and
   if
    local.get $0
    local.get $1
    i32.load
    i32.store
    local.get $0
    i32.const 4
    i32.add
    local.get $1
    i32.const 4
    i32.add
    i32.load
    i32.store
    local.get $0
    i32.const 8
    i32.add
    local.set $0
    local.get $1
    i32.const 8
    i32.add
    local.set $1
   end
   local.get $2
   i32.const 4
   i32.and
   if
    local.get $0
    local.get $1
    i32.load
    i32.store
    local.get $0
    i32.const 4
    i32.add
    local.set $0
    local.get $1
    i32.const 4
    i32.add
    local.set $1
   end
   local.get $2
   i32.const 2
   i32.and
   if
    local.get $0
    local.get $1
    i32.load16_u
    i32.store16
    local.get $0
    i32.const 2
    i32.add
    local.set $0
    local.get $1
    i32.const 2
    i32.add
    local.set $1
   end
   local.get $2
   i32.const 1
   i32.and
   if
    local.get $0
    local.tee $5
    i32.const 1
    i32.add
    local.set $0
    local.get $5
    local.get $1
    local.tee $5
    i32.const 1
    i32.add
    local.set $1
    local.get $5
    i32.load8_u
    i32.store8
   end
   return
  end
  local.get $2
  i32.const 32
  i32.ge_u
  if
   block $break|2
    block $case2|2
     block $case1|2
      block $case0|2
       local.get $0
       i32.const 3
       i32.and
       local.set $5
       local.get $5
       i32.const 1
       i32.eq
       br_if $case0|2
       local.get $5
       i32.const 2
       i32.eq
       br_if $case1|2
       local.get $5
       i32.const 3
       i32.eq
       br_if $case2|2
       br $break|2
      end
      local.get $1
      i32.load
      local.set $3
      local.get $0
      local.tee $5
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      local.get $1
      local.tee $5
      i32.const 1
      i32.add
      local.set $1
      local.get $5
      i32.load8_u
      i32.store8
      local.get $0
      local.tee $5
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      local.get $1
      local.tee $5
      i32.const 1
      i32.add
      local.set $1
      local.get $5
      i32.load8_u
      i32.store8
      local.get $0
      local.tee $5
      i32.const 1
      i32.add
      local.set $0
      local.get $5
      local.get $1
      local.tee $5
      i32.const 1
      i32.add
      local.set $1
      local.get $5
      i32.load8_u
      i32.store8
      local.get $2
      i32.const 3
      i32.sub
      local.set $2
      loop $while-continue|3
       local.get $2
       i32.const 17
       i32.ge_u
       local.set $5
       local.get $5
       if
        local.get $1
        i32.const 1
        i32.add
        i32.load
        local.set $4
        local.get $0
        local.get $3
        i32.const 24
        i32.shr_u
        local.get $4
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 5
        i32.add
        i32.load
        local.set $3
        local.get $0
        i32.const 4
        i32.add
        local.get $4
        i32.const 24
        i32.shr_u
        local.get $3
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 9
        i32.add
        i32.load
        local.set $4
        local.get $0
        i32.const 8
        i32.add
        local.get $3
        i32.const 24
        i32.shr_u
        local.get $4
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 13
        i32.add
        i32.load
        local.set $3
        local.get $0
        i32.const 12
        i32.add
        local.get $4
        i32.const 24
        i32.shr_u
        local.get $3
        i32.const 8
        i32.shl
        i32.or
        i32.store
        local.get $1
        i32.const 16
        i32.add
        local.set $1
        local.get $0
        i32.const 16
        i32.add
        local.set $0
        local.get $2
        i32.const 16
        i32.sub
        local.set $2
        br $while-continue|3
       end
      end
      br $break|2
     end
     local.get $1
     i32.load
     local.set $3
     local.get $0
     local.tee $5
     i32.const 1
     i32.add
     local.set $0
     local.get $5
     local.get $1
     local.tee $5
     i32.const 1
     i32.add
     local.set $1
     local.get $5
     i32.load8_u
     i32.store8
     local.get $0
     local.tee $5
     i32.const 1
     i32.add
     local.set $0
     local.get $5
     local.get $1
     local.tee $5
     i32.const 1
     i32.add
     local.set $1
     local.get $5
     i32.load8_u
     i32.store8
     local.get $2
     i32.const 2
     i32.sub
     local.set $2
     loop $while-continue|4
      local.get $2
      i32.const 18
      i32.ge_u
      local.set $5
      local.get $5
      if
       local.get $1
       i32.const 2
       i32.add
       i32.load
       local.set $4
       local.get $0
       local.get $3
       i32.const 16
       i32.shr_u
       local.get $4
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 6
       i32.add
       i32.load
       local.set $3
       local.get $0
       i32.const 4
       i32.add
       local.get $4
       i32.const 16
       i32.shr_u
       local.get $3
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 10
       i32.add
       i32.load
       local.set $4
       local.get $0
       i32.const 8
       i32.add
       local.get $3
       i32.const 16
       i32.shr_u
       local.get $4
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 14
       i32.add
       i32.load
       local.set $3
       local.get $0
       i32.const 12
       i32.add
       local.get $4
       i32.const 16
       i32.shr_u
       local.get $3
       i32.const 16
       i32.shl
       i32.or
       i32.store
       local.get $1
       i32.const 16
       i32.add
       local.set $1
       local.get $0
       i32.const 16
       i32.add
       local.set $0
       local.get $2
       i32.const 16
       i32.sub
       local.set $2
       br $while-continue|4
      end
     end
     br $break|2
    end
    local.get $1
    i32.load
    local.set $3
    local.get $0
    local.tee $5
    i32.const 1
    i32.add
    local.set $0
    local.get $5
    local.get $1
    local.tee $5
    i32.const 1
    i32.add
    local.set $1
    local.get $5
    i32.load8_u
    i32.store8
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    loop $while-continue|5
     local.get $2
     i32.const 19
     i32.ge_u
     local.set $5
     local.get $5
     if
      local.get $1
      i32.const 3
      i32.add
      i32.load
      local.set $4
      local.get $0
      local.get $3
      i32.const 8
      i32.shr_u
      local.get $4
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 7
      i32.add
      i32.load
      local.set $3
      local.get $0
      i32.const 4
      i32.add
      local.get $4
      i32.const 8
      i32.shr_u
      local.get $3
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 11
      i32.add
      i32.load
      local.set $4
      local.get $0
      i32.const 8
      i32.add
      local.get $3
      i32.const 8
      i32.shr_u
      local.get $4
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 15
      i32.add
      i32.load
      local.set $3
      local.get $0
      i32.const 12
      i32.add
      local.get $4
      i32.const 8
      i32.shr_u
      local.get $3
      i32.const 24
      i32.shl
      i32.or
      i32.store
      local.get $1
      i32.const 16
      i32.add
      local.set $1
      local.get $0
      i32.const 16
      i32.add
      local.set $0
      local.get $2
      i32.const 16
      i32.sub
      local.set $2
      br $while-continue|5
     end
    end
    br $break|2
   end
  end
  local.get $2
  i32.const 16
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 8
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 4
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 2
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
  local.get $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.tee $5
   i32.const 1
   i32.add
   local.set $0
   local.get $5
   local.get $1
   local.tee $5
   i32.const 1
   i32.add
   local.set $1
   local.get $5
   i32.load8_u
   i32.store8
  end
 )
 (func $~lib/memory/memory.copy (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  block $~lib/util/memory/memmove|inlined.0
   local.get $0
   local.set $5
   local.get $1
   local.set $4
   local.get $2
   local.set $3
   local.get $5
   local.get $4
   i32.eq
   if
    br $~lib/util/memory/memmove|inlined.0
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   local.get $4
   local.get $5
   i32.sub
   local.get $3
   i32.sub
   i32.const 0
   local.get $3
   i32.const 1
   i32.shl
   i32.sub
   i32.le_u
   if
    local.get $5
    local.get $4
    local.get $3
    call $~lib/util/memory/memcpy
    br $~lib/util/memory/memmove|inlined.0
   end
   local.get $5
   local.get $4
   i32.lt_u
   if
    i32.const 0
    i32.const 2
    i32.lt_s
    drop
    local.get $4
    i32.const 7
    i32.and
    local.get $5
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|0
      local.get $5
      i32.const 7
      i32.and
      local.set $6
      local.get $6
      if
       local.get $3
       i32.eqz
       if
        br $~lib/util/memory/memmove|inlined.0
       end
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       local.get $5
       local.tee $7
       i32.const 1
       i32.add
       local.set $5
       local.get $7
       local.get $4
       local.tee $7
       i32.const 1
       i32.add
       local.set $4
       local.get $7
       i32.load8_u
       i32.store8
       br $while-continue|0
      end
     end
     loop $while-continue|1
      local.get $3
      i32.const 8
      i32.ge_u
      local.set $6
      local.get $6
      if
       local.get $5
       local.get $4
       i64.load
       i64.store
       local.get $3
       i32.const 8
       i32.sub
       local.set $3
       local.get $5
       i32.const 8
       i32.add
       local.set $5
       local.get $4
       i32.const 8
       i32.add
       local.set $4
       br $while-continue|1
      end
     end
    end
    loop $while-continue|2
     local.get $3
     local.set $6
     local.get $6
     if
      local.get $5
      local.tee $7
      i32.const 1
      i32.add
      local.set $5
      local.get $7
      local.get $4
      local.tee $7
      i32.const 1
      i32.add
      local.set $4
      local.get $7
      i32.load8_u
      i32.store8
      local.get $3
      i32.const 1
      i32.sub
      local.set $3
      br $while-continue|2
     end
    end
   else
    i32.const 0
    i32.const 2
    i32.lt_s
    drop
    local.get $4
    i32.const 7
    i32.and
    local.get $5
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|3
      local.get $5
      local.get $3
      i32.add
      i32.const 7
      i32.and
      local.set $6
      local.get $6
      if
       local.get $3
       i32.eqz
       if
        br $~lib/util/memory/memmove|inlined.0
       end
       local.get $5
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       i32.add
       local.get $4
       local.get $3
       i32.add
       i32.load8_u
       i32.store8
       br $while-continue|3
      end
     end
     loop $while-continue|4
      local.get $3
      i32.const 8
      i32.ge_u
      local.set $6
      local.get $6
      if
       local.get $3
       i32.const 8
       i32.sub
       local.set $3
       local.get $5
       local.get $3
       i32.add
       local.get $4
       local.get $3
       i32.add
       i64.load
       i64.store
       br $while-continue|4
      end
     end
    end
    loop $while-continue|5
     local.get $3
     local.set $6
     local.get $6
     if
      local.get $5
      local.get $3
      i32.const 1
      i32.sub
      local.tee $3
      i32.add
      local.get $4
      local.get $3
      i32.add
      i32.load8_u
      i32.store8
      br $while-continue|5
     end
    end
   end
  end
 )
 (func $~lib/util/number/utoa32_dec_lut (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i32)
  (local $11 i32)
  loop $while-continue|0
   local.get $1
   i32.const 10000
   i32.ge_u
   local.set $3
   local.get $3
   if
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $4
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $5
    local.get $4
    local.set $1
    local.get $5
    i32.const 100
    i32.div_u
    local.set $6
    local.get $5
    i32.const 100
    i32.rem_u
    local.set $7
    i32.const 3896
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $8
    i32.const 3896
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $9
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $8
    local.get $9
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $1
   i32.const 100
   i32.div_u
   local.set $3
   local.get $1
   i32.const 100
   i32.rem_u
   local.set $10
   local.get $3
   local.set $1
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   i32.const 3896
   local.get $10
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $11
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $11
   i32.store
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   i32.const 3896
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $11
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $11
   i32.store
  else
   local.get $2
   i32.const 1
   i32.sub
   local.set $2
   i32.const 48
   local.get $1
   i32.add
   local.set $11
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $11
   i32.store16
  end
 )
 (func $~lib/util/number/prettify (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   local.get $1
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store
   local.get $1
   i32.const 2
   i32.add
   return
  end
  local.get $1
  local.get $2
  i32.add
  local.set $3
  local.get $1
  local.get $3
  i32.le_s
  if (result i32)
   local.get $3
   i32.const 21
   i32.le_s
  else
   i32.const 0
  end
  if
   local.get $1
   local.set $4
   loop $for-loop|0
    local.get $4
    local.get $3
    i32.lt_s
    local.set $5
    local.get $5
    if
     local.get $0
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $0
   local.get $3
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store
   local.get $3
   i32.const 2
   i32.add
   return
  else
   local.get $3
   i32.const 0
   i32.gt_s
   if (result i32)
    local.get $3
    i32.const 21
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    local.set $4
    local.get $4
    i32.const 2
    i32.add
    local.get $4
    i32.const 0
    local.get $2
    i32.sub
    i32.const 1
    i32.shl
    call $~lib/memory/memory.copy
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    i32.const 46
    i32.store16
    local.get $1
    i32.const 1
    i32.add
    return
   else
    i32.const -6
    local.get $3
    i32.lt_s
    if (result i32)
     local.get $3
     i32.const 0
     i32.le_s
    else
     i32.const 0
    end
    if
     i32.const 2
     local.get $3
     i32.sub
     local.set $4
     local.get $0
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     call $~lib/memory/memory.copy
     local.get $0
     i32.const 48
     i32.const 46
     i32.const 16
     i32.shl
     i32.or
     i32.store
     i32.const 2
     local.set $5
     loop $for-loop|1
      local.get $5
      local.get $4
      i32.lt_s
      local.set $6
      local.get $6
      if
       local.get $0
       local.get $5
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16
       local.get $5
       i32.const 1
       i32.add
       local.set $5
       br $for-loop|1
      end
     end
     local.get $1
     local.get $4
     i32.add
     return
    else
     local.get $1
     i32.const 1
     i32.eq
     if
      local.get $0
      i32.const 101
      i32.store16 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.set $5
      local.get $3
      i32.const 1
      i32.sub
      local.set $6
      local.get $6
      i32.const 0
      i32.lt_s
      local.set $4
      local.get $4
      if
       i32.const 0
       local.get $6
       i32.sub
       local.set $6
      end
      local.get $6
      call $~lib/util/number/decimalCount32
      i32.const 1
      i32.add
      local.set $7
      local.get $5
      local.set $10
      local.get $6
      local.set $9
      local.get $7
      local.set $8
      i32.const 0
      i32.const 1
      i32.ge_s
      drop
      local.get $10
      local.get $9
      local.get $8
      call $~lib/util/number/utoa32_dec_lut
      local.get $5
      i32.const 45
      i32.const 43
      local.get $4
      select
      i32.store16
      local.get $7
      local.set $1
      local.get $1
      i32.const 2
      i32.add
      return
     else
      local.get $1
      i32.const 1
      i32.shl
      local.set $7
      local.get $0
      i32.const 4
      i32.add
      local.get $0
      i32.const 2
      i32.add
      local.get $7
      i32.const 2
      i32.sub
      call $~lib/memory/memory.copy
      local.get $0
      i32.const 46
      i32.store16 offset=2
      local.get $0
      local.get $7
      i32.add
      i32.const 101
      i32.store16 offset=2
      local.get $1
      local.get $0
      local.get $7
      i32.add
      i32.const 4
      i32.add
      local.set $9
      local.get $3
      i32.const 1
      i32.sub
      local.set $8
      local.get $8
      i32.const 0
      i32.lt_s
      local.set $4
      local.get $4
      if
       i32.const 0
       local.get $8
       i32.sub
       local.set $8
      end
      local.get $8
      call $~lib/util/number/decimalCount32
      i32.const 1
      i32.add
      local.set $5
      local.get $9
      local.set $11
      local.get $8
      local.set $6
      local.get $5
      local.set $10
      i32.const 0
      i32.const 1
      i32.ge_s
      drop
      local.get $11
      local.get $6
      local.get $10
      call $~lib/util/number/utoa32_dec_lut
      local.get $9
      i32.const 45
      i32.const 43
      local.get $4
      select
      i32.store16
      local.get $5
      i32.add
      local.set $1
      local.get $1
      i32.const 2
      i32.add
      return
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/dtoa_core (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i64)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i32)
  (local $11 i64)
  (local $12 i64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f64)
  (local $17 i64)
  (local $18 i64)
  (local $19 i64)
  (local $20 i64)
  (local $21 i64)
  (local $22 i64)
  (local $23 i64)
  (local $24 i64)
  (local $25 i64)
  (local $26 i32)
  (local $27 i64)
  (local $28 i32)
  local.get $1
  f64.const 0
  f64.lt
  local.set $2
  local.get $2
  if
   local.get $1
   f64.neg
   local.set $1
   local.get $0
   i32.const 45
   i32.store16
  end
  local.get $1
  local.set $5
  local.get $0
  local.set $4
  local.get $2
  local.set $3
  local.get $5
  i64.reinterpret_f64
  local.set $6
  local.get $6
  i64.const 9218868437227405312
  i64.and
  i64.const 52
  i64.shr_u
  i32.wrap_i64
  local.set $7
  local.get $6
  i64.const 4503599627370495
  i64.and
  local.set $8
  local.get $7
  i32.const 0
  i32.ne
  i64.extend_i32_u
  i64.const 52
  i64.shl
  local.get $8
  i64.add
  local.set $9
  local.get $7
  i32.const 1
  local.get $7
  select
  i32.const 1023
  i32.const 52
  i32.add
  i32.sub
  local.set $7
  local.get $9
  local.set $11
  local.get $7
  local.set $10
  local.get $11
  i64.const 1
  i64.shl
  i64.const 1
  i64.add
  local.set $12
  local.get $10
  i32.const 1
  i32.sub
  local.set $13
  local.get $12
  i64.clz
  i32.wrap_i64
  local.set $14
  local.get $12
  local.get $14
  i64.extend_i32_s
  i64.shl
  local.set $12
  local.get $13
  local.get $14
  i32.sub
  local.set $13
  i32.const 1
  local.get $11
  i64.const 4503599627370496
  i64.eq
  i32.add
  local.set $15
  local.get $12
  global.set $~lib/util/number/_frc_plus
  local.get $11
  local.get $15
  i64.extend_i32_s
  i64.shl
  i64.const 1
  i64.sub
  local.get $10
  local.get $15
  i32.sub
  local.get $13
  i32.sub
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_minus
  local.get $13
  global.set $~lib/util/number/_exp
  global.get $~lib/util/number/_exp
  local.set $10
  i32.const -61
  local.get $10
  i32.sub
  f64.convert_i32_s
  f64.const 0.30102999566398114
  f64.mul
  f64.const 347
  f64.add
  local.set $16
  local.get $16
  i32.trunc_f64_s
  local.set $15
  local.get $15
  local.get $15
  f64.convert_i32_s
  local.get $16
  f64.ne
  i32.add
  local.set $15
  local.get $15
  i32.const 3
  i32.shr_s
  i32.const 1
  i32.add
  local.set $14
  i32.const 348
  local.get $14
  i32.const 3
  i32.shl
  i32.sub
  global.set $~lib/util/number/_K
  i32.const 2984
  local.get $14
  i32.const 3
  i32.shl
  i32.add
  i64.load
  global.set $~lib/util/number/_frc_pow
  i32.const 3680
  local.get $14
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s
  global.set $~lib/util/number/_exp_pow
  local.get $9
  i64.clz
  i32.wrap_i64
  local.set $14
  local.get $9
  local.get $14
  i64.extend_i32_s
  i64.shl
  local.set $9
  local.get $7
  local.get $14
  i32.sub
  local.set $7
  global.get $~lib/util/number/_frc_pow
  local.set $12
  global.get $~lib/util/number/_exp_pow
  local.set $15
  local.get $9
  local.set $17
  local.get $12
  local.set $11
  local.get $17
  i64.const 4294967295
  i64.and
  local.set $18
  local.get $11
  i64.const 4294967295
  i64.and
  local.set $19
  local.get $17
  i64.const 32
  i64.shr_u
  local.set $20
  local.get $11
  i64.const 32
  i64.shr_u
  local.set $21
  local.get $18
  local.get $19
  i64.mul
  local.set $22
  local.get $20
  local.get $19
  i64.mul
  local.get $22
  i64.const 32
  i64.shr_u
  i64.add
  local.set $23
  local.get $18
  local.get $21
  i64.mul
  local.get $23
  i64.const 4294967295
  i64.and
  i64.add
  local.set $24
  local.get $24
  i64.const 2147483647
  i64.add
  local.set $24
  local.get $23
  i64.const 32
  i64.shr_u
  local.set $23
  local.get $24
  i64.const 32
  i64.shr_u
  local.set $24
  local.get $20
  local.get $21
  i64.mul
  local.get $23
  i64.add
  local.get $24
  i64.add
  local.set $24
  local.get $7
  local.set $10
  local.get $15
  local.set $13
  local.get $10
  local.get $13
  i32.add
  i32.const 64
  i32.add
  local.set $10
  global.get $~lib/util/number/_frc_plus
  local.set $17
  local.get $12
  local.set $11
  local.get $17
  i64.const 4294967295
  i64.and
  local.set $23
  local.get $11
  i64.const 4294967295
  i64.and
  local.set $22
  local.get $17
  i64.const 32
  i64.shr_u
  local.set $21
  local.get $11
  i64.const 32
  i64.shr_u
  local.set $20
  local.get $23
  local.get $22
  i64.mul
  local.set $19
  local.get $21
  local.get $22
  i64.mul
  local.get $19
  i64.const 32
  i64.shr_u
  i64.add
  local.set $18
  local.get $23
  local.get $20
  i64.mul
  local.get $18
  i64.const 4294967295
  i64.and
  i64.add
  local.set $25
  local.get $25
  i64.const 2147483647
  i64.add
  local.set $25
  local.get $18
  i64.const 32
  i64.shr_u
  local.set $18
  local.get $25
  i64.const 32
  i64.shr_u
  local.set $25
  local.get $21
  local.get $20
  i64.mul
  local.get $18
  i64.add
  local.get $25
  i64.add
  i64.const 1
  i64.sub
  local.set $25
  global.get $~lib/util/number/_exp
  local.set $26
  local.get $15
  local.set $13
  local.get $26
  local.get $13
  i32.add
  i32.const 64
  i32.add
  local.set $26
  global.get $~lib/util/number/_frc_minus
  local.set $17
  local.get $12
  local.set $11
  local.get $17
  i64.const 4294967295
  i64.and
  local.set $18
  local.get $11
  i64.const 4294967295
  i64.and
  local.set $19
  local.get $17
  i64.const 32
  i64.shr_u
  local.set $20
  local.get $11
  i64.const 32
  i64.shr_u
  local.set $21
  local.get $18
  local.get $19
  i64.mul
  local.set $22
  local.get $20
  local.get $19
  i64.mul
  local.get $22
  i64.const 32
  i64.shr_u
  i64.add
  local.set $23
  local.get $18
  local.get $21
  i64.mul
  local.get $23
  i64.const 4294967295
  i64.and
  i64.add
  local.set $27
  local.get $27
  i64.const 2147483647
  i64.add
  local.set $27
  local.get $23
  i64.const 32
  i64.shr_u
  local.set $23
  local.get $27
  i64.const 32
  i64.shr_u
  local.set $27
  local.get $20
  local.get $21
  i64.mul
  local.get $23
  i64.add
  local.get $27
  i64.add
  i64.const 1
  i64.add
  local.set $27
  local.get $25
  local.get $27
  i64.sub
  local.set $23
  local.get $4
  local.get $24
  local.get $10
  local.get $25
  local.get $26
  local.get $23
  local.get $3
  call $~lib/util/number/genDigits
  local.set $28
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.get $28
  local.get $2
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.set $28
  local.get $28
  local.get $2
  i32.add
 )
 (func $~lib/number/F64#toString (param $0 f64) (param $1 i32) (result i32)
  local.get $0
  call $~lib/util/number/dtoa
 )
 (func $~lib/string/String#get:length (param $0 i32) (result i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/string/String#concat
 )
 (func $assembly/mat2/frob (param $0 i32) (result f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $assembly/maths/Maths.hypot4
 )
 (func $~lib/rt/__newBuffer (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $0
  local.get $1
  call $~lib/rt/itcms/__new
  local.set $3
  local.get $2
  if
   local.get $3
   local.get $2
   local.get $0
   call $~lib/memory/memory.copy
  end
  local.get $3
 )
 (func $~lib/array/Array<~lib/typedarray/Float64Array>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $assembly/mat2/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2/exactEquals (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.eq
  if (result i32)
   local.get $0
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
 )
 (func $assembly/mat2/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $2
  local.get $6
  f64.sub
  local.set $10
  local.get $10
  f64.abs
  global.get $assembly/common/EPSILON
  f64.const 1
  local.get $2
  local.set $10
  local.get $10
  f64.abs
  local.get $6
  local.set $10
  local.get $10
  f64.abs
  call $assembly/maths/Maths.max
  f64.mul
  f64.le
  if (result i32)
   local.get $3
   local.get $7
   f64.sub
   local.set $10
   local.get $10
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $3
   local.set $10
   local.get $10
   f64.abs
   local.get $7
   local.set $10
   local.get $10
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $4
   local.get $8
   f64.sub
   local.set $10
   local.get $10
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $4
   local.set $10
   local.get $10
   f64.abs
   local.get $8
   local.set $10
   local.get $10
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $5
   local.get $9
   f64.sub
   local.set $10
   local.get $10
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $5
   local.set $10
   local.get $10
   f64.abs
   local.get $9
   local.set $10
   local.get $10
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
 )
 (func $assembly/mat2/multiplyScalar (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2/multiplyScalarAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/copy (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/identity (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $6
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/invert (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $2
  local.get $5
  f64.mul
  local.get $3
  local.get $4
  f64.mul
  f64.sub
  local.set $8
  local.get $8
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  i32.eqz
  if
   i32.const 0
   return
  end
  f64.const 1
  local.get $8
  f64.div
  local.set $8
  local.get $0
  i32.const 0
  local.get $5
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $3
  f64.neg
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $4
  f64.neg
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $2
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $4
  local.get $7
  f64.mul
  local.get $5
  local.get $6
  f64.mul
  f64.sub
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $3
  local.get $6
  f64.mul
  local.get $2
  local.get $7
  f64.mul
  f64.sub
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/determinant (param $0 i32) (result f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.sub
 )
 (func $assembly/mat2d/rotate (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $2
  call $~lib/math/NativeMath.sin
  local.set $9
  local.get $2
  call $~lib/math/NativeMath.cos
  local.set $10
  local.get $0
  i32.const 0
  local.get $3
  local.get $10
  f64.mul
  local.get $5
  local.get $9
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $10
  f64.mul
  local.get $6
  local.get $9
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  local.get $9
  f64.neg
  f64.mul
  local.get $5
  local.get $10
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $4
  local.get $9
  f64.neg
  f64.mul
  local.get $6
  local.get $10
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $7
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $8
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/scale (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $0
  i32.const 0
  local.get $3
  local.get $9
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $9
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $5
  local.get $10
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $6
  local.get $10
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $7
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $8
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/translate (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $0
  i32.const 0
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $6
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $3
  local.get $9
  f64.mul
  local.get $5
  local.get $10
  f64.mul
  f64.add
  local.get $7
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $4
  local.get $9
  f64.mul
  local.get $6
  local.get $10
  f64.mul
  f64.add
  local.get $8
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/fromRotation (param $0 i32) (param $1 f64) (result i32)
  (local $2 f64)
  (local $3 f64)
  local.get $1
  call $~lib/math/NativeMath.sin
  local.set $2
  local.get $1
  call $~lib/math/NativeMath.cos
  local.set $3
  local.get $0
  i32.const 0
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $2
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/fromScaling (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/fromTranslation (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/maths/Maths.hypot7 (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (result f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  local.get $0
  local.set $7
  local.get $7
  f64.abs
  local.set $0
  local.get $1
  local.set $7
  local.get $7
  f64.abs
  local.set $1
  local.get $2
  local.set $7
  local.get $7
  f64.abs
  local.set $2
  local.get $3
  local.set $7
  local.get $7
  f64.abs
  local.set $3
  local.get $4
  local.set $7
  local.get $7
  f64.abs
  local.set $4
  local.get $5
  local.set $7
  local.get $7
  f64.abs
  local.set $5
  local.get $6
  local.set $7
  local.get $7
  f64.abs
  local.set $6
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/maths/Maths.max
  local.get $4
  local.get $5
  local.get $6
  call $assembly/maths/Maths.max
  call $assembly/maths/Maths.max
  local.set $7
  local.get $7
  f64.const 0
  f64.eq
  if
   f64.const 0
   return
  end
  f64.const 1
  local.get $7
  f64.div
  local.set $8
  local.get $0
  local.get $8
  f64.mul
  local.set $0
  local.get $1
  local.get $8
  f64.mul
  local.set $1
  local.get $2
  local.get $8
  f64.mul
  local.set $2
  local.get $3
  local.get $8
  f64.mul
  local.set $3
  local.get $4
  local.get $8
  f64.mul
  local.set $4
  local.get $5
  local.get $8
  f64.mul
  local.set $5
  local.get $6
  local.get $8
  f64.mul
  local.set $6
  local.get $7
  local.get $0
  local.get $0
  f64.mul
  local.get $1
  local.get $1
  f64.mul
  f64.add
  local.get $2
  local.get $2
  f64.mul
  f64.add
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.get $4
  local.get $4
  f64.mul
  f64.add
  local.get $5
  local.get $5
  f64.mul
  f64.add
  local.get $6
  local.get $6
  f64.mul
  f64.add
  local.set $9
  local.get $9
  f64.sqrt
  f64.mul
 )
 (func $assembly/mat2d/frob (param $0 i32) (result f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  f64.const 1
  call $assembly/maths/Maths.hypot7
 )
 (func $assembly/mat2d/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/multiplyScalar (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/multiplyScalarAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat2d/exactEquals (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.eq
  if (result i32)
   local.get $0
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
 )
 (func $assembly/mat2d/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $2
  local.get $8
  f64.sub
  local.set $14
  local.get $14
  f64.abs
  global.get $assembly/common/EPSILON
  f64.const 1
  local.get $2
  local.set $14
  local.get $14
  f64.abs
  local.get $8
  local.set $14
  local.get $14
  f64.abs
  call $assembly/maths/Maths.max
  f64.mul
  f64.le
  if (result i32)
   local.get $3
   local.get $9
   f64.sub
   local.set $14
   local.get $14
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $3
   local.set $14
   local.get $14
   f64.abs
   local.get $9
   local.set $14
   local.get $14
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $4
   local.get $10
   f64.sub
   local.set $14
   local.get $14
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $4
   local.set $14
   local.get $14
   f64.abs
   local.get $10
   local.set $14
   local.get $14
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $5
   local.get $11
   f64.sub
   local.set $14
   local.get $14
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $5
   local.set $14
   local.get $14
   f64.abs
   local.get $11
   local.set $14
   local.get $14
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $6
   local.get $12
   f64.sub
   local.set $14
   local.get $14
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $6
   local.set $14
   local.get $14
   f64.abs
   local.get $12
   local.set $14
   local.get $14
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $7
   local.get $13
   f64.sub
   local.set $14
   local.get $14
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $7
   local.set $14
   local.get $14
   f64.abs
   local.get $13
   local.set $14
   local.get $14
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
 )
 (func $assembly/mat3/fromMat4 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/copy (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (param $7 f64) (param $8 f64) (param $9 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $6
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $7
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $8
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $9
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/identity (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/transpose (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  local.get $0
  local.get $1
  i32.eq
  if
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.set $2
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   local.set $3
   local.get $1
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   local.set $4
   local.get $0
   i32.const 1
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $1
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 3
   local.get $2
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 5
   local.get $1
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 6
   local.get $3
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 7
   local.get $4
   call $~lib/typedarray/Float64Array#__set
  else
   local.get $0
   i32.const 0
   local.get $1
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $1
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 3
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 4
   local.get $1
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 5
   local.get $1
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 6
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 7
   local.get $1
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 8
   local.get $1
   i32.const 8
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
 )
 (func $assembly/mat3/invert (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $10
  local.get $6
  f64.mul
  local.get $7
  local.get $9
  f64.mul
  f64.sub
  local.set $11
  local.get $10
  f64.neg
  local.get $5
  f64.mul
  local.get $7
  local.get $8
  f64.mul
  f64.add
  local.set $12
  local.get $9
  local.get $5
  f64.mul
  local.get $6
  local.get $8
  f64.mul
  f64.sub
  local.set $13
  local.get $2
  local.get $11
  f64.mul
  local.get $3
  local.get $12
  f64.mul
  f64.add
  local.get $4
  local.get $13
  f64.mul
  f64.add
  local.set $14
  local.get $14
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  i32.eqz
  if
   i32.const 0
   return
  end
  f64.const 1
  local.get $14
  f64.div
  local.set $14
  local.get $0
  i32.const 0
  local.get $11
  local.get $14
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $10
  f64.neg
  local.get $3
  f64.mul
  local.get $4
  local.get $9
  f64.mul
  f64.add
  local.get $14
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $7
  local.get $3
  f64.mul
  local.get $4
  local.get $6
  f64.mul
  f64.sub
  local.get $14
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $12
  local.get $14
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $10
  local.get $2
  f64.mul
  local.get $4
  local.get $8
  f64.mul
  f64.sub
  local.get $14
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $7
  f64.neg
  local.get $2
  f64.mul
  local.get $4
  local.get $5
  f64.mul
  f64.add
  local.get $14
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $13
  local.get $14
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $9
  f64.neg
  local.get $2
  f64.mul
  local.get $3
  local.get $8
  f64.mul
  f64.add
  local.get $14
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $6
  local.get $2
  f64.mul
  local.get $3
  local.get $5
  f64.mul
  f64.sub
  local.get $14
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/adjoint (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $0
  i32.const 0
  local.get $6
  local.get $10
  f64.mul
  local.get $7
  local.get $9
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $9
  f64.mul
  local.get $3
  local.get $10
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  local.get $7
  f64.mul
  local.get $4
  local.get $6
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $7
  local.get $8
  f64.mul
  local.get $5
  local.get $10
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $2
  local.get $10
  f64.mul
  local.get $4
  local.get $8
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $4
  local.get $5
  f64.mul
  local.get $2
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $5
  local.get $9
  f64.mul
  local.get $6
  local.get $8
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $3
  local.get $8
  f64.mul
  local.get $2
  local.get $9
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $2
  local.get $6
  f64.mul
  local.get $3
  local.get $5
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/determinant (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $0
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $0
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $0
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  local.get $9
  local.get $5
  f64.mul
  local.get $6
  local.get $8
  f64.mul
  f64.sub
  f64.mul
  local.get $2
  local.get $9
  f64.neg
  local.get $4
  f64.mul
  local.get $6
  local.get $7
  f64.mul
  f64.add
  f64.mul
  f64.add
  local.get $3
  local.get $8
  local.get $4
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.sub
  f64.mul
  f64.add
 )
 (func $assembly/mat3/translate (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $0
  i32.const 0
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $6
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $7
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $8
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $12
  local.get $3
  f64.mul
  local.get $13
  local.get $6
  f64.mul
  f64.add
  local.get $9
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $12
  local.get $4
  f64.mul
  local.get $13
  local.get $7
  f64.mul
  f64.add
  local.get $10
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $12
  local.get $5
  f64.mul
  local.get $13
  local.get $8
  f64.mul
  f64.add
  local.get $11
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/rotate (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $2
  call $~lib/math/NativeMath.sin
  local.set $12
  local.get $2
  call $~lib/math/NativeMath.cos
  local.set $13
  local.get $0
  i32.const 0
  local.get $13
  local.get $3
  f64.mul
  local.get $12
  local.get $6
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $13
  local.get $4
  f64.mul
  local.get $12
  local.get $7
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $13
  local.get $5
  f64.mul
  local.get $12
  local.get $8
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $13
  local.get $6
  f64.mul
  local.get $12
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $13
  local.get $7
  f64.mul
  local.get $12
  local.get $4
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $13
  local.get $8
  f64.mul
  local.get $12
  local.get $5
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $9
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $10
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $11
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/scale (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 0
  local.get $3
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $4
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/fromTranslation (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/fromRotation (param $0 i32) (param $1 f64) (result i32)
  (local $2 f64)
  (local $3 f64)
  local.get $1
  call $~lib/math/NativeMath.sin
  local.set $2
  local.get $1
  call $~lib/math/NativeMath.cos
  local.set $3
  local.get $0
  i32.const 0
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $2
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/fromScaling (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/fromMat2d (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/fromQuat (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  local.get $2
  f64.add
  local.set $6
  local.get $3
  local.get $3
  f64.add
  local.set $7
  local.get $4
  local.get $4
  f64.add
  local.set $8
  local.get $2
  local.get $6
  f64.mul
  local.set $9
  local.get $3
  local.get $6
  f64.mul
  local.set $10
  local.get $3
  local.get $7
  f64.mul
  local.set $11
  local.get $4
  local.get $6
  f64.mul
  local.set $12
  local.get $4
  local.get $7
  f64.mul
  local.set $13
  local.get $4
  local.get $8
  f64.mul
  local.set $14
  local.get $5
  local.get $6
  f64.mul
  local.set $15
  local.get $5
  local.get $7
  f64.mul
  local.set $16
  local.get $5
  local.get $8
  f64.mul
  local.set $17
  local.get $0
  i32.const 0
  f64.const 1
  local.get $11
  f64.sub
  local.get $14
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $10
  local.get $17
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $12
  local.get $16
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $10
  local.get $17
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 1
  local.get $9
  f64.sub
  local.get $14
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $13
  local.get $15
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $12
  local.get $16
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $13
  local.get $15
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 1
  local.get $9
  f64.sub
  local.get $11
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/normalFromMat4 (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  (local $23 f64)
  (local $24 f64)
  (local $25 f64)
  (local $26 f64)
  (local $27 f64)
  (local $28 f64)
  (local $29 f64)
  (local $30 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $1
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $1
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.set $15
  local.get $1
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.set $16
  local.get $1
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.set $17
  local.get $2
  local.get $7
  f64.mul
  local.get $3
  local.get $6
  f64.mul
  f64.sub
  local.set $18
  local.get $2
  local.get $8
  f64.mul
  local.get $4
  local.get $6
  f64.mul
  f64.sub
  local.set $19
  local.get $2
  local.get $9
  f64.mul
  local.get $5
  local.get $6
  f64.mul
  f64.sub
  local.set $20
  local.get $3
  local.get $8
  f64.mul
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  local.set $21
  local.get $3
  local.get $9
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.sub
  local.set $22
  local.get $4
  local.get $9
  f64.mul
  local.get $5
  local.get $8
  f64.mul
  f64.sub
  local.set $23
  local.get $10
  local.get $15
  f64.mul
  local.get $11
  local.get $14
  f64.mul
  f64.sub
  local.set $24
  local.get $10
  local.get $16
  f64.mul
  local.get $12
  local.get $14
  f64.mul
  f64.sub
  local.set $25
  local.get $10
  local.get $17
  f64.mul
  local.get $13
  local.get $14
  f64.mul
  f64.sub
  local.set $26
  local.get $11
  local.get $16
  f64.mul
  local.get $12
  local.get $15
  f64.mul
  f64.sub
  local.set $27
  local.get $11
  local.get $17
  f64.mul
  local.get $13
  local.get $15
  f64.mul
  f64.sub
  local.set $28
  local.get $12
  local.get $17
  f64.mul
  local.get $13
  local.get $16
  f64.mul
  f64.sub
  local.set $29
  local.get $18
  local.get $29
  f64.mul
  local.get $19
  local.get $28
  f64.mul
  f64.sub
  local.get $20
  local.get $27
  f64.mul
  f64.add
  local.get $21
  local.get $26
  f64.mul
  f64.add
  local.get $22
  local.get $25
  f64.mul
  f64.sub
  local.get $23
  local.get $24
  f64.mul
  f64.add
  local.set $30
  local.get $30
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  i32.eqz
  if
   i32.const 0
   return
  end
  f64.const 1
  local.get $30
  f64.div
  local.set $30
  local.get $0
  i32.const 0
  local.get $7
  local.get $29
  f64.mul
  local.get $8
  local.get $28
  f64.mul
  f64.sub
  local.get $9
  local.get $27
  f64.mul
  f64.add
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $8
  local.get $26
  f64.mul
  local.get $6
  local.get $29
  f64.mul
  f64.sub
  local.get $9
  local.get $25
  f64.mul
  f64.sub
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $6
  local.get $28
  f64.mul
  local.get $7
  local.get $26
  f64.mul
  f64.sub
  local.get $9
  local.get $24
  f64.mul
  f64.add
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $4
  local.get $28
  f64.mul
  local.get $3
  local.get $29
  f64.mul
  f64.sub
  local.get $5
  local.get $27
  f64.mul
  f64.sub
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $2
  local.get $29
  f64.mul
  local.get $4
  local.get $26
  f64.mul
  f64.sub
  local.get $5
  local.get $25
  f64.mul
  f64.add
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $3
  local.get $26
  f64.mul
  local.get $2
  local.get $28
  f64.mul
  f64.sub
  local.get $5
  local.get $24
  f64.mul
  f64.sub
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $15
  local.get $23
  f64.mul
  local.get $16
  local.get $22
  f64.mul
  f64.sub
  local.get $17
  local.get $21
  f64.mul
  f64.add
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $16
  local.get $20
  f64.mul
  local.get $14
  local.get $23
  f64.mul
  f64.sub
  local.get $17
  local.get $19
  f64.mul
  f64.sub
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $14
  local.get $22
  f64.mul
  local.get $15
  local.get $20
  f64.mul
  f64.sub
  local.get $17
  local.get $18
  f64.mul
  f64.add
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/projection (param $0 i32) (param $1 f64) (param $2 f64) (result i32)
  local.get $0
  i32.const 0
  f64.const 2
  local.get $1
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const -2
  local.get $2
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const -1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/maths/Maths.hypot9 (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (param $7 f64) (param $8 f64) (result f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  local.get $0
  local.set $9
  local.get $9
  f64.abs
  local.set $0
  local.get $1
  local.set $9
  local.get $9
  f64.abs
  local.set $1
  local.get $2
  local.set $9
  local.get $9
  f64.abs
  local.set $2
  local.get $3
  local.set $9
  local.get $9
  f64.abs
  local.set $3
  local.get $4
  local.set $9
  local.get $9
  f64.abs
  local.set $4
  local.get $5
  local.set $9
  local.get $9
  f64.abs
  local.set $5
  local.get $6
  local.set $9
  local.get $9
  f64.abs
  local.set $6
  local.get $7
  local.set $9
  local.get $9
  f64.abs
  local.set $7
  local.get $8
  local.set $9
  local.get $9
  f64.abs
  local.set $8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/maths/Maths.max
  local.get $4
  local.get $5
  local.get $6
  call $assembly/maths/Maths.max
  call $assembly/maths/Maths.max
  local.get $7
  local.get $8
  call $assembly/maths/Maths.max
  local.set $9
  local.get $9
  f64.const 0
  f64.eq
  if
   f64.const 0
   return
  end
  f64.const 1
  local.get $9
  f64.div
  local.set $10
  local.get $0
  local.get $10
  f64.mul
  local.set $0
  local.get $1
  local.get $10
  f64.mul
  local.set $1
  local.get $2
  local.get $10
  f64.mul
  local.set $2
  local.get $3
  local.get $10
  f64.mul
  local.set $3
  local.get $4
  local.get $10
  f64.mul
  local.set $4
  local.get $5
  local.get $10
  f64.mul
  local.set $5
  local.get $6
  local.get $10
  f64.mul
  local.set $6
  local.get $7
  local.get $10
  f64.mul
  local.set $7
  local.get $8
  local.get $10
  f64.mul
  local.set $8
  local.get $9
  local.get $0
  local.get $0
  f64.mul
  local.get $1
  local.get $1
  f64.mul
  f64.add
  local.get $2
  local.get $2
  f64.mul
  f64.add
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.get $4
  local.get $4
  f64.mul
  f64.add
  local.get $5
  local.get $5
  f64.mul
  f64.add
  local.get $6
  local.get $6
  f64.mul
  f64.add
  local.get $7
  local.get $7
  f64.mul
  f64.add
  local.get $8
  local.get $8
  f64.mul
  f64.add
  local.set $11
  local.get $11
  f64.sqrt
  f64.mul
 )
 (func $assembly/mat3/frob (param $0 i32) (result f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  call $assembly/maths/Maths.hypot9
 )
 (func $assembly/mat3/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/multiplyScalar (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/multiplyScalarAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat3/exactEquals (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.eq
  if (result i32)
   local.get $0
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 8
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 8
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
 )
 (func $assembly/mat3/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $0
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $0
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $0
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $15
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $16
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $17
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $18
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $19
  local.get $2
  local.get $11
  f64.sub
  local.set $20
  local.get $20
  f64.abs
  global.get $assembly/common/EPSILON
  f64.const 1
  local.get $2
  local.set $20
  local.get $20
  f64.abs
  local.get $11
  local.set $20
  local.get $20
  f64.abs
  call $assembly/maths/Maths.max
  f64.mul
  f64.le
  if (result i32)
   local.get $3
   local.get $12
   f64.sub
   local.set $20
   local.get $20
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $3
   local.set $20
   local.get $20
   f64.abs
   local.get $12
   local.set $20
   local.get $20
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $4
   local.get $13
   f64.sub
   local.set $20
   local.get $20
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $4
   local.set $20
   local.get $20
   f64.abs
   local.get $13
   local.set $20
   local.get $20
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $5
   local.get $14
   f64.sub
   local.set $20
   local.get $20
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $5
   local.set $20
   local.get $20
   f64.abs
   local.get $14
   local.set $20
   local.get $20
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $6
   local.get $15
   f64.sub
   local.set $20
   local.get $20
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $6
   local.set $20
   local.get $20
   f64.abs
   local.get $15
   local.set $20
   local.get $20
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $7
   local.get $16
   f64.sub
   local.set $20
   local.get $20
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $7
   local.set $20
   local.get $20
   f64.abs
   local.get $16
   local.set $20
   local.get $20
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $8
   local.get $17
   f64.sub
   local.set $20
   local.get $20
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $8
   local.set $20
   local.get $20
   f64.abs
   local.get $17
   local.set $20
   local.get $20
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $9
   local.get $18
   f64.sub
   local.set $20
   local.get $20
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $9
   local.set $20
   local.get $20
   f64.abs
   local.get $18
   local.set $20
   local.get $20
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $10
   local.get $19
   f64.sub
   local.set $20
   local.get $20
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $10
   local.set $20
   local.get $20
   f64.abs
   local.get $19
   local.set $20
   local.get $20
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
 )
 (func $assembly/mat4/Fov#set:upDegrees (param $0 i32) (param $1 f64)
  local.get $0
  local.get $1
  f64.store
 )
 (func $assembly/mat4/Fov#set:downDegrees (param $0 i32) (param $1 f64)
  local.get $0
  local.get $1
  f64.store offset=8
 )
 (func $assembly/mat4/Fov#set:leftDegrees (param $0 i32) (param $1 f64)
  local.get $0
  local.get $1
  f64.store offset=16
 )
 (func $assembly/mat4/Fov#set:rightDegrees (param $0 i32) (param $1 f64)
  local.get $0
  local.get $1
  f64.store offset=24
 )
 (func $assembly/mat4/Fov#get:upDegrees (param $0 i32) (result f64)
  local.get $0
  f64.load
 )
 (func $assembly/mat4/Fov#get:downDegrees (param $0 i32) (result f64)
  local.get $0
  f64.load offset=8
 )
 (func $assembly/mat4/Fov#get:leftDegrees (param $0 i32) (result f64)
  local.get $0
  f64.load offset=16
 )
 (func $assembly/mat4/Fov#get:rightDegrees (param $0 i32) (result f64)
  local.get $0
  f64.load offset=24
 )
 (func $assembly/mat4/copy (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $1
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $1
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $1
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  local.get $1
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (param $7 f64) (param $8 f64) (param $9 f64) (param $10 f64) (param $11 f64) (param $12 f64) (param $13 f64) (param $14 f64) (param $15 f64) (param $16 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $6
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $7
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $8
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $9
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $10
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $11
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  local.get $12
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $13
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $14
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $15
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  local.get $16
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/identity (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/transpose (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  local.get $0
  local.get $1
  i32.eq
  if
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.set $2
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   local.set $3
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   local.set $4
   local.get $1
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   local.set $5
   local.get $1
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   local.set $6
   local.get $1
   i32.const 11
   call $~lib/typedarray/Float64Array#__get
   local.set $7
   local.get $0
   i32.const 1
   local.get $1
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $1
   i32.const 8
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 3
   local.get $1
   i32.const 12
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 4
   local.get $2
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 6
   local.get $1
   i32.const 9
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 7
   local.get $1
   i32.const 13
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 8
   local.get $3
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 9
   local.get $5
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 11
   local.get $1
   i32.const 14
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 12
   local.get $4
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 13
   local.get $6
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 14
   local.get $7
   call $~lib/typedarray/Float64Array#__set
  else
   local.get $0
   i32.const 0
   local.get $1
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   local.get $1
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $1
   i32.const 8
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 3
   local.get $1
   i32.const 12
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 4
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 5
   local.get $1
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 6
   local.get $1
   i32.const 9
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 7
   local.get $1
   i32.const 13
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 8
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 9
   local.get $1
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 10
   local.get $1
   i32.const 10
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 11
   local.get $1
   i32.const 14
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 12
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 13
   local.get $1
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 14
   local.get $1
   i32.const 11
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 15
   local.get $1
   i32.const 15
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
 )
 (func $assembly/mat4/invert (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  (local $23 f64)
  (local $24 f64)
  (local $25 f64)
  (local $26 f64)
  (local $27 f64)
  (local $28 f64)
  (local $29 f64)
  (local $30 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $1
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $1
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.set $15
  local.get $1
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.set $16
  local.get $1
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.set $17
  local.get $2
  local.get $7
  f64.mul
  local.get $3
  local.get $6
  f64.mul
  f64.sub
  local.set $18
  local.get $2
  local.get $8
  f64.mul
  local.get $4
  local.get $6
  f64.mul
  f64.sub
  local.set $19
  local.get $2
  local.get $9
  f64.mul
  local.get $5
  local.get $6
  f64.mul
  f64.sub
  local.set $20
  local.get $3
  local.get $8
  f64.mul
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  local.set $21
  local.get $3
  local.get $9
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.sub
  local.set $22
  local.get $4
  local.get $9
  f64.mul
  local.get $5
  local.get $8
  f64.mul
  f64.sub
  local.set $23
  local.get $10
  local.get $15
  f64.mul
  local.get $11
  local.get $14
  f64.mul
  f64.sub
  local.set $24
  local.get $10
  local.get $16
  f64.mul
  local.get $12
  local.get $14
  f64.mul
  f64.sub
  local.set $25
  local.get $10
  local.get $17
  f64.mul
  local.get $13
  local.get $14
  f64.mul
  f64.sub
  local.set $26
  local.get $11
  local.get $16
  f64.mul
  local.get $12
  local.get $15
  f64.mul
  f64.sub
  local.set $27
  local.get $11
  local.get $17
  f64.mul
  local.get $13
  local.get $15
  f64.mul
  f64.sub
  local.set $28
  local.get $12
  local.get $17
  f64.mul
  local.get $13
  local.get $16
  f64.mul
  f64.sub
  local.set $29
  local.get $18
  local.get $29
  f64.mul
  local.get $19
  local.get $28
  f64.mul
  f64.sub
  local.get $20
  local.get $27
  f64.mul
  f64.add
  local.get $21
  local.get $26
  f64.mul
  f64.add
  local.get $22
  local.get $25
  f64.mul
  f64.sub
  local.get $23
  local.get $24
  f64.mul
  f64.add
  local.set $30
  local.get $30
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  i32.eqz
  if
   i32.const 0
   return
  end
  f64.const 1
  local.get $30
  f64.div
  local.set $30
  local.get $0
  i32.const 0
  local.get $7
  local.get $29
  f64.mul
  local.get $8
  local.get $28
  f64.mul
  f64.sub
  local.get $9
  local.get $27
  f64.mul
  f64.add
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $28
  f64.mul
  local.get $3
  local.get $29
  f64.mul
  f64.sub
  local.get $5
  local.get $27
  f64.mul
  f64.sub
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $15
  local.get $23
  f64.mul
  local.get $16
  local.get $22
  f64.mul
  f64.sub
  local.get $17
  local.get $21
  f64.mul
  f64.add
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $12
  local.get $22
  f64.mul
  local.get $11
  local.get $23
  f64.mul
  f64.sub
  local.get $13
  local.get $21
  f64.mul
  f64.sub
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $8
  local.get $26
  f64.mul
  local.get $6
  local.get $29
  f64.mul
  f64.sub
  local.get $9
  local.get $25
  f64.mul
  f64.sub
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $2
  local.get $29
  f64.mul
  local.get $4
  local.get $26
  f64.mul
  f64.sub
  local.get $5
  local.get $25
  f64.mul
  f64.add
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $16
  local.get $20
  f64.mul
  local.get $14
  local.get $23
  f64.mul
  f64.sub
  local.get $17
  local.get $19
  f64.mul
  f64.sub
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $10
  local.get $23
  f64.mul
  local.get $12
  local.get $20
  f64.mul
  f64.sub
  local.get $13
  local.get $19
  f64.mul
  f64.add
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $6
  local.get $28
  f64.mul
  local.get $7
  local.get $26
  f64.mul
  f64.sub
  local.get $9
  local.get $24
  f64.mul
  f64.add
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $3
  local.get $26
  f64.mul
  local.get $2
  local.get $28
  f64.mul
  f64.sub
  local.get $5
  local.get $24
  f64.mul
  f64.sub
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $14
  local.get $22
  f64.mul
  local.get $15
  local.get $20
  f64.mul
  f64.sub
  local.get $17
  local.get $18
  f64.mul
  f64.add
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  local.get $11
  local.get $20
  f64.mul
  local.get $10
  local.get $22
  f64.mul
  f64.sub
  local.get $13
  local.get $18
  f64.mul
  f64.sub
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $7
  local.get $25
  f64.mul
  local.get $6
  local.get $27
  f64.mul
  f64.sub
  local.get $8
  local.get $24
  f64.mul
  f64.sub
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $2
  local.get $27
  f64.mul
  local.get $3
  local.get $25
  f64.mul
  f64.sub
  local.get $4
  local.get $24
  f64.mul
  f64.add
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $15
  local.get $19
  f64.mul
  local.get $14
  local.get $21
  f64.mul
  f64.sub
  local.get $16
  local.get $18
  f64.mul
  f64.sub
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  local.get $10
  local.get $21
  f64.mul
  local.get $11
  local.get $19
  f64.mul
  f64.sub
  local.get $12
  local.get $18
  f64.mul
  f64.add
  local.get $30
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/adjoint (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  (local $23 f64)
  (local $24 f64)
  (local $25 f64)
  (local $26 f64)
  (local $27 f64)
  (local $28 f64)
  (local $29 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $1
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $1
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.set $15
  local.get $1
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.set $16
  local.get $1
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.set $17
  local.get $2
  local.get $7
  f64.mul
  local.get $3
  local.get $6
  f64.mul
  f64.sub
  local.set $18
  local.get $2
  local.get $8
  f64.mul
  local.get $4
  local.get $6
  f64.mul
  f64.sub
  local.set $19
  local.get $2
  local.get $9
  f64.mul
  local.get $5
  local.get $6
  f64.mul
  f64.sub
  local.set $20
  local.get $3
  local.get $8
  f64.mul
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  local.set $21
  local.get $3
  local.get $9
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.sub
  local.set $22
  local.get $4
  local.get $9
  f64.mul
  local.get $5
  local.get $8
  f64.mul
  f64.sub
  local.set $23
  local.get $10
  local.get $15
  f64.mul
  local.get $11
  local.get $14
  f64.mul
  f64.sub
  local.set $24
  local.get $10
  local.get $16
  f64.mul
  local.get $12
  local.get $14
  f64.mul
  f64.sub
  local.set $25
  local.get $10
  local.get $17
  f64.mul
  local.get $13
  local.get $14
  f64.mul
  f64.sub
  local.set $26
  local.get $11
  local.get $16
  f64.mul
  local.get $12
  local.get $15
  f64.mul
  f64.sub
  local.set $27
  local.get $11
  local.get $17
  f64.mul
  local.get $13
  local.get $15
  f64.mul
  f64.sub
  local.set $28
  local.get $12
  local.get $17
  f64.mul
  local.get $13
  local.get $16
  f64.mul
  f64.sub
  local.set $29
  local.get $0
  i32.const 0
  local.get $7
  local.get $29
  f64.mul
  local.get $8
  local.get $28
  f64.mul
  f64.sub
  local.get $9
  local.get $27
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $28
  f64.mul
  local.get $3
  local.get $29
  f64.mul
  f64.sub
  local.get $5
  local.get $27
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $15
  local.get $23
  f64.mul
  local.get $16
  local.get $22
  f64.mul
  f64.sub
  local.get $17
  local.get $21
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $12
  local.get $22
  f64.mul
  local.get $11
  local.get $23
  f64.mul
  f64.sub
  local.get $13
  local.get $21
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $8
  local.get $26
  f64.mul
  local.get $6
  local.get $29
  f64.mul
  f64.sub
  local.get $9
  local.get $25
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $2
  local.get $29
  f64.mul
  local.get $4
  local.get $26
  f64.mul
  f64.sub
  local.get $5
  local.get $25
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $16
  local.get $20
  f64.mul
  local.get $14
  local.get $23
  f64.mul
  f64.sub
  local.get $17
  local.get $19
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $10
  local.get $23
  f64.mul
  local.get $12
  local.get $20
  f64.mul
  f64.sub
  local.get $13
  local.get $19
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $6
  local.get $28
  f64.mul
  local.get $7
  local.get $26
  f64.mul
  f64.sub
  local.get $9
  local.get $24
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $3
  local.get $26
  f64.mul
  local.get $2
  local.get $28
  f64.mul
  f64.sub
  local.get $5
  local.get $24
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $14
  local.get $22
  f64.mul
  local.get $15
  local.get $20
  f64.mul
  f64.sub
  local.get $17
  local.get $18
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  local.get $11
  local.get $20
  f64.mul
  local.get $10
  local.get $22
  f64.mul
  f64.sub
  local.get $13
  local.get $18
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $7
  local.get $25
  f64.mul
  local.get $6
  local.get $27
  f64.mul
  f64.sub
  local.get $8
  local.get $24
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $2
  local.get $27
  f64.mul
  local.get $3
  local.get $25
  f64.mul
  f64.sub
  local.get $4
  local.get $24
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $15
  local.get $19
  f64.mul
  local.get $14
  local.get $21
  f64.mul
  f64.sub
  local.get $16
  local.get $18
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  local.get $10
  local.get $21
  f64.mul
  local.get $11
  local.get $19
  f64.mul
  f64.sub
  local.get $12
  local.get $18
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/determinant (param $0 i32) (result f64)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  (local $23 f64)
  (local $24 f64)
  (local $25 f64)
  (local $26 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $0
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $0
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $0
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $0
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $0
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $0
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $0
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $0
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $0
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.set $15
  local.get $0
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.set $16
  local.get $1
  local.get $6
  f64.mul
  local.get $2
  local.get $5
  f64.mul
  f64.sub
  local.set $17
  local.get $1
  local.get $7
  f64.mul
  local.get $3
  local.get $5
  f64.mul
  f64.sub
  local.set $18
  local.get $2
  local.get $7
  f64.mul
  local.get $3
  local.get $6
  f64.mul
  f64.sub
  local.set $19
  local.get $9
  local.get $14
  f64.mul
  local.get $10
  local.get $13
  f64.mul
  f64.sub
  local.set $20
  local.get $9
  local.get $15
  f64.mul
  local.get $11
  local.get $13
  f64.mul
  f64.sub
  local.set $21
  local.get $10
  local.get $15
  f64.mul
  local.get $11
  local.get $14
  f64.mul
  f64.sub
  local.set $22
  local.get $1
  local.get $22
  f64.mul
  local.get $2
  local.get $21
  f64.mul
  f64.sub
  local.get $3
  local.get $20
  f64.mul
  f64.add
  local.set $23
  local.get $5
  local.get $22
  f64.mul
  local.get $6
  local.get $21
  f64.mul
  f64.sub
  local.get $7
  local.get $20
  f64.mul
  f64.add
  local.set $24
  local.get $9
  local.get $19
  f64.mul
  local.get $10
  local.get $18
  f64.mul
  f64.sub
  local.get $11
  local.get $17
  f64.mul
  f64.add
  local.set $25
  local.get $13
  local.get $19
  f64.mul
  local.get $14
  local.get $18
  f64.mul
  f64.sub
  local.get $15
  local.get $17
  f64.mul
  f64.add
  local.set $26
  local.get $8
  local.get $23
  f64.mul
  local.get $4
  local.get $24
  f64.mul
  f64.sub
  local.get $16
  local.get $25
  f64.mul
  f64.add
  local.get $12
  local.get $26
  f64.mul
  f64.sub
 )
 (func $assembly/mat4/translate (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  local.get $0
  i32.eq
  if
   local.get $0
   i32.const 12
   local.get $1
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   local.get $3
   f64.mul
   local.get $1
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   local.get $4
   f64.mul
   f64.add
   local.get $1
   i32.const 8
   call $~lib/typedarray/Float64Array#__get
   local.get $5
   f64.mul
   f64.add
   local.get $1
   i32.const 12
   call $~lib/typedarray/Float64Array#__get
   f64.add
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 13
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.get $3
   f64.mul
   local.get $1
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   local.get $4
   f64.mul
   f64.add
   local.get $1
   i32.const 9
   call $~lib/typedarray/Float64Array#__get
   local.get $5
   f64.mul
   f64.add
   local.get $1
   i32.const 13
   call $~lib/typedarray/Float64Array#__get
   f64.add
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 14
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   local.get $3
   f64.mul
   local.get $1
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   local.get $4
   f64.mul
   f64.add
   local.get $1
   i32.const 10
   call $~lib/typedarray/Float64Array#__get
   local.get $5
   f64.mul
   f64.add
   local.get $1
   i32.const 14
   call $~lib/typedarray/Float64Array#__get
   f64.add
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 15
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   local.get $3
   f64.mul
   local.get $1
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   local.get $4
   f64.mul
   f64.add
   local.get $1
   i32.const 11
   call $~lib/typedarray/Float64Array#__get
   local.get $5
   f64.mul
   f64.add
   local.get $1
   i32.const 15
   call $~lib/typedarray/Float64Array#__get
   f64.add
   call $~lib/typedarray/Float64Array#__set
  else
   local.get $1
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   local.set $6
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.set $7
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   local.set $8
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   local.set $9
   local.get $1
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   local.set $10
   local.get $1
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   local.set $11
   local.get $1
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   local.set $12
   local.get $1
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   local.set $13
   local.get $1
   i32.const 8
   call $~lib/typedarray/Float64Array#__get
   local.set $14
   local.get $1
   i32.const 9
   call $~lib/typedarray/Float64Array#__get
   local.set $15
   local.get $1
   i32.const 10
   call $~lib/typedarray/Float64Array#__get
   local.set $16
   local.get $1
   i32.const 11
   call $~lib/typedarray/Float64Array#__get
   local.set $17
   local.get $0
   i32.const 0
   local.get $6
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   local.get $7
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $8
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 3
   local.get $9
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 4
   local.get $10
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 5
   local.get $11
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 6
   local.get $12
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 7
   local.get $13
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 8
   local.get $14
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 9
   local.get $15
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 10
   local.get $16
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 11
   local.get $17
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 12
   local.get $6
   local.get $3
   f64.mul
   local.get $10
   local.get $4
   f64.mul
   f64.add
   local.get $14
   local.get $5
   f64.mul
   f64.add
   local.get $1
   i32.const 12
   call $~lib/typedarray/Float64Array#__get
   f64.add
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 13
   local.get $7
   local.get $3
   f64.mul
   local.get $11
   local.get $4
   f64.mul
   f64.add
   local.get $15
   local.get $5
   f64.mul
   f64.add
   local.get $1
   i32.const 13
   call $~lib/typedarray/Float64Array#__get
   f64.add
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 14
   local.get $8
   local.get $3
   f64.mul
   local.get $12
   local.get $4
   f64.mul
   f64.add
   local.get $16
   local.get $5
   f64.mul
   f64.add
   local.get $1
   i32.const 14
   call $~lib/typedarray/Float64Array#__get
   f64.add
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 15
   local.get $9
   local.get $3
   f64.mul
   local.get $13
   local.get $4
   f64.mul
   f64.add
   local.get $17
   local.get $5
   f64.mul
   f64.add
   local.get $1
   i32.const 15
   call $~lib/typedarray/Float64Array#__get
   f64.add
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
 )
 (func $assembly/mat4/scale (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $1
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $1
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $1
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  local.get $1
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/rotate (param $0 i32) (param $1 i32) (param $2 f64) (param $3 i32) (result i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  (local $23 f64)
  (local $24 f64)
  (local $25 f64)
  (local $26 f64)
  (local $27 f64)
  (local $28 f64)
  (local $29 f64)
  (local $30 f64)
  (local $31 f64)
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $3
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $3
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $4
  local.get $5
  local.get $6
  call $assembly/maths/Maths.hypot3
  local.set $7
  local.get $7
  global.get $assembly/common/EPSILON
  f64.lt
  if
   i32.const 0
   return
  end
  f64.const 1
  local.get $7
  f64.div
  local.set $7
  local.get $4
  local.get $7
  f64.mul
  local.set $4
  local.get $5
  local.get $7
  f64.mul
  local.set $5
  local.get $6
  local.get $7
  f64.mul
  local.set $6
  local.get $2
  call $~lib/math/NativeMath.sin
  local.set $8
  local.get $2
  call $~lib/math/NativeMath.cos
  local.set $9
  f64.const 1
  local.get $9
  f64.sub
  local.set $10
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $15
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $16
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $17
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $18
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $19
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.set $20
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.set $21
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.set $22
  local.get $4
  local.get $4
  f64.mul
  local.get $10
  f64.mul
  local.get $9
  f64.add
  local.set $23
  local.get $5
  local.get $4
  f64.mul
  local.get $10
  f64.mul
  local.get $6
  local.get $8
  f64.mul
  f64.add
  local.set $24
  local.get $6
  local.get $4
  f64.mul
  local.get $10
  f64.mul
  local.get $5
  local.get $8
  f64.mul
  f64.sub
  local.set $25
  local.get $4
  local.get $5
  f64.mul
  local.get $10
  f64.mul
  local.get $6
  local.get $8
  f64.mul
  f64.sub
  local.set $26
  local.get $5
  local.get $5
  f64.mul
  local.get $10
  f64.mul
  local.get $9
  f64.add
  local.set $27
  local.get $6
  local.get $5
  f64.mul
  local.get $10
  f64.mul
  local.get $4
  local.get $8
  f64.mul
  f64.add
  local.set $28
  local.get $4
  local.get $6
  f64.mul
  local.get $10
  f64.mul
  local.get $5
  local.get $8
  f64.mul
  f64.add
  local.set $29
  local.get $5
  local.get $6
  f64.mul
  local.get $10
  f64.mul
  local.get $4
  local.get $8
  f64.mul
  f64.sub
  local.set $30
  local.get $6
  local.get $6
  f64.mul
  local.get $10
  f64.mul
  local.get $9
  f64.add
  local.set $31
  local.get $0
  i32.const 0
  local.get $11
  local.get $23
  f64.mul
  local.get $15
  local.get $24
  f64.mul
  f64.add
  local.get $19
  local.get $25
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $12
  local.get $23
  f64.mul
  local.get $16
  local.get $24
  f64.mul
  f64.add
  local.get $20
  local.get $25
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $13
  local.get $23
  f64.mul
  local.get $17
  local.get $24
  f64.mul
  f64.add
  local.get $21
  local.get $25
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $14
  local.get $23
  f64.mul
  local.get $18
  local.get $24
  f64.mul
  f64.add
  local.get $22
  local.get $25
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $11
  local.get $26
  f64.mul
  local.get $15
  local.get $27
  f64.mul
  f64.add
  local.get $19
  local.get $28
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $12
  local.get $26
  f64.mul
  local.get $16
  local.get $27
  f64.mul
  f64.add
  local.get $20
  local.get $28
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $13
  local.get $26
  f64.mul
  local.get $17
  local.get $27
  f64.mul
  f64.add
  local.get $21
  local.get $28
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $14
  local.get $26
  f64.mul
  local.get $18
  local.get $27
  f64.mul
  f64.add
  local.get $22
  local.get $28
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $11
  local.get $29
  f64.mul
  local.get $15
  local.get $30
  f64.mul
  f64.add
  local.get $19
  local.get $31
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $12
  local.get $29
  f64.mul
  local.get $16
  local.get $30
  f64.mul
  f64.add
  local.get $20
  local.get $31
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $13
  local.get $29
  f64.mul
  local.get $17
  local.get $30
  f64.mul
  f64.add
  local.get $21
  local.get $31
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  local.get $14
  local.get $29
  f64.mul
  local.get $18
  local.get $30
  f64.mul
  f64.add
  local.get $22
  local.get $31
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  local.get $0
  i32.ne
  if
   local.get $0
   i32.const 12
   local.get $1
   i32.const 12
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 13
   local.get $1
   i32.const 13
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 14
   local.get $1
   i32.const 14
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 15
   local.get $1
   i32.const 15
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
 )
 (func $assembly/mat4/rotateX (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  local.get $2
  call $~lib/math/NativeMath.sin
  local.set $3
  local.get $2
  call $~lib/math/NativeMath.cos
  local.set $4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  local.get $0
  i32.ne
  if
   local.get $0
   i32.const 0
   local.get $1
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 3
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 12
   local.get $1
   i32.const 12
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 13
   local.get $1
   i32.const 13
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 14
   local.get $1
   i32.const 14
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 15
   local.get $1
   i32.const 15
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
  i32.const 4
  local.get $5
  local.get $4
  f64.mul
  local.get $9
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $6
  local.get $4
  f64.mul
  local.get $10
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $7
  local.get $4
  f64.mul
  local.get $11
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $8
  local.get $4
  f64.mul
  local.get $12
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $9
  local.get $4
  f64.mul
  local.get $5
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $10
  local.get $4
  f64.mul
  local.get $6
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $11
  local.get $4
  f64.mul
  local.get $7
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  local.get $12
  local.get $4
  f64.mul
  local.get $8
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/rotateY (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  local.get $2
  call $~lib/math/NativeMath.sin
  local.set $3
  local.get $2
  call $~lib/math/NativeMath.cos
  local.set $4
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  local.get $0
  i32.ne
  if
   local.get $0
   i32.const 4
   local.get $1
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 5
   local.get $1
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 6
   local.get $1
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 7
   local.get $1
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 12
   local.get $1
   i32.const 12
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 13
   local.get $1
   i32.const 13
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 14
   local.get $1
   i32.const 14
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 15
   local.get $1
   i32.const 15
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
  i32.const 0
  local.get $5
  local.get $4
  f64.mul
  local.get $9
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $6
  local.get $4
  f64.mul
  local.get $10
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $7
  local.get $4
  f64.mul
  local.get $11
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $8
  local.get $4
  f64.mul
  local.get $12
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $5
  local.get $3
  f64.mul
  local.get $9
  local.get $4
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $6
  local.get $3
  f64.mul
  local.get $10
  local.get $4
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $7
  local.get $3
  f64.mul
  local.get $11
  local.get $4
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  local.get $8
  local.get $3
  f64.mul
  local.get $12
  local.get $4
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/rotateZ (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  local.get $2
  call $~lib/math/NativeMath.sin
  local.set $3
  local.get $2
  call $~lib/math/NativeMath.cos
  local.set $4
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  local.get $0
  i32.ne
  if
   local.get $0
   i32.const 8
   local.get $1
   i32.const 8
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 9
   local.get $1
   i32.const 9
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 10
   local.get $1
   i32.const 10
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 11
   local.get $1
   i32.const 11
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 12
   local.get $1
   i32.const 12
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 13
   local.get $1
   i32.const 13
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 14
   local.get $1
   i32.const 14
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 15
   local.get $1
   i32.const 15
   call $~lib/typedarray/Float64Array#__get
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
  i32.const 0
  local.get $5
  local.get $4
  f64.mul
  local.get $9
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $6
  local.get $4
  f64.mul
  local.get $10
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $7
  local.get $4
  f64.mul
  local.get $11
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $8
  local.get $4
  f64.mul
  local.get $12
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $9
  local.get $4
  f64.mul
  local.get $5
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $10
  local.get $4
  f64.mul
  local.get $6
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $11
  local.get $4
  f64.mul
  local.get $7
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $12
  local.get $4
  f64.mul
  local.get $8
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/fromTranslation (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/fromScaling (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/fromRotation (param $0 i32) (param $1 f64) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $3
  local.get $4
  local.get $5
  call $assembly/maths/Maths.hypot3
  local.set $6
  local.get $6
  global.get $assembly/common/EPSILON
  f64.lt
  if
   i32.const 0
   return
  end
  f64.const 1
  local.get $6
  f64.div
  local.set $6
  local.get $3
  local.get $6
  f64.mul
  local.set $3
  local.get $4
  local.get $6
  f64.mul
  local.set $4
  local.get $5
  local.get $6
  f64.mul
  local.set $5
  local.get $1
  call $~lib/math/NativeMath.sin
  local.set $7
  local.get $1
  call $~lib/math/NativeMath.cos
  local.set $8
  f64.const 1
  local.get $8
  f64.sub
  local.set $9
  local.get $0
  i32.const 0
  local.get $3
  local.get $3
  f64.mul
  local.get $9
  f64.mul
  local.get $8
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $3
  f64.mul
  local.get $9
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $5
  local.get $3
  f64.mul
  local.get $9
  f64.mul
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $3
  local.get $4
  f64.mul
  local.get $9
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $4
  local.get $4
  f64.mul
  local.get $9
  f64.mul
  local.get $8
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $5
  local.get $4
  f64.mul
  local.get $9
  f64.mul
  local.get $3
  local.get $7
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $3
  local.get $5
  f64.mul
  local.get $9
  f64.mul
  local.get $4
  local.get $7
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $4
  local.get $5
  f64.mul
  local.get $9
  f64.mul
  local.get $3
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $5
  local.get $5
  f64.mul
  local.get $9
  f64.mul
  local.get $8
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/fromXRotation (param $0 i32) (param $1 f64) (result i32)
  (local $2 f64)
  (local $3 f64)
  local.get $1
  call $~lib/math/NativeMath.sin
  local.set $2
  local.get $1
  call $~lib/math/NativeMath.cos
  local.set $3
  local.get $0
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $2
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/fromYRotation (param $0 i32) (param $1 f64) (result i32)
  (local $2 f64)
  (local $3 f64)
  local.get $1
  call $~lib/math/NativeMath.sin
  local.set $2
  local.get $1
  call $~lib/math/NativeMath.cos
  local.set $3
  local.get $0
  i32.const 0
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $2
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/fromZRotation (param $0 i32) (param $1 f64) (result i32)
  (local $2 f64)
  (local $3 f64)
  local.get $1
  call $~lib/math/NativeMath.sin
  local.set $2
  local.get $1
  call $~lib/math/NativeMath.cos
  local.set $3
  local.get $0
  i32.const 0
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $2
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/fromRotationTranslation (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $3
  local.get $3
  f64.add
  local.set $7
  local.get $4
  local.get $4
  f64.add
  local.set $8
  local.get $5
  local.get $5
  f64.add
  local.set $9
  local.get $3
  local.get $7
  f64.mul
  local.set $10
  local.get $3
  local.get $8
  f64.mul
  local.set $11
  local.get $3
  local.get $9
  f64.mul
  local.set $12
  local.get $4
  local.get $8
  f64.mul
  local.set $13
  local.get $4
  local.get $9
  f64.mul
  local.set $14
  local.get $5
  local.get $9
  f64.mul
  local.set $15
  local.get $6
  local.get $7
  f64.mul
  local.set $16
  local.get $6
  local.get $8
  f64.mul
  local.set $17
  local.get $6
  local.get $9
  f64.mul
  local.set $18
  local.get $0
  i32.const 0
  f64.const 1
  local.get $13
  local.get $15
  f64.add
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $11
  local.get $18
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $12
  local.get $17
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $11
  local.get $18
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 1
  local.get $10
  local.get $15
  f64.add
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $14
  local.get $16
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $12
  local.get $17
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $14
  local.get $16
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  f64.const 1
  local.get $10
  local.get $13
  f64.add
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/getTranslation (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/getScaling (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $0
  i32.const 0
  local.get $2
  local.get $3
  local.get $4
  call $assembly/maths/Maths.hypot3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $5
  local.get $6
  local.get $7
  call $assembly/maths/Maths.hypot3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $8
  local.get $9
  local.get $10
  call $assembly/maths/Maths.hypot3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/decompose (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  (local $23 f64)
  (local $24 f64)
  (local $25 f64)
  (local $26 f64)
  (local $27 f64)
  local.get $1
  i32.const 0
  local.get $3
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 1
  local.get $3
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 2
  local.get $3
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $3
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $3
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $3
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $3
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $3
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $3
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $3
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $3
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $2
  i32.const 0
  local.get $4
  local.get $5
  local.get $6
  call $assembly/maths/Maths.hypot3
  call $~lib/typedarray/Float64Array#__set
  local.get $2
  i32.const 1
  local.get $7
  local.get $8
  local.get $9
  call $assembly/maths/Maths.hypot3
  call $~lib/typedarray/Float64Array#__set
  local.get $2
  i32.const 2
  local.get $10
  local.get $11
  local.get $12
  call $assembly/maths/Maths.hypot3
  call $~lib/typedarray/Float64Array#__set
  i32.const 1
  f64.convert_i32_s
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.div
  local.set $13
  i32.const 1
  f64.convert_i32_s
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.div
  local.set $14
  i32.const 1
  f64.convert_i32_s
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.div
  local.set $15
  local.get $4
  local.get $13
  f64.mul
  local.set $16
  local.get $5
  local.get $14
  f64.mul
  local.set $17
  local.get $6
  local.get $15
  f64.mul
  local.set $18
  local.get $7
  local.get $13
  f64.mul
  local.set $19
  local.get $8
  local.get $14
  f64.mul
  local.set $20
  local.get $9
  local.get $15
  f64.mul
  local.set $21
  local.get $10
  local.get $13
  f64.mul
  local.set $22
  local.get $11
  local.get $14
  f64.mul
  local.set $23
  local.get $12
  local.get $15
  f64.mul
  local.set $24
  local.get $16
  local.get $20
  f64.add
  local.get $24
  f64.add
  local.set $25
  f64.const 0
  local.set $26
  local.get $25
  f64.const 0
  f64.gt
  if
   local.get $25
   f64.const 1
   f64.add
   local.set $27
   local.get $27
   f64.sqrt
   f64.const 2
   f64.mul
   local.set $26
   local.get $0
   i32.const 3
   f64.const 0.25
   local.get $26
   f64.mul
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 0
   local.get $21
   local.get $23
   f64.sub
   local.get $26
   f64.div
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   local.get $22
   local.get $18
   f64.sub
   local.get $26
   f64.div
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $17
   local.get $19
   f64.sub
   local.get $26
   f64.div
   call $~lib/typedarray/Float64Array#__set
  else
   local.get $16
   local.get $20
   f64.gt
   if (result i32)
    local.get $16
    local.get $24
    f64.gt
   else
    i32.const 0
   end
   if
    f64.const 1
    local.get $16
    f64.add
    local.get $20
    f64.sub
    local.get $24
    f64.sub
    local.set $27
    local.get $27
    f64.sqrt
    f64.const 2
    f64.mul
    local.set $26
    local.get $0
    i32.const 3
    local.get $21
    local.get $23
    f64.sub
    local.get $26
    f64.div
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 0
    f64.const 0.25
    local.get $26
    f64.mul
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 1
    local.get $17
    local.get $19
    f64.add
    local.get $26
    f64.div
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 2
    local.get $22
    local.get $18
    f64.add
    local.get $26
    f64.div
    call $~lib/typedarray/Float64Array#__set
   else
    local.get $20
    local.get $24
    f64.gt
    if
     f64.const 1
     local.get $20
     f64.add
     local.get $16
     f64.sub
     local.get $24
     f64.sub
     local.set $27
     local.get $27
     f64.sqrt
     f64.const 2
     f64.mul
     local.set $26
     local.get $0
     i32.const 3
     local.get $22
     local.get $18
     f64.sub
     local.get $26
     f64.div
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 0
     local.get $17
     local.get $19
     f64.add
     local.get $26
     f64.div
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 1
     f64.const 0.25
     local.get $26
     f64.mul
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 2
     local.get $21
     local.get $23
     f64.add
     local.get $26
     f64.div
     call $~lib/typedarray/Float64Array#__set
    else
     f64.const 1
     local.get $24
     f64.add
     local.get $16
     f64.sub
     local.get $20
     f64.sub
     local.set $27
     local.get $27
     f64.sqrt
     f64.const 2
     f64.mul
     local.set $26
     local.get $0
     i32.const 3
     local.get $17
     local.get $19
     f64.sub
     local.get $26
     f64.div
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 0
     local.get $22
     local.get $18
     f64.add
     local.get $26
     f64.div
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 1
     local.get $21
     local.get $23
     f64.add
     local.get $26
     f64.div
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 2
     f64.const 0.25
     local.get $26
     f64.mul
     call $~lib/typedarray/Float64Array#__set
    end
   end
  end
  local.get $0
 )
 (func $assembly/mat4/fromRotationTranslationScale (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $4
  local.get $4
  f64.add
  local.set $8
  local.get $5
  local.get $5
  f64.add
  local.set $9
  local.get $6
  local.get $6
  f64.add
  local.set $10
  local.get $4
  local.get $8
  f64.mul
  local.set $11
  local.get $4
  local.get $9
  f64.mul
  local.set $12
  local.get $4
  local.get $10
  f64.mul
  local.set $13
  local.get $5
  local.get $9
  f64.mul
  local.set $14
  local.get $5
  local.get $10
  f64.mul
  local.set $15
  local.get $6
  local.get $10
  f64.mul
  local.set $16
  local.get $7
  local.get $8
  f64.mul
  local.set $17
  local.get $7
  local.get $9
  f64.mul
  local.set $18
  local.get $7
  local.get $10
  f64.mul
  local.set $19
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $20
  local.get $3
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $21
  local.get $3
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $22
  local.get $0
  i32.const 0
  f64.const 1
  local.get $14
  local.get $16
  f64.add
  f64.sub
  local.get $20
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $12
  local.get $19
  f64.add
  local.get $20
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $13
  local.get $18
  f64.sub
  local.get $20
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $12
  local.get $19
  f64.sub
  local.get $21
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 1
  local.get $11
  local.get $16
  f64.add
  f64.sub
  local.get $21
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $15
  local.get $17
  f64.add
  local.get $21
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $13
  local.get $18
  f64.add
  local.get $22
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $15
  local.get $17
  f64.sub
  local.get $22
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  f64.const 1
  local.get $11
  local.get $14
  f64.add
  f64.sub
  local.get $22
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/fromRotationTranslationScaleOrigin (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  (local $23 f64)
  (local $24 f64)
  (local $25 f64)
  (local $26 f64)
  (local $27 f64)
  (local $28 f64)
  (local $29 f64)
  (local $30 f64)
  (local $31 f64)
  (local $32 f64)
  (local $33 f64)
  (local $34 f64)
  (local $35 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $5
  local.get $5
  f64.add
  local.set $9
  local.get $6
  local.get $6
  f64.add
  local.set $10
  local.get $7
  local.get $7
  f64.add
  local.set $11
  local.get $5
  local.get $9
  f64.mul
  local.set $12
  local.get $5
  local.get $10
  f64.mul
  local.set $13
  local.get $5
  local.get $11
  f64.mul
  local.set $14
  local.get $6
  local.get $10
  f64.mul
  local.set $15
  local.get $6
  local.get $11
  f64.mul
  local.set $16
  local.get $7
  local.get $11
  f64.mul
  local.set $17
  local.get $8
  local.get $9
  f64.mul
  local.set $18
  local.get $8
  local.get $10
  f64.mul
  local.set $19
  local.get $8
  local.get $11
  f64.mul
  local.set $20
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $21
  local.get $3
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $22
  local.get $3
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $23
  local.get $4
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $24
  local.get $4
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $25
  local.get $4
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $26
  i32.const 1
  f64.convert_i32_s
  local.get $15
  local.get $17
  f64.add
  f64.sub
  local.get $21
  f64.mul
  local.set $27
  local.get $13
  local.get $20
  f64.add
  local.get $21
  f64.mul
  local.set $28
  local.get $14
  local.get $19
  f64.sub
  local.get $21
  f64.mul
  local.set $29
  local.get $13
  local.get $20
  f64.sub
  local.get $22
  f64.mul
  local.set $30
  i32.const 1
  f64.convert_i32_s
  local.get $12
  local.get $17
  f64.add
  f64.sub
  local.get $22
  f64.mul
  local.set $31
  local.get $16
  local.get $18
  f64.add
  local.get $22
  f64.mul
  local.set $32
  local.get $14
  local.get $19
  f64.add
  local.get $23
  f64.mul
  local.set $33
  local.get $16
  local.get $18
  f64.sub
  local.get $23
  f64.mul
  local.set $34
  i32.const 1
  f64.convert_i32_s
  local.get $12
  local.get $15
  f64.add
  f64.sub
  local.get $23
  f64.mul
  local.set $35
  local.get $0
  i32.const 0
  local.get $27
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $28
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $29
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $30
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $31
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $32
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $33
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $34
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $35
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $24
  f64.add
  local.get $27
  local.get $24
  f64.mul
  local.get $30
  local.get $25
  f64.mul
  f64.add
  local.get $33
  local.get $26
  f64.mul
  f64.add
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $25
  f64.add
  local.get $28
  local.get $24
  f64.mul
  local.get $31
  local.get $25
  f64.mul
  f64.add
  local.get $34
  local.get $26
  f64.mul
  f64.add
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $26
  f64.add
  local.get $29
  local.get $24
  f64.mul
  local.get $32
  local.get $25
  f64.mul
  f64.add
  local.get $35
  local.get $26
  f64.mul
  f64.add
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/fromQuat (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  local.get $2
  f64.add
  local.set $6
  local.get $3
  local.get $3
  f64.add
  local.set $7
  local.get $4
  local.get $4
  f64.add
  local.set $8
  local.get $2
  local.get $6
  f64.mul
  local.set $9
  local.get $3
  local.get $6
  f64.mul
  local.set $10
  local.get $3
  local.get $7
  f64.mul
  local.set $11
  local.get $4
  local.get $6
  f64.mul
  local.set $12
  local.get $4
  local.get $7
  f64.mul
  local.set $13
  local.get $4
  local.get $8
  f64.mul
  local.set $14
  local.get $5
  local.get $6
  f64.mul
  local.set $15
  local.get $5
  local.get $7
  f64.mul
  local.set $16
  local.get $5
  local.get $8
  f64.mul
  local.set $17
  local.get $0
  i32.const 0
  f64.const 1
  local.get $11
  f64.sub
  local.get $14
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $10
  local.get $17
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $12
  local.get $16
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $10
  local.get $17
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 1
  local.get $9
  f64.sub
  local.get $14
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $13
  local.get $15
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $12
  local.get $16
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $13
  local.get $15
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  f64.const 1
  local.get $9
  f64.sub
  local.get $11
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/frustum (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (result i32)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  i32.const 1
  f64.convert_i32_s
  local.get $2
  local.get $1
  f64.sub
  f64.div
  local.set $7
  i32.const 1
  f64.convert_i32_s
  local.get $4
  local.get $3
  f64.sub
  f64.div
  local.set $8
  i32.const 1
  f64.convert_i32_s
  local.get $5
  local.get $6
  f64.sub
  f64.div
  local.set $9
  local.get $0
  i32.const 0
  local.get $5
  f64.const 2
  f64.mul
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $5
  f64.const 2
  f64.mul
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $2
  local.get $1
  f64.add
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $4
  local.get $3
  f64.add
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $6
  local.get $5
  f64.add
  local.get $9
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const -1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $6
  local.get $5
  f64.mul
  f64.const 2
  f64.mul
  local.get $9
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/perspectiveZO (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (result i32)
  (local $5 f64)
  (local $6 f64)
  f64.const 1
  local.get $1
  f64.const 2
  f64.div
  call $~lib/math/NativeMath.tan
  f64.div
  local.set $5
  local.get $0
  i32.const 0
  local.get $5
  local.get $2
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const -1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $4
  drop
  i32.const 2176
  i32.const 2176
  i32.eq
  if (result i32)
   local.get $4
   f64.const inf
   f64.ne
  else
   i32.const 0
  end
  if
   i32.const 1
   f64.convert_i32_s
   local.get $3
   local.get $4
   f64.sub
   f64.div
   local.set $6
   local.get $0
   i32.const 10
   local.get $4
   local.get $6
   f64.mul
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 14
   local.get $4
   local.get $3
   f64.mul
   local.get $6
   f64.mul
   call $~lib/typedarray/Float64Array#__set
  else
   local.get $0
   i32.const 10
   f64.const -1
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 14
   local.get $3
   f64.neg
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
 )
 (func $assembly/mat4/perspectiveFromFieldOfView (param $0 i32) (param $1 i32) (param $2 f64) (param $3 f64) (result i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  local.get $1
  f64.load
  global.get $~lib/math/NativeMath.PI
  f64.mul
  f64.const 180
  f64.div
  call $~lib/math/NativeMath.tan
  local.set $4
  local.get $1
  f64.load offset=8
  global.get $~lib/math/NativeMath.PI
  f64.mul
  f64.const 180
  f64.div
  call $~lib/math/NativeMath.tan
  local.set $5
  local.get $1
  f64.load offset=16
  global.get $~lib/math/NativeMath.PI
  f64.mul
  f64.const 180
  f64.div
  call $~lib/math/NativeMath.tan
  local.set $6
  local.get $1
  f64.load offset=24
  global.get $~lib/math/NativeMath.PI
  f64.mul
  f64.const 180
  f64.div
  call $~lib/math/NativeMath.tan
  local.set $7
  f64.const 2
  local.get $6
  local.get $7
  f64.add
  f64.div
  local.set $8
  f64.const 2
  local.get $4
  local.get $5
  f64.add
  f64.div
  local.set $9
  local.get $0
  i32.const 0
  local.get $8
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $9
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $6
  local.get $7
  f64.sub
  local.get $8
  f64.mul
  f64.const 0.5
  f64.mul
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $4
  local.get $5
  f64.sub
  local.get $9
  f64.mul
  f64.const 0.5
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $3
  local.get $2
  local.get $3
  f64.sub
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const -1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $3
  local.get $2
  f64.mul
  local.get $2
  local.get $3
  f64.sub
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/orthoZO (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (result i32)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  i32.const 1
  f64.convert_i32_s
  local.get $1
  local.get $2
  f64.sub
  f64.div
  local.set $7
  i32.const 1
  f64.convert_i32_s
  local.get $3
  local.get $4
  f64.sub
  f64.div
  local.set $8
  i32.const 1
  f64.convert_i32_s
  local.get $5
  local.get $6
  f64.sub
  f64.div
  local.set $9
  local.get $0
  i32.const 0
  f64.const -2
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const -2
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $9
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $1
  local.get $2
  f64.add
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $4
  local.get $3
  f64.add
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $5
  local.get $9
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/lookAt (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  (local $23 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $15
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $16
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $17
  local.get $3
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $18
  local.get $3
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $19
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $20
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $21
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $22
  local.get $14
  local.get $20
  f64.sub
  local.set $23
  local.get $23
  f64.abs
  global.get $assembly/common/EPSILON
  f64.lt
  if (result i32)
   local.get $15
   local.get $21
   f64.sub
   local.set $23
   local.get $23
   f64.abs
   global.get $assembly/common/EPSILON
   f64.lt
  else
   i32.const 0
  end
  if (result i32)
   local.get $16
   local.get $22
   f64.sub
   local.set $23
   local.get $23
   f64.abs
   global.get $assembly/common/EPSILON
   f64.lt
  else
   i32.const 0
  end
  if
   local.get $0
   call $assembly/mat4/identity
   return
  end
  local.get $14
  local.get $20
  f64.sub
  local.set $10
  local.get $15
  local.get $21
  f64.sub
  local.set $11
  local.get $16
  local.get $22
  f64.sub
  local.set $12
  f64.const 1
  local.get $10
  local.get $11
  local.get $12
  call $assembly/maths/Maths.hypot3
  f64.div
  local.set $13
  local.get $10
  local.get $13
  f64.mul
  local.set $10
  local.get $11
  local.get $13
  f64.mul
  local.set $11
  local.get $12
  local.get $13
  f64.mul
  local.set $12
  local.get $18
  local.get $12
  f64.mul
  local.get $19
  local.get $11
  f64.mul
  f64.sub
  local.set $4
  local.get $19
  local.get $10
  f64.mul
  local.get $17
  local.get $12
  f64.mul
  f64.sub
  local.set $5
  local.get $17
  local.get $11
  f64.mul
  local.get $18
  local.get $10
  f64.mul
  f64.sub
  local.set $6
  local.get $4
  local.get $5
  local.get $6
  call $assembly/maths/Maths.hypot3
  local.set $13
  local.get $13
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  i32.eqz
  if
   f64.const 0
   local.set $4
   f64.const 0
   local.set $5
   f64.const 0
   local.set $6
  else
   f64.const 1
   local.get $13
   f64.div
   local.set $13
   local.get $4
   local.get $13
   f64.mul
   local.set $4
   local.get $5
   local.get $13
   f64.mul
   local.set $5
   local.get $6
   local.get $13
   f64.mul
   local.set $6
  end
  local.get $11
  local.get $6
  f64.mul
  local.get $12
  local.get $5
  f64.mul
  f64.sub
  local.set $7
  local.get $12
  local.get $4
  f64.mul
  local.get $10
  local.get $6
  f64.mul
  f64.sub
  local.set $8
  local.get $10
  local.get $5
  f64.mul
  local.get $11
  local.get $4
  f64.mul
  f64.sub
  local.set $9
  local.get $7
  local.get $8
  local.get $9
  call $assembly/maths/Maths.hypot3
  local.set $13
  local.get $13
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  i32.eqz
  if
   f64.const 0
   local.set $7
   f64.const 0
   local.set $8
   f64.const 0
   local.set $9
  else
   f64.const 1
   local.get $13
   f64.div
   local.set $13
   local.get $7
   local.get $13
   f64.mul
   local.set $7
   local.get $8
   local.get $13
   f64.mul
   local.set $8
   local.get $9
   local.get $13
   f64.mul
   local.set $9
  end
  local.get $0
  i32.const 0
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $7
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $10
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $8
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $11
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $6
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $9
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $12
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $4
  local.get $14
  f64.mul
  local.get $5
  local.get $15
  f64.mul
  f64.add
  local.get $6
  local.get $16
  f64.mul
  f64.add
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $7
  local.get $14
  f64.mul
  local.get $8
  local.get $15
  f64.mul
  f64.add
  local.get $9
  local.get $16
  f64.mul
  f64.add
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $10
  local.get $14
  f64.mul
  local.get $11
  local.get $15
  f64.mul
  f64.add
  local.get $12
  local.get $16
  f64.mul
  f64.add
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/targetTo (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $3
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $3
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $10
  local.get $5
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $11
  local.get $6
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $12
  local.get $10
  local.get $10
  f64.mul
  local.get $11
  local.get $11
  f64.mul
  f64.add
  local.get $12
  local.get $12
  f64.mul
  f64.add
  local.set $13
  local.get $13
  f64.const 0
  f64.gt
  if
   f64.const 1
   local.get $13
   local.set $14
   local.get $14
   f64.sqrt
   f64.div
   local.set $13
   local.get $10
   local.get $13
   f64.mul
   local.set $10
   local.get $11
   local.get $13
   f64.mul
   local.set $11
   local.get $12
   local.get $13
   f64.mul
   local.set $12
  end
  local.get $8
  local.get $12
  f64.mul
  local.get $9
  local.get $11
  f64.mul
  f64.sub
  local.set $14
  local.get $9
  local.get $10
  f64.mul
  local.get $7
  local.get $12
  f64.mul
  f64.sub
  local.set $15
  local.get $7
  local.get $11
  f64.mul
  local.get $8
  local.get $10
  f64.mul
  f64.sub
  local.set $16
  local.get $14
  local.get $14
  f64.mul
  local.get $15
  local.get $15
  f64.mul
  f64.add
  local.get $16
  local.get $16
  f64.mul
  f64.add
  local.set $13
  local.get $13
  f64.const 0
  f64.gt
  if
   f64.const 1
   local.get $13
   local.set $17
   local.get $17
   f64.sqrt
   f64.div
   local.set $13
   local.get $14
   local.get $13
   f64.mul
   local.set $14
   local.get $15
   local.get $13
   f64.mul
   local.set $15
   local.get $16
   local.get $13
   f64.mul
   local.set $16
  end
  local.get $0
  i32.const 0
  local.get $14
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $15
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $16
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $11
  local.get $16
  f64.mul
  local.get $12
  local.get $15
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $12
  local.get $14
  f64.mul
  local.get $10
  local.get $16
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $10
  local.get $15
  f64.mul
  local.get $11
  local.get $14
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $10
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $11
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $12
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $6
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/maths/Maths.hypot16 (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (param $7 f64) (param $8 f64) (param $9 f64) (param $10 f64) (param $11 f64) (param $12 f64) (param $13 f64) (param $14 f64) (param $15 f64) (result f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  local.get $0
  local.set $16
  local.get $16
  f64.abs
  local.set $0
  local.get $1
  local.set $16
  local.get $16
  f64.abs
  local.set $1
  local.get $2
  local.set $16
  local.get $16
  f64.abs
  local.set $2
  local.get $3
  local.set $16
  local.get $16
  f64.abs
  local.set $3
  local.get $4
  local.set $16
  local.get $16
  f64.abs
  local.set $4
  local.get $5
  local.set $16
  local.get $16
  f64.abs
  local.set $5
  local.get $6
  local.set $16
  local.get $16
  f64.abs
  local.set $6
  local.get $7
  local.set $16
  local.get $16
  f64.abs
  local.set $7
  local.get $8
  local.set $16
  local.get $16
  f64.abs
  local.set $8
  local.get $9
  local.set $16
  local.get $16
  f64.abs
  local.set $9
  local.get $10
  local.set $16
  local.get $16
  f64.abs
  local.set $10
  local.get $11
  local.set $16
  local.get $16
  f64.abs
  local.set $11
  local.get $12
  local.set $16
  local.get $16
  f64.abs
  local.set $12
  local.get $13
  local.set $16
  local.get $16
  f64.abs
  local.set $13
  local.get $14
  local.set $16
  local.get $16
  f64.abs
  local.set $14
  local.get $15
  local.set $16
  local.get $16
  f64.abs
  local.set $15
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/maths/Maths.max
  local.get $4
  local.get $5
  local.get $6
  call $assembly/maths/Maths.max
  call $assembly/maths/Maths.max
  local.set $17
  local.get $7
  local.get $8
  local.get $9
  call $assembly/maths/Maths.max
  local.get $10
  local.get $11
  local.get $12
  call $assembly/maths/Maths.max
  local.get $13
  local.get $14
  local.get $15
  call $assembly/maths/Maths.max
  call $assembly/maths/Maths.max
  local.set $16
  local.get $17
  local.get $16
  f64.max
  local.set $17
  local.get $17
  f64.const 0
  f64.eq
  if
   f64.const 0
   return
  end
  f64.const 1
  local.get $17
  f64.div
  local.set $16
  local.get $0
  local.get $16
  f64.mul
  local.set $0
  local.get $1
  local.get $16
  f64.mul
  local.set $1
  local.get $2
  local.get $16
  f64.mul
  local.set $2
  local.get $3
  local.get $16
  f64.mul
  local.set $3
  local.get $4
  local.get $16
  f64.mul
  local.set $4
  local.get $5
  local.get $16
  f64.mul
  local.set $5
  local.get $6
  local.get $16
  f64.mul
  local.set $6
  local.get $7
  local.get $16
  f64.mul
  local.set $7
  local.get $9
  local.get $16
  f64.mul
  local.set $9
  local.get $10
  local.get $16
  f64.mul
  local.set $10
  local.get $11
  local.get $16
  f64.mul
  local.set $11
  local.get $12
  local.get $16
  f64.mul
  local.set $12
  local.get $13
  local.get $16
  f64.mul
  local.set $13
  local.get $14
  local.get $16
  f64.mul
  local.set $14
  local.get $15
  local.get $16
  f64.mul
  local.set $15
  local.get $17
  local.get $0
  local.get $0
  f64.mul
  local.get $1
  local.get $1
  f64.mul
  f64.add
  local.get $2
  local.get $2
  f64.mul
  f64.add
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.get $4
  local.get $4
  f64.mul
  f64.add
  local.get $5
  local.get $5
  f64.mul
  f64.add
  local.get $6
  local.get $6
  f64.mul
  f64.add
  local.get $7
  local.get $7
  f64.mul
  f64.add
  local.get $8
  local.get $8
  f64.mul
  f64.add
  local.get $9
  local.get $9
  f64.mul
  f64.add
  local.get $10
  local.get $10
  f64.mul
  f64.add
  local.get $12
  local.get $12
  f64.mul
  f64.add
  local.get $13
  local.get $13
  f64.mul
  f64.add
  local.get $14
  local.get $14
  f64.mul
  f64.add
  local.get $15
  local.get $15
  f64.mul
  f64.add
  local.set $18
  local.get $18
  f64.sqrt
  f64.mul
 )
 (func $assembly/mat4/frob (param $0 i32) (result f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  call $assembly/maths/Maths.hypot16
 )
 (func $assembly/mat4/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $1
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $1
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $1
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  local.get $1
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/multiplyScalar (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $1
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $1
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $1
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  local.get $1
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/multiplyScalarAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 9
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 11
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 12
  local.get $1
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 13
  local.get $1
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 14
  local.get $1
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  local.get $1
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/mat4/exactEquals (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.eq
  if (result i32)
   local.get $0
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 8
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 8
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 9
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 9
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 10
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 10
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 11
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 11
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 12
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 12
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 13
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 13
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 14
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 14
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 15
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 15
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
 )
 (func $assembly/mat4/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  (local $23 f64)
  (local $24 f64)
  (local $25 f64)
  (local $26 f64)
  (local $27 f64)
  (local $28 f64)
  (local $29 f64)
  (local $30 f64)
  (local $31 f64)
  (local $32 f64)
  (local $33 f64)
  (local $34 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $0
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $0
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $0
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $0
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $0
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $0
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $0
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $0
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.set $15
  local.get $0
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.set $16
  local.get $0
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.set $17
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $18
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $19
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $20
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $21
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $22
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $23
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $24
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $25
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.set $26
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.set $27
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.set $28
  local.get $1
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.set $29
  local.get $1
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.set $30
  local.get $1
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.set $31
  local.get $1
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.set $32
  local.get $1
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.set $33
  local.get $2
  local.get $18
  f64.sub
  local.set $34
  local.get $34
  f64.abs
  global.get $assembly/common/EPSILON
  f64.const 1
  local.get $2
  local.set $34
  local.get $34
  f64.abs
  local.get $18
  local.set $34
  local.get $34
  f64.abs
  call $assembly/maths/Maths.max
  f64.mul
  f64.le
  if (result i32)
   local.get $3
   local.get $19
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $3
   local.set $34
   local.get $34
   f64.abs
   local.get $19
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $4
   local.get $20
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $4
   local.set $34
   local.get $34
   f64.abs
   local.get $20
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $5
   local.get $21
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $5
   local.set $34
   local.get $34
   f64.abs
   local.get $21
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $6
   local.get $22
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $6
   local.set $34
   local.get $34
   f64.abs
   local.get $22
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $7
   local.get $23
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $7
   local.set $34
   local.get $34
   f64.abs
   local.get $23
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $8
   local.get $24
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $8
   local.set $34
   local.get $34
   f64.abs
   local.get $24
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $9
   local.get $25
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $9
   local.set $34
   local.get $34
   f64.abs
   local.get $25
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $10
   local.get $26
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $10
   local.set $34
   local.get $34
   f64.abs
   local.get $26
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $11
   local.get $27
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $11
   local.set $34
   local.get $34
   f64.abs
   local.get $27
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $12
   local.get $28
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $12
   local.set $34
   local.get $34
   f64.abs
   local.get $28
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $13
   local.get $29
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $13
   local.set $34
   local.get $34
   f64.abs
   local.get $29
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $14
   local.get $30
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $14
   local.set $34
   local.get $34
   f64.abs
   local.get $30
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $15
   local.get $31
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $15
   local.set $34
   local.get $34
   f64.abs
   local.get $31
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $16
   local.get $32
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $16
   local.set $34
   local.get $34
   f64.abs
   local.get $32
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $17
   local.get $33
   f64.sub
   local.set $34
   local.get $34
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $17
   local.set $34
   local.get $34
   f64.abs
   local.get $33
   local.set $34
   local.get $34
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
 )
 (func $assembly/quat/identity (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat/getAxisAngle (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 f64)
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/math/NativeMath.acos
  f64.const 2
  f64.mul
  local.set $2
  local.get $2
  f64.const 2
  f64.div
  call $~lib/math/NativeMath.sin
  local.set $3
  local.get $3
  global.get $assembly/common/EPSILON
  f64.gt
  if
   local.get $0
   i32.const 0
   local.get $1
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   local.get $3
   f64.div
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.get $3
   f64.div
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   local.get $3
   f64.div
   call $~lib/typedarray/Float64Array#__set
  else
   local.get $0
   i32.const 0
   f64.const 1
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $2
 )
 (func $assembly/quat/getAngle (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  local.get $0
  local.get $1
  i32.const 2
  global.set $~argumentsLength
  global.get $assembly/quat/dot
  i32.load
  call_indirect $0 (type $i32_i32_=>_f64)
  local.set $2
  f64.const 2
  local.get $2
  f64.mul
  local.get $2
  f64.mul
  f64.const 1
  f64.sub
  call $~lib/math/NativeMath.acos
 )
 (func $assembly/quat/rotateX (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  local.get $2
  f64.const 0.5
  f64.mul
  local.set $2
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $2
  call $~lib/math/NativeMath.sin
  local.set $7
  local.get $2
  call $~lib/math/NativeMath.cos
  local.set $8
  local.get $0
  i32.const 0
  local.get $3
  local.get $8
  f64.mul
  local.get $6
  local.get $7
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $8
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $5
  local.get $8
  f64.mul
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $6
  local.get $8
  f64.mul
  local.get $3
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat/rotateY (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  local.get $2
  f64.const 0.5
  f64.mul
  local.set $2
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $2
  call $~lib/math/NativeMath.sin
  local.set $7
  local.get $2
  call $~lib/math/NativeMath.cos
  local.set $8
  local.get $0
  i32.const 0
  local.get $3
  local.get $8
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $8
  f64.mul
  local.get $6
  local.get $7
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $5
  local.get $8
  f64.mul
  local.get $3
  local.get $7
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $6
  local.get $8
  f64.mul
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat/rotateZ (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  local.get $2
  f64.const 0.5
  f64.mul
  local.set $2
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $2
  call $~lib/math/NativeMath.sin
  local.set $7
  local.get $2
  call $~lib/math/NativeMath.cos
  local.set $8
  local.get $0
  i32.const 0
  local.get $3
  local.get $8
  f64.mul
  local.get $4
  local.get $7
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $8
  f64.mul
  local.get $3
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $5
  local.get $8
  f64.mul
  local.get $6
  local.get $7
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $6
  local.get $8
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat/calculateW (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 0
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 1
  local.get $2
  local.get $2
  f64.mul
  f64.sub
  local.get $3
  local.get $3
  f64.mul
  f64.sub
  local.get $4
  local.get $4
  f64.mul
  f64.sub
  local.set $5
  local.get $5
  f64.abs
  local.set $5
  local.get $5
  f64.sqrt
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $~lib/math/NativeMath.exp (param $0 f64) (result f64)
  (local $1 f64)
  (local $2 i64)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 i64)
  (local $7 f64)
  (local $8 i32)
  (local $9 i64)
  (local $10 f64)
  (local $11 i64)
  (local $12 f64)
  (local $13 f64)
  (local $14 i64)
  (local $15 i64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  (local $19 f64)
  (local $20 f64)
  (local $21 f64)
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  block $~lib/util/math/exp_lut|inlined.0 (result f64)
   local.get $0
   local.set $1
   local.get $1
   i64.reinterpret_f64
   local.set $2
   local.get $2
   i64.const 52
   i64.shr_u
   i64.const 2047
   i64.and
   i32.wrap_i64
   local.set $3
   local.get $3
   i32.const 969
   i32.sub
   i32.const 63
   i32.ge_u
   if
    local.get $3
    i32.const 969
    i32.sub
    i32.const -2147483648
    i32.ge_u
    if
     f64.const 1
     br $~lib/util/math/exp_lut|inlined.0
    end
    local.get $3
    i32.const 1033
    i32.ge_u
    if
     local.get $2
     i64.const -4503599627370496
     i64.eq
     if
      f64.const 0
      br $~lib/util/math/exp_lut|inlined.0
     end
     local.get $3
     i32.const 2047
     i32.ge_u
     if
      f64.const 1
      local.get $1
      f64.add
      br $~lib/util/math/exp_lut|inlined.0
     end
     f64.const 0
     f64.const inf
     local.get $2
     i64.const 63
     i64.shr_u
     i64.const 0
     i64.ne
     select
     br $~lib/util/math/exp_lut|inlined.0
    end
    i32.const 0
    local.set $3
   end
   f64.const 184.6649652337873
   local.get $1
   f64.mul
   local.set $4
   local.get $4
   f64.const 6755399441055744
   f64.add
   local.set $5
   local.get $5
   i64.reinterpret_f64
   local.set $6
   local.get $5
   f64.const 6755399441055744
   f64.sub
   local.set $5
   local.get $1
   local.get $5
   f64.const -0.005415212348111709
   f64.mul
   f64.add
   local.get $5
   f64.const -1.2864023111638346e-14
   f64.mul
   f64.add
   local.set $7
   local.get $6
   i64.const 127
   i64.and
   i64.const 1
   i64.shl
   i32.wrap_i64
   local.set $8
   local.get $6
   i64.const 52
   i64.const 7
   i64.sub
   i64.shl
   local.set $9
   i32.const 4496
   local.get $8
   i32.const 3
   i32.shl
   i32.add
   i64.load
   f64.reinterpret_i64
   local.set $10
   i32.const 4496
   local.get $8
   i32.const 3
   i32.shl
   i32.add
   i64.load offset=8
   local.get $9
   i64.add
   local.set $11
   local.get $7
   local.get $7
   f64.mul
   local.set $12
   local.get $10
   local.get $7
   f64.add
   local.get $12
   f64.const 0.49999999999996786
   local.get $7
   f64.const 0.16666666666665886
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.get $12
   local.get $12
   f64.mul
   f64.const 0.0416666808410674
   local.get $7
   f64.const 0.008333335853059549
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.set $13
   local.get $3
   i32.const 0
   i32.eq
   if
    block $~lib/util/math/specialcase|inlined.0 (result f64)
     local.get $13
     local.set $16
     local.get $11
     local.set $15
     local.get $6
     local.set $14
     local.get $14
     i64.const 2147483648
     i64.and
     i64.const 0
     i64.ne
     i32.eqz
     if
      local.get $15
      i64.const 1009
      i64.const 52
      i64.shl
      i64.sub
      local.set $15
      local.get $15
      f64.reinterpret_i64
      local.set $17
      f64.const 5486124068793688683255936e279
      local.get $17
      local.get $17
      local.get $16
      f64.mul
      f64.add
      f64.mul
      br $~lib/util/math/specialcase|inlined.0
     end
     local.get $15
     i64.const 1022
     i64.const 52
     i64.shl
     i64.add
     local.set $15
     local.get $15
     f64.reinterpret_i64
     local.set $17
     local.get $17
     local.get $17
     local.get $16
     f64.mul
     f64.add
     local.set $18
     local.get $18
     f64.abs
     f64.const 1
     f64.lt
     if
      f64.const 1
      local.get $18
      f64.copysign
      local.set $19
      local.get $17
      local.get $18
      f64.sub
      local.get $17
      local.get $16
      f64.mul
      f64.add
      local.set $20
      local.get $19
      local.get $18
      f64.add
      local.set $21
      local.get $19
      local.get $21
      f64.sub
      local.get $18
      f64.add
      local.get $20
      f64.add
      local.set $20
      local.get $21
      local.get $20
      f64.add
      local.get $19
      f64.sub
      local.set $18
      local.get $18
      f64.const 0
      f64.eq
      if
       local.get $15
       i64.const -9223372036854775808
       i64.and
       f64.reinterpret_i64
       local.set $18
      end
     end
     local.get $18
     f64.const 2.2250738585072014e-308
     f64.mul
    end
    br $~lib/util/math/exp_lut|inlined.0
   end
   local.get $11
   f64.reinterpret_i64
   local.set $18
   local.get $18
   local.get $18
   local.get $13
   f64.mul
   f64.add
  end
  return
 )
 (func $assembly/quat/exp (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.get $4
  local.get $4
  f64.mul
  f64.add
  local.set $6
  local.get $6
  f64.sqrt
  local.set $6
  local.get $5
  call $~lib/math/NativeMath.exp
  local.set $7
  local.get $6
  f64.const 0
  f64.gt
  if (result f64)
   local.get $7
   local.get $6
   call $~lib/math/NativeMath.sin
   f64.mul
   local.get $6
   f64.div
  else
   f64.const 0
  end
  local.set $8
  local.get $0
  i32.const 0
  local.get $2
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $3
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $4
  local.get $8
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $7
  local.get $6
  call $~lib/math/NativeMath.cos
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $~lib/math/NativeMath.atan (param $0 f64) (result f64)
  (local $1 i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 i32)
  local.get $0
  i64.reinterpret_f64
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $1
  local.get $0
  local.set $2
  local.get $1
  i32.const 2147483647
  i32.and
  local.set $1
  local.get $1
  i32.const 1141899264
  i32.ge_u
  if
   local.get $0
   local.get $0
   f64.ne
   if
    local.get $0
    return
   end
   f64.const 1.5707963267948966
   f32.const 7.52316384526264e-37
   f64.promote_f32
   f64.add
   local.set $3
   local.get $3
   local.get $2
   f64.copysign
   return
  end
  local.get $1
  i32.const 1071382528
  i32.lt_u
  if
   local.get $1
   i32.const 1044381696
   i32.lt_u
   if
    local.get $0
    return
   end
   i32.const -1
   local.set $4
  else
   local.get $0
   f64.abs
   local.set $0
   local.get $1
   i32.const 1072889856
   i32.lt_u
   if
    local.get $1
    i32.const 1072037888
    i32.lt_u
    if
     i32.const 0
     local.set $4
     f64.const 2
     local.get $0
     f64.mul
     f64.const 1
     f64.sub
     f64.const 2
     local.get $0
     f64.add
     f64.div
     local.set $0
    else
     i32.const 1
     local.set $4
     local.get $0
     f64.const 1
     f64.sub
     local.get $0
     f64.const 1
     f64.add
     f64.div
     local.set $0
    end
   else
    local.get $1
    i32.const 1073971200
    i32.lt_u
    if
     i32.const 2
     local.set $4
     local.get $0
     f64.const 1.5
     f64.sub
     f64.const 1
     f64.const 1.5
     local.get $0
     f64.mul
     f64.add
     f64.div
     local.set $0
    else
     i32.const 3
     local.set $4
     f64.const -1
     local.get $0
     f64.div
     local.set $0
    end
   end
  end
  local.get $0
  local.get $0
  f64.mul
  local.set $3
  local.get $3
  local.get $3
  f64.mul
  local.set $5
  local.get $3
  f64.const 0.3333333333333293
  local.get $5
  f64.const 0.14285714272503466
  local.get $5
  f64.const 0.09090887133436507
  local.get $5
  f64.const 0.06661073137387531
  local.get $5
  f64.const 0.049768779946159324
  local.get $5
  f64.const 0.016285820115365782
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  local.set $6
  local.get $5
  f64.const -0.19999999999876483
  local.get $5
  f64.const -0.11111110405462356
  local.get $5
  f64.const -0.0769187620504483
  local.get $5
  f64.const -0.058335701337905735
  local.get $5
  f64.const -0.036531572744216916
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  f64.add
  f64.mul
  local.set $7
  local.get $0
  local.get $6
  local.get $7
  f64.add
  f64.mul
  local.set $8
  local.get $4
  i32.const 0
  i32.lt_s
  if
   local.get $0
   local.get $8
   f64.sub
   return
  end
  block $break|0
   block $case4|0
    block $case3|0
     block $case2|0
      block $case1|0
       block $case0|0
        local.get $4
        local.set $9
        local.get $9
        i32.const 0
        i32.eq
        br_if $case0|0
        local.get $9
        i32.const 1
        i32.eq
        br_if $case1|0
        local.get $9
        i32.const 2
        i32.eq
        br_if $case2|0
        local.get $9
        i32.const 3
        i32.eq
        br_if $case3|0
        br $case4|0
       end
       f64.const 0.4636476090008061
       local.get $8
       f64.const 2.2698777452961687e-17
       f64.sub
       local.get $0
       f64.sub
       f64.sub
       local.set $3
       br $break|0
      end
      f64.const 0.7853981633974483
      local.get $8
      f64.const 3.061616997868383e-17
      f64.sub
      local.get $0
      f64.sub
      f64.sub
      local.set $3
      br $break|0
     end
     f64.const 0.982793723247329
     local.get $8
     f64.const 1.3903311031230998e-17
     f64.sub
     local.get $0
     f64.sub
     f64.sub
     local.set $3
     br $break|0
    end
    f64.const 1.5707963267948966
    local.get $8
    f64.const 6.123233995736766e-17
    f64.sub
    local.get $0
    f64.sub
    f64.sub
    local.set $3
    br $break|0
   end
   unreachable
  end
  local.get $3
  local.get $2
  f64.copysign
 )
 (func $~lib/math/NativeMath.atan2 (param $0 f64) (param $1 f64) (result f64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  (local $10 f64)
  local.get $1
  local.get $1
  f64.ne
  if (result i32)
   i32.const 1
  else
   local.get $0
   local.get $0
   f64.ne
  end
  if
   local.get $1
   local.get $0
   f64.add
   return
  end
  local.get $1
  i64.reinterpret_f64
  local.set $2
  local.get $2
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $3
  local.get $2
  i32.wrap_i64
  local.set $4
  local.get $0
  i64.reinterpret_f64
  local.set $2
  local.get $2
  i64.const 32
  i64.shr_u
  i32.wrap_i64
  local.set $5
  local.get $2
  i32.wrap_i64
  local.set $6
  local.get $3
  i32.const 1072693248
  i32.sub
  local.get $4
  i32.or
  i32.const 0
  i32.eq
  if
   local.get $0
   call $~lib/math/NativeMath.atan
   return
  end
  local.get $5
  i32.const 31
  i32.shr_u
  i32.const 1
  i32.and
  local.get $3
  i32.const 30
  i32.shr_u
  i32.const 2
  i32.and
  i32.or
  local.set $7
  local.get $3
  i32.const 2147483647
  i32.and
  local.set $3
  local.get $5
  i32.const 2147483647
  i32.and
  local.set $5
  local.get $5
  local.get $6
  i32.or
  i32.const 0
  i32.eq
  if
   block $break|0
    block $case3|0
     block $case2|0
      block $case1|0
       block $case0|0
        local.get $7
        local.set $8
        local.get $8
        i32.const 0
        i32.eq
        br_if $case0|0
        local.get $8
        i32.const 1
        i32.eq
        br_if $case1|0
        local.get $8
        i32.const 2
        i32.eq
        br_if $case2|0
        local.get $8
        i32.const 3
        i32.eq
        br_if $case3|0
        br $break|0
       end
      end
      local.get $0
      return
     end
     global.get $~lib/math/NativeMath.PI
     return
    end
    global.get $~lib/math/NativeMath.PI
    f64.neg
    return
   end
  end
  local.get $3
  local.get $4
  i32.or
  i32.const 0
  i32.eq
  if
   local.get $7
   i32.const 1
   i32.and
   if (result f64)
    global.get $~lib/math/NativeMath.PI
    f64.neg
    f64.const 2
    f64.div
   else
    global.get $~lib/math/NativeMath.PI
    f64.const 2
    f64.div
   end
   return
  end
  local.get $3
  i32.const 2146435072
  i32.eq
  if
   local.get $5
   i32.const 2146435072
   i32.eq
   if
    local.get $7
    i32.const 2
    i32.and
    if (result f64)
     i32.const 3
     f64.convert_i32_s
     global.get $~lib/math/NativeMath.PI
     f64.mul
     f64.const 4
     f64.div
    else
     global.get $~lib/math/NativeMath.PI
     f64.const 4
     f64.div
    end
    local.set $9
    local.get $7
    i32.const 1
    i32.and
    if (result f64)
     local.get $9
     f64.neg
    else
     local.get $9
    end
    return
   else
    local.get $7
    i32.const 2
    i32.and
    if (result f64)
     global.get $~lib/math/NativeMath.PI
    else
     f64.const 0
    end
    local.set $9
    local.get $7
    i32.const 1
    i32.and
    if (result f64)
     local.get $9
     f64.neg
    else
     local.get $9
    end
    return
   end
   unreachable
  end
  local.get $3
  i32.const 64
  i32.const 20
  i32.shl
  i32.add
  local.get $5
  i32.lt_u
  if (result i32)
   i32.const 1
  else
   local.get $5
   i32.const 2146435072
   i32.eq
  end
  if
   local.get $7
   i32.const 1
   i32.and
   if (result f64)
    global.get $~lib/math/NativeMath.PI
    f64.neg
    f64.const 2
    f64.div
   else
    global.get $~lib/math/NativeMath.PI
    f64.const 2
    f64.div
   end
   return
  end
  local.get $7
  i32.const 2
  i32.and
  if (result i32)
   local.get $5
   i32.const 64
   i32.const 20
   i32.shl
   i32.add
   local.get $3
   i32.lt_u
  else
   i32.const 0
  end
  if
   f64.const 0
   local.set $10
  else
   local.get $0
   local.get $1
   f64.div
   f64.abs
   call $~lib/math/NativeMath.atan
   local.set $10
  end
  block $break|1
   block $case3|1
    block $case2|1
     block $case1|1
      block $case0|1
       local.get $7
       local.set $8
       local.get $8
       i32.const 0
       i32.eq
       br_if $case0|1
       local.get $8
       i32.const 1
       i32.eq
       br_if $case1|1
       local.get $8
       i32.const 2
       i32.eq
       br_if $case2|1
       local.get $8
       i32.const 3
       i32.eq
       br_if $case3|1
       br $break|1
      end
      local.get $10
      return
     end
     local.get $10
     f64.neg
     return
    end
    global.get $~lib/math/NativeMath.PI
    local.get $10
    f64.const 1.2246467991473532e-16
    f64.sub
    f64.sub
    return
   end
   local.get $10
   f64.const 1.2246467991473532e-16
   f64.sub
   global.get $~lib/math/NativeMath.PI
   f64.sub
   return
  end
  unreachable
 )
 (func $~lib/math/NativeMath.log (param $0 f64) (result f64)
  (local $1 f64)
  (local $2 i64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 i32)
  (local $13 i64)
  (local $14 i32)
  (local $15 i64)
  (local $16 i64)
  (local $17 f64)
  (local $18 f64)
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  block $~lib/util/math/log_lut|inlined.0 (result f64)
   local.get $0
   local.set $1
   local.get $1
   i64.reinterpret_f64
   local.set $2
   local.get $2
   i64.const 4606619468846596096
   i64.sub
   i64.const 4607473789381378048
   i64.const 4606619468846596096
   i64.sub
   i64.lt_u
   if
    local.get $1
    f64.const 1
    f64.sub
    local.set $3
    local.get $3
    local.get $3
    f64.mul
    local.set $4
    local.get $4
    local.get $3
    f64.mul
    local.set $5
    local.get $5
    f64.const 0.3333333333333352
    local.get $3
    f64.const -0.24999999999998432
    f64.mul
    f64.add
    local.get $4
    f64.const 0.19999999999320328
    f64.mul
    f64.add
    local.get $5
    f64.const -0.16666666669929706
    local.get $3
    f64.const 0.14285715076560868
    f64.mul
    f64.add
    local.get $4
    f64.const -0.12499997863982555
    f64.mul
    f64.add
    local.get $5
    f64.const 0.11110712032936046
    local.get $3
    f64.const -0.10000486757818193
    f64.mul
    f64.add
    local.get $4
    f64.const 0.09181994006195467
    f64.mul
    f64.add
    local.get $5
    f64.const -0.08328363062289341
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    f64.add
    f64.mul
    local.set $6
    local.get $3
    f64.const 134217728
    f64.mul
    local.set $7
    local.get $3
    local.get $7
    f64.add
    local.get $7
    f64.sub
    local.set $8
    local.get $3
    local.get $8
    f64.sub
    local.set $9
    local.get $8
    local.get $8
    f64.mul
    f64.const -0.5
    f64.mul
    local.set $7
    local.get $3
    local.get $7
    f64.add
    local.set $10
    local.get $3
    local.get $10
    f64.sub
    local.get $7
    f64.add
    local.set $11
    local.get $11
    f64.const -0.5
    local.get $9
    f64.mul
    local.get $8
    local.get $3
    f64.add
    f64.mul
    f64.add
    local.set $11
    local.get $6
    local.get $11
    f64.add
    local.get $10
    f64.add
    br $~lib/util/math/log_lut|inlined.0
   end
   local.get $2
   i64.const 48
   i64.shr_u
   i32.wrap_i64
   local.set $12
   local.get $12
   i32.const 16
   i32.sub
   i32.const 32752
   i32.const 16
   i32.sub
   i32.ge_u
   if
    local.get $2
    i64.const 1
    i64.shl
    i64.const 0
    i64.eq
    if
     f64.const -1
     local.get $1
     local.get $1
     f64.mul
     f64.div
     br $~lib/util/math/log_lut|inlined.0
    end
    local.get $2
    f64.const inf
    i64.reinterpret_f64
    i64.eq
    if
     local.get $1
     br $~lib/util/math/log_lut|inlined.0
    end
    local.get $12
    i32.const 32768
    i32.and
    if (result i32)
     i32.const 1
    else
     local.get $12
     i32.const 32752
     i32.and
     i32.const 32752
     i32.eq
    end
    if
     local.get $1
     local.get $1
     f64.sub
     local.get $1
     local.get $1
     f64.sub
     f64.div
     br $~lib/util/math/log_lut|inlined.0
    end
    local.get $1
    f64.const 4503599627370496
    f64.mul
    i64.reinterpret_f64
    local.set $2
    local.get $2
    i64.const 52
    i64.const 52
    i64.shl
    i64.sub
    local.set $2
   end
   local.get $2
   i64.const 4604367669032910848
   i64.sub
   local.set $13
   local.get $13
   i64.const 52
   i64.const 7
   i64.sub
   i64.shr_u
   i64.const 127
   i64.and
   i32.wrap_i64
   local.set $14
   local.get $13
   i64.const 52
   i64.shr_s
   local.set $15
   local.get $2
   local.get $13
   i64.const 4095
   i64.const 52
   i64.shl
   i64.and
   i64.sub
   local.set $16
   i32.const 6544
   local.get $14
   i32.const 1
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load
   local.set $11
   i32.const 6544
   local.get $14
   i32.const 1
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load offset=8
   local.set $10
   local.get $16
   f64.reinterpret_i64
   local.set $9
   i32.const 8592
   local.get $14
   i32.const 1
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load
   local.set $8
   i32.const 8592
   local.get $14
   i32.const 1
   i32.const 3
   i32.add
   i32.shl
   i32.add
   f64.load offset=8
   local.set $7
   local.get $9
   local.get $8
   f64.sub
   local.get $7
   f64.sub
   local.get $11
   f64.mul
   local.set $6
   local.get $15
   f64.convert_i64_s
   local.set $5
   local.get $5
   f64.const 0.6931471805598903
   f64.mul
   local.get $10
   f64.add
   local.set $4
   local.get $4
   local.get $6
   f64.add
   local.set $3
   local.get $4
   local.get $3
   f64.sub
   local.get $6
   f64.add
   local.get $5
   f64.const 5.497923018708371e-14
   f64.mul
   f64.add
   local.set $17
   local.get $6
   local.get $6
   f64.mul
   local.set $18
   local.get $17
   local.get $18
   f64.const -0.5000000000000001
   f64.mul
   f64.add
   local.get $6
   local.get $18
   f64.mul
   f64.const 0.33333333331825593
   local.get $6
   f64.const -0.2499999999622955
   f64.mul
   f64.add
   local.get $18
   f64.const 0.20000304511814496
   local.get $6
   f64.const -0.16667054827627667
   f64.mul
   f64.add
   f64.mul
   f64.add
   f64.mul
   f64.add
   local.get $3
   f64.add
  end
  return
 )
 (func $assembly/quat/ln (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.get $4
  local.get $4
  f64.mul
  f64.add
  local.set $6
  local.get $6
  f64.sqrt
  local.set $6
  local.get $6
  f64.const 0
  f64.gt
  if (result f64)
   local.get $6
   local.get $5
   call $~lib/math/NativeMath.atan2
   local.get $6
   f64.div
  else
   f64.const 0
  end
  local.set $7
  local.get $0
  i32.const 0
  local.get $2
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $3
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $4
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0.5
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.get $4
  local.get $4
  f64.mul
  f64.add
  local.get $5
  local.get $5
  f64.mul
  f64.add
  call $~lib/math/NativeMath.log
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat/pow (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  local.get $0
  local.get $1
  call $assembly/quat/ln
  drop
  local.get $0
  local.get $0
  local.get $2
  i32.const 3
  global.set $~argumentsLength
  global.get $assembly/quat/scale
  i32.load
  call_indirect $0 (type $i32_i32_f64_=>_i32)
  drop
  local.get $0
  local.get $0
  call $assembly/quat/exp
  drop
  local.get $0
 )
 (func $assembly/quat/random (param $0 i32) (result i32)
  (local $1 f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  i32.const 0
  global.set $~argumentsLength
  global.get $assembly/common/RANDOM
  i32.load
  call_indirect $0 (type $none_=>_f64)
  local.set $1
  i32.const 0
  global.set $~argumentsLength
  global.get $assembly/common/RANDOM
  i32.load
  call_indirect $0 (type $none_=>_f64)
  local.set $2
  i32.const 0
  global.set $~argumentsLength
  global.get $assembly/common/RANDOM
  i32.load
  call_indirect $0 (type $none_=>_f64)
  local.set $3
  f64.const 1
  local.get $1
  f64.sub
  local.set $4
  local.get $4
  f64.sqrt
  local.set $4
  local.get $1
  local.set $5
  local.get $5
  f64.sqrt
  local.set $5
  local.get $0
  i32.const 0
  local.get $4
  f64.const 2
  global.get $~lib/math/NativeMath.PI
  f64.mul
  local.get $2
  f64.mul
  call $~lib/math/NativeMath.sin
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  f64.const 2
  global.get $~lib/math/NativeMath.PI
  f64.mul
  local.get $2
  f64.mul
  call $~lib/math/NativeMath.cos
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $5
  f64.const 2
  global.get $~lib/math/NativeMath.PI
  f64.mul
  local.get $3
  f64.mul
  call $~lib/math/NativeMath.sin
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $5
  f64.const 2
  global.get $~lib/math/NativeMath.PI
  f64.mul
  local.get $3
  f64.mul
  call $~lib/math/NativeMath.cos
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat/invert (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.get $4
  local.get $4
  f64.mul
  f64.add
  local.get $5
  local.get $5
  f64.mul
  f64.add
  local.set $6
  local.get $6
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  if (result f64)
   f64.const 1
   local.get $6
   f64.div
  else
   f64.const 0
  end
  local.set $7
  local.get $0
  i32.const 0
  local.get $2
  f64.neg
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $3
  f64.neg
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $4
  f64.neg
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $5
  local.get $7
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat/conjugate (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  local.get $0
  local.get $1
  call $assembly/vec4/dot
  local.set $2
  local.get $2
  f64.abs
  f64.const 1
  global.get $assembly/common/EPSILON
  f64.sub
  f64.ge
 )
 (func $assembly/quat2/fromRotationTranslation (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 0.5
  f64.mul
  local.set $3
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 0.5
  f64.mul
  local.set $4
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 0.5
  f64.mul
  local.set $5
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $0
  i32.const 0
  local.get $6
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $7
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $8
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $9
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $3
  local.get $9
  f64.mul
  local.get $4
  local.get $8
  f64.mul
  f64.add
  local.get $5
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $4
  local.get $9
  f64.mul
  local.get $5
  local.get $6
  f64.mul
  f64.add
  local.get $3
  local.get $8
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $5
  local.get $9
  f64.mul
  local.get $3
  local.get $7
  f64.mul
  f64.add
  local.get $4
  local.get $6
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $3
  f64.neg
  local.get $6
  f64.mul
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  local.get $5
  local.get $8
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/fromTranslation (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 0.5
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 0.5
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 0.5
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/fromRotation (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/copy (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/identity (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (param $7 f64) (param $8 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $6
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $7
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $8
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/getDual (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/setDual (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 4
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/getTranslation (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $6
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $7
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $8
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $0
  i32.const 0
  local.get $2
  local.get $9
  f64.mul
  local.get $5
  local.get $6
  f64.mul
  f64.add
  local.get $3
  local.get $8
  f64.mul
  f64.add
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  f64.const 2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $3
  local.get $9
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.add
  local.get $4
  local.get $6
  f64.mul
  f64.add
  local.get $2
  local.get $8
  f64.mul
  f64.sub
  f64.const 2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $4
  local.get $9
  f64.mul
  local.get $5
  local.get $8
  f64.mul
  f64.add
  local.get $2
  local.get $7
  f64.mul
  f64.add
  local.get $3
  local.get $6
  f64.mul
  f64.sub
  f64.const 2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/translate (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 0.5
  f64.mul
  local.set $7
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 0.5
  f64.mul
  local.set $8
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 0.5
  f64.mul
  local.set $9
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $0
  i32.const 0
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $6
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $6
  local.get $7
  f64.mul
  local.get $4
  local.get $9
  f64.mul
  f64.add
  local.get $5
  local.get $8
  f64.mul
  f64.sub
  local.get $10
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $6
  local.get $8
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.add
  local.get $3
  local.get $9
  f64.mul
  f64.sub
  local.get $11
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $6
  local.get $9
  f64.mul
  local.get $3
  local.get $8
  f64.mul
  f64.add
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  local.get $12
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $3
  f64.neg
  local.get $7
  f64.mul
  local.get $4
  local.get $8
  f64.mul
  f64.sub
  local.get $5
  local.get $9
  f64.mul
  f64.sub
  local.get $13
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/rotateX (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $7
  local.get $6
  f64.mul
  local.get $10
  local.get $3
  f64.mul
  f64.add
  local.get $8
  local.get $5
  f64.mul
  f64.add
  local.get $9
  local.get $4
  f64.mul
  f64.sub
  local.set $11
  local.get $8
  local.get $6
  f64.mul
  local.get $10
  local.get $4
  f64.mul
  f64.add
  local.get $9
  local.get $3
  f64.mul
  f64.add
  local.get $7
  local.get $5
  f64.mul
  f64.sub
  local.set $12
  local.get $9
  local.get $6
  f64.mul
  local.get $10
  local.get $5
  f64.mul
  f64.add
  local.get $7
  local.get $4
  f64.mul
  f64.add
  local.get $8
  local.get $3
  f64.mul
  f64.sub
  local.set $13
  local.get $10
  local.get $6
  f64.mul
  local.get $7
  local.get $3
  f64.mul
  f64.sub
  local.get $8
  local.get $4
  f64.mul
  f64.sub
  local.get $9
  local.get $5
  f64.mul
  f64.sub
  local.set $14
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat/rotateX
  drop
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $0
  i32.const 4
  local.get $11
  local.get $6
  f64.mul
  local.get $14
  local.get $3
  f64.mul
  f64.add
  local.get $12
  local.get $5
  f64.mul
  f64.add
  local.get $13
  local.get $4
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $12
  local.get $6
  f64.mul
  local.get $14
  local.get $4
  f64.mul
  f64.add
  local.get $13
  local.get $3
  f64.mul
  f64.add
  local.get $11
  local.get $5
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $13
  local.get $6
  f64.mul
  local.get $14
  local.get $5
  f64.mul
  f64.add
  local.get $11
  local.get $4
  f64.mul
  f64.add
  local.get $12
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $14
  local.get $6
  f64.mul
  local.get $11
  local.get $3
  f64.mul
  f64.sub
  local.get $12
  local.get $4
  f64.mul
  f64.sub
  local.get $13
  local.get $5
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/rotateY (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $7
  local.get $6
  f64.mul
  local.get $10
  local.get $3
  f64.mul
  f64.add
  local.get $8
  local.get $5
  f64.mul
  f64.add
  local.get $9
  local.get $4
  f64.mul
  f64.sub
  local.set $11
  local.get $8
  local.get $6
  f64.mul
  local.get $10
  local.get $4
  f64.mul
  f64.add
  local.get $9
  local.get $3
  f64.mul
  f64.add
  local.get $7
  local.get $5
  f64.mul
  f64.sub
  local.set $12
  local.get $9
  local.get $6
  f64.mul
  local.get $10
  local.get $5
  f64.mul
  f64.add
  local.get $7
  local.get $4
  f64.mul
  f64.add
  local.get $8
  local.get $3
  f64.mul
  f64.sub
  local.set $13
  local.get $10
  local.get $6
  f64.mul
  local.get $7
  local.get $3
  f64.mul
  f64.sub
  local.get $8
  local.get $4
  f64.mul
  f64.sub
  local.get $9
  local.get $5
  f64.mul
  f64.sub
  local.set $14
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat/rotateY
  drop
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $0
  i32.const 4
  local.get $11
  local.get $6
  f64.mul
  local.get $14
  local.get $3
  f64.mul
  f64.add
  local.get $12
  local.get $5
  f64.mul
  f64.add
  local.get $13
  local.get $4
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $12
  local.get $6
  f64.mul
  local.get $14
  local.get $4
  f64.mul
  f64.add
  local.get $13
  local.get $3
  f64.mul
  f64.add
  local.get $11
  local.get $5
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $13
  local.get $6
  f64.mul
  local.get $14
  local.get $5
  f64.mul
  f64.add
  local.get $11
  local.get $4
  f64.mul
  f64.add
  local.get $12
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $14
  local.get $6
  f64.mul
  local.get $11
  local.get $3
  f64.mul
  f64.sub
  local.get $12
  local.get $4
  f64.mul
  f64.sub
  local.get $13
  local.get $5
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/rotateZ (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $7
  local.get $6
  f64.mul
  local.get $10
  local.get $3
  f64.mul
  f64.add
  local.get $8
  local.get $5
  f64.mul
  f64.add
  local.get $9
  local.get $4
  f64.mul
  f64.sub
  local.set $11
  local.get $8
  local.get $6
  f64.mul
  local.get $10
  local.get $4
  f64.mul
  f64.add
  local.get $9
  local.get $3
  f64.mul
  f64.add
  local.get $7
  local.get $5
  f64.mul
  f64.sub
  local.set $12
  local.get $9
  local.get $6
  f64.mul
  local.get $10
  local.get $5
  f64.mul
  f64.add
  local.get $7
  local.get $4
  f64.mul
  f64.add
  local.get $8
  local.get $3
  f64.mul
  f64.sub
  local.set $13
  local.get $10
  local.get $6
  f64.mul
  local.get $7
  local.get $3
  f64.mul
  f64.sub
  local.get $8
  local.get $4
  f64.mul
  f64.sub
  local.get $9
  local.get $5
  f64.mul
  f64.sub
  local.set $14
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat/rotateZ
  drop
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $0
  i32.const 4
  local.get $11
  local.get $6
  f64.mul
  local.get $14
  local.get $3
  f64.mul
  f64.add
  local.get $12
  local.get $5
  f64.mul
  f64.add
  local.get $13
  local.get $4
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $12
  local.get $6
  f64.mul
  local.get $14
  local.get $4
  f64.mul
  f64.add
  local.get $13
  local.get $3
  f64.mul
  f64.add
  local.get $11
  local.get $5
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $13
  local.get $6
  f64.mul
  local.get $14
  local.get $5
  f64.mul
  f64.add
  local.get $11
  local.get $4
  f64.mul
  f64.add
  local.get $12
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $14
  local.get $6
  f64.mul
  local.get $11
  local.get $3
  f64.mul
  f64.sub
  local.get $12
  local.get $4
  f64.mul
  f64.sub
  local.get $13
  local.get $5
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/rotateByQuatAppend (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $0
  i32.const 0
  local.get $7
  local.get $6
  f64.mul
  local.get $10
  local.get $3
  f64.mul
  f64.add
  local.get $8
  local.get $5
  f64.mul
  f64.add
  local.get $9
  local.get $4
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $8
  local.get $6
  f64.mul
  local.get $10
  local.get $4
  f64.mul
  f64.add
  local.get $9
  local.get $3
  f64.mul
  f64.add
  local.get $7
  local.get $5
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $9
  local.get $6
  f64.mul
  local.get $10
  local.get $5
  f64.mul
  f64.add
  local.get $7
  local.get $4
  f64.mul
  f64.add
  local.get $8
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $10
  local.get $6
  f64.mul
  local.get $7
  local.get $3
  f64.mul
  f64.sub
  local.get $8
  local.get $4
  f64.mul
  f64.sub
  local.get $9
  local.get $5
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $0
  i32.const 4
  local.get $7
  local.get $6
  f64.mul
  local.get $10
  local.get $3
  f64.mul
  f64.add
  local.get $8
  local.get $5
  f64.mul
  f64.add
  local.get $9
  local.get $4
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $8
  local.get $6
  f64.mul
  local.get $10
  local.get $4
  f64.mul
  f64.add
  local.get $9
  local.get $3
  f64.mul
  f64.add
  local.get $7
  local.get $5
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $9
  local.get $6
  f64.mul
  local.get $10
  local.get $5
  f64.mul
  f64.add
  local.get $7
  local.get $4
  f64.mul
  f64.add
  local.get $8
  local.get $3
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $10
  local.get $6
  f64.mul
  local.get $7
  local.get $3
  f64.mul
  f64.sub
  local.get $8
  local.get $4
  f64.mul
  f64.sub
  local.get $9
  local.get $5
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/rotateByQuatPrepend (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $0
  i32.const 0
  local.get $3
  local.get $10
  f64.mul
  local.get $6
  local.get $7
  f64.mul
  f64.add
  local.get $4
  local.get $9
  f64.mul
  f64.add
  local.get $5
  local.get $8
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $10
  f64.mul
  local.get $6
  local.get $8
  f64.mul
  f64.add
  local.get $5
  local.get $7
  f64.mul
  f64.add
  local.get $3
  local.get $9
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $5
  local.get $10
  f64.mul
  local.get $6
  local.get $9
  f64.mul
  f64.add
  local.get $3
  local.get $8
  f64.mul
  f64.add
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $6
  local.get $10
  f64.mul
  local.get $3
  local.get $7
  f64.mul
  f64.sub
  local.get $4
  local.get $8
  f64.mul
  f64.sub
  local.get $5
  local.get $9
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $0
  i32.const 4
  local.get $3
  local.get $10
  f64.mul
  local.get $6
  local.get $7
  f64.mul
  f64.add
  local.get $4
  local.get $9
  f64.mul
  f64.add
  local.get $5
  local.get $8
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $4
  local.get $10
  f64.mul
  local.get $6
  local.get $8
  f64.mul
  f64.add
  local.get $5
  local.get $7
  f64.mul
  f64.add
  local.get $3
  local.get $9
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $5
  local.get $10
  f64.mul
  local.get $6
  local.get $9
  f64.mul
  f64.add
  local.get $3
  local.get $8
  f64.mul
  f64.add
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $6
  local.get $10
  f64.mul
  local.get $3
  local.get $7
  f64.mul
  f64.sub
  local.get $4
  local.get $8
  f64.mul
  f64.sub
  local.get $5
  local.get $9
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/rotateAroundAxis (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  local.get $3
  local.set $4
  local.get $4
  f64.abs
  global.get $assembly/common/EPSILON
  f64.lt
  if
   local.get $0
   local.get $1
   call $assembly/quat2/copy
   return
  end
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $assembly/maths/Maths.hypot3
  local.set $4
  local.get $3
  f64.const 0.5
  f64.mul
  local.set $3
  local.get $3
  call $~lib/math/NativeMath.sin
  local.set $5
  local.get $5
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $4
  f64.div
  local.set $6
  local.get $5
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $4
  f64.div
  local.set $7
  local.get $5
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $4
  f64.div
  local.set $8
  local.get $3
  call $~lib/math/NativeMath.cos
  local.set $9
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $0
  i32.const 0
  local.get $10
  local.get $9
  f64.mul
  local.get $13
  local.get $6
  f64.mul
  f64.add
  local.get $11
  local.get $8
  f64.mul
  f64.add
  local.get $12
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $11
  local.get $9
  f64.mul
  local.get $13
  local.get $7
  f64.mul
  f64.add
  local.get $12
  local.get $6
  f64.mul
  f64.add
  local.get $10
  local.get $8
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $12
  local.get $9
  f64.mul
  local.get $13
  local.get $8
  f64.mul
  f64.add
  local.get $10
  local.get $7
  f64.mul
  f64.add
  local.get $11
  local.get $6
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $13
  local.get $9
  f64.mul
  local.get $10
  local.get $6
  f64.mul
  f64.sub
  local.get $11
  local.get $7
  f64.mul
  f64.sub
  local.get $12
  local.get $8
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $15
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $16
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $17
  local.get $0
  i32.const 4
  local.get $14
  local.get $9
  f64.mul
  local.get $17
  local.get $6
  f64.mul
  f64.add
  local.get $15
  local.get $8
  f64.mul
  f64.add
  local.get $16
  local.get $7
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $15
  local.get $9
  f64.mul
  local.get $17
  local.get $7
  f64.mul
  f64.add
  local.get $16
  local.get $6
  f64.mul
  f64.add
  local.get $14
  local.get $8
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $16
  local.get $9
  f64.mul
  local.get $17
  local.get $8
  f64.mul
  f64.add
  local.get $14
  local.get $7
  f64.mul
  f64.add
  local.get $15
  local.get $6
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $17
  local.get $9
  f64.mul
  local.get $14
  local.get $6
  f64.mul
  f64.sub
  local.get $15
  local.get $7
  f64.mul
  f64.sub
  local.get $16
  local.get $8
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/scale (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/lerp (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 f64)
  i32.const 1
  f64.convert_i32_s
  local.get $3
  f64.sub
  local.set $4
  local.get $1
  local.get $2
  i32.const 2
  global.set $~argumentsLength
  global.get $assembly/quat2/dot
  i32.load
  call_indirect $0 (type $i32_i32_=>_f64)
  f64.const 0
  f64.lt
  if
   local.get $3
   f64.neg
   local.set $3
  end
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/invert (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  local.get $1
  i32.const 1
  global.set $~argumentsLength
  global.get $assembly/quat2/squaredLength
  i32.load
  call_indirect $0 (type $i32_=>_f64)
  local.set $2
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.get $2
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.get $2
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.get $2
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.get $2
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.get $2
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.get $2
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/conjugate (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/quat2/normalize (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  local.get $1
  i32.const 1
  global.set $~argumentsLength
  global.get $assembly/quat2/squaredLength
  i32.load
  call_indirect $0 (type $i32_=>_f64)
  local.set $2
  local.get $2
  f64.const 0
  f64.gt
  if
   local.get $2
   local.set $3
   local.get $3
   f64.sqrt
   local.set $2
   local.get $1
   i32.const 0
   call $~lib/typedarray/Float64Array#__get
   local.get $2
   f64.div
   local.set $3
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.get $2
   f64.div
   local.set $4
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   local.get $2
   f64.div
   local.set $5
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   local.get $2
   f64.div
   local.set $6
   local.get $1
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   local.set $7
   local.get $1
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   local.set $8
   local.get $1
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   local.set $9
   local.get $1
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   local.set $10
   local.get $3
   local.get $7
   f64.mul
   local.get $4
   local.get $8
   f64.mul
   f64.add
   local.get $5
   local.get $9
   f64.mul
   f64.add
   local.get $6
   local.get $10
   f64.mul
   f64.add
   local.set $11
   local.get $0
   i32.const 0
   local.get $3
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   local.get $4
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $5
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 3
   local.get $6
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 4
   local.get $7
   local.get $3
   local.get $11
   f64.mul
   f64.sub
   local.get $2
   f64.div
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 5
   local.get $8
   local.get $4
   local.get $11
   f64.mul
   f64.sub
   local.get $2
   f64.div
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 6
   local.get $9
   local.get $5
   local.get $11
   f64.mul
   f64.sub
   local.get $2
   f64.div
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 7
   local.get $10
   local.get $6
   local.get $11
   f64.mul
   f64.sub
   local.get $2
   f64.div
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
 )
 (func $assembly/quat2/exactEquals (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.eq
  if (result i32)
   local.get $0
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 4
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 5
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 6
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 7
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
 )
 (func $assembly/quat2/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $0
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $0
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $14
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $15
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $16
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $17
  local.get $2
  local.get $10
  f64.sub
  local.set $18
  local.get $18
  f64.abs
  global.get $assembly/common/EPSILON
  f64.const 1
  local.get $2
  local.set $18
  local.get $18
  f64.abs
  local.get $10
  local.set $18
  local.get $18
  f64.abs
  call $assembly/maths/Maths.max
  f64.mul
  f64.le
  if (result i32)
   local.get $3
   local.get $11
   f64.sub
   local.set $18
   local.get $18
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $3
   local.set $18
   local.get $18
   f64.abs
   local.get $11
   local.set $18
   local.get $18
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $4
   local.get $12
   f64.sub
   local.set $18
   local.get $18
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $4
   local.set $18
   local.get $18
   f64.abs
   local.get $12
   local.set $18
   local.get $18
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $5
   local.get $13
   f64.sub
   local.set $18
   local.get $18
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $5
   local.set $18
   local.get $18
   f64.abs
   local.get $13
   local.set $18
   local.get $18
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $6
   local.get $14
   f64.sub
   local.set $18
   local.get $18
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $6
   local.set $18
   local.get $18
   f64.abs
   local.get $14
   local.set $18
   local.get $18
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $7
   local.get $15
   f64.sub
   local.set $18
   local.get $18
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $7
   local.set $18
   local.get $18
   f64.abs
   local.get $15
   local.set $18
   local.get $18
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $8
   local.get $16
   f64.sub
   local.set $18
   local.get $18
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $8
   local.set $18
   local.get $18
   f64.abs
   local.get $16
   local.set $18
   local.get $18
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $9
   local.get $17
   f64.sub
   local.set $18
   local.get $18
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $9
   local.set $18
   local.get $18
   f64.abs
   local.get $17
   local.set $18
   local.get $18
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
 )
 (func $assembly/vec2/copy (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/set (param $0 i32) (param $1 f64) (param $2 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/ceil (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.ceil
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.ceil
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/floor (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.floor
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.floor
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/min (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.min
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.min
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/max (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.max
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.max
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/round (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.const 0.5
  f64.add
  f64.floor
  local.get $2
  f64.copysign
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.const 0.5
  f64.add
  f64.floor
  local.get $2
  f64.copysign
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/scale (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/scaleAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/negate (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/inverse (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 1
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/normalize (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.set $4
  local.get $4
  f64.const 0
  f64.gt
  if
   f64.const 1
   local.get $4
   local.set $5
   local.get $5
   f64.sqrt
   f64.div
   local.set $4
  end
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/dot (param $0 i32) (param $1 i32) (result f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
 )
 (func $assembly/vec2/cross (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.sub
  local.set $3
  local.get $0
  i32.const 0
  local.get $0
  local.tee $4
  i32.const 1
  local.tee $5
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $4
  local.get $5
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/lerp (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 f64)
  (local $5 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $0
  i32.const 0
  local.get $4
  local.get $3
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.sub
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $5
  local.get $3
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.sub
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/random (param $0 i32) (param $1 f64) (result i32)
  (local $2 f64)
  local.get $1
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  if (result f64)
   local.get $1
  else
   f64.const 1
  end
  local.set $1
  i32.const 0
  global.set $~argumentsLength
  global.get $assembly/common/RANDOM
  i32.load
  call_indirect $0 (type $none_=>_f64)
  f64.const 2
  f64.mul
  global.get $~lib/math/NativeMath.PI
  f64.mul
  local.set $2
  local.get $0
  i32.const 0
  local.get $2
  call $~lib/math/NativeMath.cos
  local.get $1
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/math/NativeMath.sin
  local.get $1
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/transformMat2 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 0
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/transformMat2d (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 0
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/transformMat3 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 0
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/transformMat4 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 0
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/rotate (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $4
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  local.set $5
  local.get $3
  call $~lib/math/NativeMath.sin
  local.set $6
  local.get $3
  call $~lib/math/NativeMath.cos
  local.set $7
  local.get $0
  i32.const 0
  local.get $4
  local.get $7
  f64.mul
  local.get $5
  local.get $6
  f64.mul
  f64.sub
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $4
  local.get $6
  f64.mul
  local.get $5
  local.get $7
  f64.mul
  f64.add
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/angle (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.set $6
  local.get $6
  f64.sqrt
  local.get $4
  local.get $4
  f64.mul
  local.get $5
  local.get $5
  f64.mul
  f64.add
  local.set $6
  local.get $6
  f64.sqrt
  f64.mul
  local.set $6
  local.get $6
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  if (result f64)
   local.get $2
   local.get $4
   f64.mul
   local.get $3
   local.get $5
   f64.mul
   f64.add
   local.get $6
   f64.div
  else
   local.get $6
  end
  local.set $7
  local.get $7
  local.set $9
  f64.const -1
  local.set $8
  local.get $9
  local.get $8
  f64.max
  local.set $9
  f64.const 1
  local.set $8
  local.get $9
  local.get $8
  f64.min
  call $~lib/math/NativeMath.acos
 )
 (func $assembly/vec2/zero (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec2/exactEquals (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.eq
  if (result i32)
   local.get $0
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
 )
 (func $assembly/vec2/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  local.get $4
  f64.sub
  local.set $6
  local.get $6
  f64.abs
  global.get $assembly/common/EPSILON
  f64.const 1
  local.get $2
  local.set $6
  local.get $6
  f64.abs
  local.get $4
  local.set $6
  local.get $6
  f64.abs
  call $assembly/maths/Maths.max
  f64.mul
  f64.le
  if (result i32)
   local.get $3
   local.get $5
   f64.sub
   local.set $6
   local.get $6
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $3
   local.set $6
   local.get $6
   f64.abs
   local.get $5
   local.set $6
   local.get $6
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
 )
 (func $assembly/vec3/copy (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/ceil (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.ceil
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.ceil
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.ceil
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/floor (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.floor
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.floor
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.floor
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/min (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.min
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.min
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.min
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/max (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.max
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.max
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.max
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/round (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.const 0.5
  f64.add
  f64.floor
  local.get $2
  f64.copysign
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.const 0.5
  f64.add
  f64.floor
  local.get $2
  f64.copysign
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.const 0.5
  f64.add
  f64.floor
  local.get $2
  f64.copysign
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/scale (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/scaleAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/negate (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/inverse (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 1
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 1
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/lerp (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $0
  i32.const 0
  local.get $4
  local.get $3
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.sub
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $5
  local.get $3
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.sub
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $6
  local.get $3
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $6
  f64.sub
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/slerp (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  local.get $1
  local.get $2
  call $assembly/vec3/dot
  local.set $5
  f64.const -1
  local.set $4
  local.get $5
  local.get $4
  f64.max
  local.set $5
  f64.const 1
  local.set $4
  local.get $5
  local.get $4
  f64.min
  call $~lib/math/NativeMath.acos
  local.set $5
  local.get $5
  call $~lib/math/NativeMath.sin
  local.set $4
  f64.const 1
  local.get $3
  f64.sub
  local.get $5
  f64.mul
  call $~lib/math/NativeMath.sin
  local.get $4
  f64.div
  local.set $6
  local.get $3
  local.get $5
  f64.mul
  call $~lib/math/NativeMath.sin
  local.get $4
  f64.div
  local.set $7
  local.get $0
  i32.const 0
  local.get $6
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $7
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $6
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $7
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $6
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $7
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/hermite (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f64) (result i32)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  local.get $5
  local.get $5
  f64.mul
  local.set $6
  local.get $6
  f64.const 2
  local.get $5
  f64.mul
  f64.const 3
  f64.sub
  f64.mul
  f64.const 1
  f64.add
  local.set $7
  local.get $6
  local.get $5
  f64.const 2
  f64.sub
  f64.mul
  local.get $5
  f64.add
  local.set $8
  local.get $6
  local.get $5
  f64.const 1
  f64.sub
  f64.mul
  local.set $9
  local.get $6
  f64.const 3
  f64.const 2
  local.get $5
  f64.mul
  f64.sub
  f64.mul
  local.set $10
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $7
  f64.mul
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $8
  f64.mul
  f64.add
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $9
  f64.mul
  f64.add
  local.get $4
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $10
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $7
  f64.mul
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $8
  f64.mul
  f64.add
  local.get $3
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $9
  f64.mul
  f64.add
  local.get $4
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $10
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $7
  f64.mul
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $8
  f64.mul
  f64.add
  local.get $3
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $9
  f64.mul
  f64.add
  local.get $4
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $10
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/bezier (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f64) (result i32)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  i32.const 1
  f64.convert_i32_s
  local.get $5
  f64.sub
  local.set $6
  local.get $6
  local.get $6
  f64.mul
  local.set $7
  local.get $5
  local.get $5
  f64.mul
  local.set $8
  local.get $7
  local.get $6
  f64.mul
  local.set $9
  i32.const 3
  f64.convert_i32_s
  local.get $5
  f64.mul
  local.get $7
  f64.mul
  local.set $10
  i32.const 3
  f64.convert_i32_s
  local.get $8
  f64.mul
  local.get $6
  f64.mul
  local.set $11
  local.get $8
  local.get $5
  f64.mul
  local.set $12
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $9
  f64.mul
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $10
  f64.mul
  f64.add
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $11
  f64.mul
  f64.add
  local.get $4
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $12
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $9
  f64.mul
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $10
  f64.mul
  f64.add
  local.get $3
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $11
  f64.mul
  f64.add
  local.get $4
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $12
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $9
  f64.mul
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $10
  f64.mul
  f64.add
  local.get $3
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $11
  f64.mul
  f64.add
  local.get $4
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $12
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/random (param $0 i32) (param $1 f64) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  local.get $1
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  if (result f64)
   local.get $1
  else
   f64.const 1
  end
  local.set $1
  i32.const 0
  global.set $~argumentsLength
  global.get $assembly/common/RANDOM
  i32.load
  call_indirect $0 (type $none_=>_f64)
  f64.const 2
  f64.mul
  global.get $~lib/math/NativeMath.PI
  f64.mul
  local.set $2
  i32.const 0
  global.set $~argumentsLength
  global.get $assembly/common/RANDOM
  i32.load
  call_indirect $0 (type $none_=>_f64)
  f64.const 2
  f64.mul
  f64.const 1
  f64.sub
  local.set $3
  f64.const 1
  local.get $3
  local.get $3
  f64.mul
  f64.sub
  local.set $4
  local.get $4
  f64.sqrt
  local.get $1
  f64.mul
  local.set $4
  local.get $0
  i32.const 0
  local.get $2
  call $~lib/math/NativeMath.cos
  local.get $4
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  call $~lib/math/NativeMath.sin
  local.get $4
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  local.get $1
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/transformMat4 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  f64.add
  local.get $2
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  f64.add
  local.set $6
  local.get $6
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  if (result f64)
   local.get $6
  else
   f64.const 1
  end
  local.set $6
  local.get $0
  i32.const 0
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  f64.add
  local.get $2
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  f64.add
  local.get $6
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  f64.add
  local.get $2
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  f64.add
  local.get $6
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  f64.add
  local.get $2
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  f64.add
  local.get $6
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/transformMat3 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $0
  i32.const 0
  local.get $3
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $4
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
  local.get $5
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $3
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $4
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
  local.get $5
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $3
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $4
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
  local.get $5
  local.get $2
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/transformQuat (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $4
  local.get $9
  f64.mul
  local.get $5
  local.get $8
  f64.mul
  f64.sub
  local.set $10
  local.get $5
  local.get $7
  f64.mul
  local.get $3
  local.get $9
  f64.mul
  f64.sub
  local.set $11
  local.get $3
  local.get $8
  f64.mul
  local.get $4
  local.get $7
  f64.mul
  f64.sub
  local.set $12
  local.get $4
  local.get $12
  f64.mul
  local.get $5
  local.get $11
  f64.mul
  f64.sub
  local.set $13
  local.get $5
  local.get $10
  f64.mul
  local.get $3
  local.get $12
  f64.mul
  f64.sub
  local.set $14
  local.get $3
  local.get $11
  f64.mul
  local.get $4
  local.get $10
  f64.mul
  f64.sub
  local.set $15
  local.get $6
  f64.const 2
  f64.mul
  local.set $16
  local.get $10
  local.get $16
  f64.mul
  local.set $10
  local.get $11
  local.get $16
  f64.mul
  local.set $11
  local.get $12
  local.get $16
  f64.mul
  local.set $12
  local.get $13
  f64.const 2
  f64.mul
  local.set $13
  local.get $14
  f64.const 2
  f64.mul
  local.set $14
  local.get $15
  f64.const 2
  f64.mul
  local.set $15
  local.get $0
  i32.const 0
  local.get $7
  local.get $10
  f64.add
  local.get $13
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $8
  local.get $11
  f64.add
  local.get $14
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $9
  local.get $12
  f64.add
  local.get $15
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $~lib/rt/itcms/__renew (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.const 20
  i32.sub
  local.set $2
  local.get $1
  local.get $2
  i32.load
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/Object#set:rtSize
   local.get $0
   return
  end
  local.get $1
  local.get $2
  i32.load offset=12
  call $~lib/rt/itcms/__new
  local.set $3
  local.get $3
  local.get $0
  local.get $1
  local.tee $4
  local.get $2
  i32.load offset=16
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_u
  select
  call $~lib/memory/memory.copy
  local.get $3
 )
 (func $~lib/array/ensureSize (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.load offset=8
  local.set $3
  local.get $1
  local.get $3
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 1073741820
   local.get $2
   i32.shr_u
   i32.gt_u
   if
    i32.const 592
    i32.const 11120
    i32.const 14
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load
   local.set $4
   local.get $1
   local.get $2
   i32.shl
   local.set $5
   local.get $4
   local.get $5
   call $~lib/rt/itcms/__renew
   local.set $6
   local.get $6
   local.get $3
   i32.add
   i32.const 0
   local.get $5
   local.get $3
   i32.sub
   call $~lib/memory/memory.fill
   local.get $6
   local.get $4
   i32.ne
   if
    local.get $0
    local.get $6
    i32.store
    local.get $0
    local.get $6
    i32.store offset=4
    local.get $0
    local.get $6
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   local.get $0
   local.get $5
   i32.store offset=8
  end
 )
 (func $~lib/array/Array<f64>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<f64>#__uset (param $0 i32) (param $1 i32) (param $2 f64)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  local.get $2
  f64.store
  i32.const 0
  drop
 )
 (func $~lib/array/Array<f64>#__set (param $0 i32) (param $1 i32) (param $2 f64)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 144
    i32.const 11120
    i32.const 108
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.const 3
   call $~lib/array/ensureSize
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   call $~lib/array/Array<f64>#set:length_
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<f64>#__uset
 )
 (func $~lib/array/Array<f64>#__get (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 144
   i32.const 11120
   i32.const 92
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load
  local.set $2
  i32.const 0
  drop
  local.get $2
 )
 (func $assembly/vec3/angle (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $2
  local.get $2
  f64.mul
  local.get $3
  local.get $3
  f64.mul
  f64.add
  local.get $4
  local.get $4
  f64.mul
  f64.add
  local.set $8
  local.get $8
  f64.sqrt
  local.set $8
  local.get $5
  local.get $5
  f64.mul
  local.get $6
  local.get $6
  f64.mul
  f64.add
  local.get $7
  local.get $7
  f64.mul
  f64.add
  local.set $9
  local.get $9
  f64.sqrt
  local.set $9
  local.get $8
  local.get $9
  f64.mul
  local.set $10
  local.get $10
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  if (result f64)
   local.get $0
   local.get $1
   call $assembly/vec3/dot
   local.get $10
   f64.div
  else
   local.get $10
  end
  local.set $11
  local.get $11
  local.set $13
  f64.const -1
  local.set $12
  local.get $13
  local.get $12
  f64.max
  local.set $13
  f64.const 1
  local.set $12
  local.get $13
  local.get $12
  f64.min
  call $~lib/math/NativeMath.acos
 )
 (func $assembly/vec3/zero (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec3/exactEquals (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.eq
  if (result i32)
   local.get $0
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   local.get $1
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   f64.eq
  else
   i32.const 0
  end
 )
 (func $assembly/vec3/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $2
  local.get $5
  f64.sub
  local.set $8
  local.get $8
  f64.abs
  global.get $assembly/common/EPSILON
  f64.const 1
  local.get $2
  local.set $8
  local.get $8
  f64.abs
  local.get $5
  local.set $8
  local.get $8
  f64.abs
  call $assembly/maths/Maths.max
  f64.mul
  f64.le
  if (result i32)
   local.get $3
   local.get $6
   f64.sub
   local.set $8
   local.get $8
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $3
   local.set $8
   local.get $8
   f64.abs
   local.get $6
   local.set $8
   local.get $8
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $4
   local.get $7
   f64.sub
   local.set $8
   local.get $8
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $4
   local.set $8
   local.get $8
   f64.abs
   local.get $7
   local.set $8
   local.get $8
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
 )
 (func $assembly/vec4/ceil (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.ceil
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.ceil
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.ceil
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.ceil
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/floor (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.floor
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.floor
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.floor
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.floor
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/min (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.min
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.min
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.min
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.min
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/max (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.max
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.max
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.max
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $4
  local.get $3
  f64.max
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/round (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.const 0.5
  f64.add
  f64.floor
  local.get $2
  f64.copysign
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.const 0.5
  f64.add
  f64.floor
  local.get $2
  f64.copysign
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.const 0.5
  f64.add
  f64.floor
  local.get $2
  f64.copysign
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $2
  f64.const 0.5
  f64.add
  f64.floor
  local.get $2
  f64.copysign
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/scaleAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/negate (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/inverse (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 1
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 1
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 1
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/cross (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.sub
  local.set $4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.sub
  local.set $5
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.sub
  local.set $6
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.sub
  local.set $7
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.sub
  local.set $8
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.sub
  local.set $9
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $11
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $12
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $13
  local.get $0
  i32.const 0
  local.get $11
  local.get $9
  f64.mul
  local.get $12
  local.get $8
  f64.mul
  f64.sub
  local.get $13
  local.get $7
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $10
  local.get $9
  f64.mul
  f64.neg
  local.get $12
  local.get $6
  f64.mul
  f64.add
  local.get $13
  local.get $5
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $10
  local.get $8
  f64.mul
  local.get $11
  local.get $6
  f64.mul
  f64.sub
  local.get $13
  local.get $4
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $10
  local.get $7
  f64.mul
  f64.neg
  local.get $11
  local.get $5
  f64.mul
  f64.add
  local.get $12
  local.get $4
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/random (param $0 i32) (param $1 f64) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 i32)
  (local $9 f64)
  (local $10 f64)
  local.get $1
  i64.reinterpret_f64
  i64.const 1
  i64.shl
  i64.const 2
  i64.sub
  i64.const -9007199254740994
  i64.le_u
  if (result f64)
   local.get $1
  else
   f64.const 1
  end
  local.set $1
  loop $do-continue|0
   i32.const 0
   global.set $~argumentsLength
   global.get $assembly/common/RANDOM
   i32.load
   call_indirect $0 (type $none_=>_f64)
   f64.const 2
   f64.mul
   f64.const 1
   f64.sub
   local.set $2
   i32.const 0
   global.set $~argumentsLength
   global.get $assembly/common/RANDOM
   i32.load
   call_indirect $0 (type $none_=>_f64)
   f64.const 2
   f64.mul
   f64.const 1
   f64.sub
   local.set $3
   local.get $2
   local.get $2
   f64.mul
   local.get $3
   local.get $3
   f64.mul
   f64.add
   local.set $6
   local.get $6
   f64.const 1
   f64.ge
   local.set $8
   local.get $8
   br_if $do-continue|0
  end
  loop $do-continue|1
   i32.const 0
   global.set $~argumentsLength
   global.get $assembly/common/RANDOM
   i32.load
   call_indirect $0 (type $none_=>_f64)
   f64.const 2
   f64.mul
   f64.const 1
   f64.sub
   local.set $4
   i32.const 0
   global.set $~argumentsLength
   global.get $assembly/common/RANDOM
   i32.load
   call_indirect $0 (type $none_=>_f64)
   f64.const 2
   f64.mul
   f64.const 1
   f64.sub
   local.set $5
   local.get $4
   local.get $4
   f64.mul
   local.get $5
   local.get $5
   f64.mul
   f64.add
   local.set $7
   local.get $7
   f64.const 1
   f64.ge
   local.set $8
   local.get $8
   br_if $do-continue|1
  end
  f64.const 1
  local.get $6
  f64.sub
  local.get $7
  f64.div
  local.set $9
  local.get $9
  f64.sqrt
  local.set $10
  local.get $0
  i32.const 0
  local.get $1
  local.get $2
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $1
  local.get $3
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $1
  local.get $4
  f64.mul
  local.get $10
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  local.get $5
  f64.mul
  local.get $10
  f64.mul
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/transformMat4 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $0
  i32.const 0
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  f64.add
  local.get $2
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  local.get $6
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  f64.add
  local.get $2
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  local.get $6
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  f64.add
  local.get $2
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  local.get $6
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.get $2
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  f64.add
  local.get $2
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  f64.add
  local.get $2
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  local.get $6
  f64.mul
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/transformQuat (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $2
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $9
  local.get $3
  f64.mul
  local.get $7
  local.get $5
  f64.mul
  f64.add
  local.get $8
  local.get $4
  f64.mul
  f64.sub
  local.set $10
  local.get $9
  local.get $4
  f64.mul
  local.get $8
  local.get $3
  f64.mul
  f64.add
  local.get $6
  local.get $5
  f64.mul
  f64.sub
  local.set $11
  local.get $9
  local.get $5
  f64.mul
  local.get $6
  local.get $4
  f64.mul
  f64.add
  local.get $7
  local.get $3
  f64.mul
  f64.sub
  local.set $12
  local.get $6
  f64.neg
  local.get $3
  f64.mul
  local.get $7
  local.get $4
  f64.mul
  f64.sub
  local.get $8
  local.get $5
  f64.mul
  f64.sub
  local.set $13
  local.get $0
  i32.const 0
  local.get $10
  local.get $9
  f64.mul
  local.get $13
  local.get $6
  f64.neg
  f64.mul
  f64.add
  local.get $11
  local.get $8
  f64.neg
  f64.mul
  f64.add
  local.get $12
  local.get $7
  f64.neg
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $11
  local.get $9
  f64.mul
  local.get $13
  local.get $7
  f64.neg
  f64.mul
  f64.add
  local.get $12
  local.get $6
  f64.neg
  f64.mul
  f64.add
  local.get $10
  local.get $8
  f64.neg
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $12
  local.get $9
  f64.mul
  local.get $13
  local.get $8
  f64.neg
  f64.mul
  f64.add
  local.get $10
  local.get $7
  f64.neg
  f64.mul
  f64.add
  local.get $11
  local.get $6
  f64.neg
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/zero (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 0
  call $~lib/typedarray/Float64Array#__set
  local.get $0
 )
 (func $assembly/vec4/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $2
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $3
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $4
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $5
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $2
  local.get $6
  f64.sub
  local.set $10
  local.get $10
  f64.abs
  global.get $assembly/common/EPSILON
  f64.const 1
  local.get $2
  local.set $10
  local.get $10
  f64.abs
  local.get $6
  local.set $10
  local.get $10
  f64.abs
  call $assembly/maths/Maths.max
  f64.mul
  f64.le
  if (result i32)
   local.get $3
   local.get $7
   f64.sub
   local.set $10
   local.get $10
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $3
   local.set $10
   local.get $10
   f64.abs
   local.get $7
   local.set $10
   local.get $10
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $4
   local.get $8
   f64.sub
   local.set $10
   local.get $10
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $4
   local.set $10
   local.get $10
   f64.abs
   local.get $8
   local.set $10
   local.get $10
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
  if (result i32)
   local.get $5
   local.get $9
   f64.sub
   local.set $10
   local.get $10
   f64.abs
   global.get $assembly/common/EPSILON
   f64.const 1
   local.get $5
   local.set $10
   local.get $10
   f64.abs
   local.get $9
   local.set $10
   local.get $10
   f64.abs
   call $assembly/maths/Maths.max
   f64.mul
   f64.le
  else
   i32.const 0
  end
 )
 (func $~lib/rt/itcms/__pin (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  if
   local.get $0
   i32.const 20
   i32.sub
   local.set $1
   local.get $1
   call $~lib/rt/itcms/Object#get:color
   i32.const 3
   i32.eq
   if
    i32.const 11360
    i32.const 768
    i32.const 337
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   local.get $1
   global.get $~lib/rt/itcms/pinSpace
   i32.const 3
   call $~lib/rt/itcms/Object#linkTo
  end
  local.get $0
 )
 (func $~lib/rt/itcms/__unpin (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  local.set $1
  local.get $1
  call $~lib/rt/itcms/Object#get:color
  i32.const 3
  i32.ne
  if
   i32.const 11424
   i32.const 768
   i32.const 351
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/state
  i32.const 1
  i32.eq
  if
   local.get $1
   call $~lib/rt/itcms/Object#makeGray
  else
   local.get $1
   call $~lib/rt/itcms/Object#unlink
   local.get $1
   global.get $~lib/rt/itcms/fromSpace
   global.get $~lib/rt/itcms/white
   call $~lib/rt/itcms/Object#linkTo
  end
 )
 (func $~lib/rt/itcms/__collect
  (local $0 i32)
  i32.const 0
  drop
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    i32.const 0
    i32.ne
    local.set $0
    local.get $0
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.ne
   local.set $0
   local.get $0
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i64.const 200
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
  i32.const 0
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
  drop
 )
 (func $~lib/rt/__visit_globals (param $0 i32)
  (local $1 i32)
  i32.const 144
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 592
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 704
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 11360
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 11424
  local.get $0
  call $~lib/rt/itcms/__visit
  global.get $assembly/common/ANGLE_ORDER
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/quat/tmpvec3
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/quat/xUnitVec3
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/quat/yUnitVec3
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/quat/temp1
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/quat/temp2
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/quat/matr
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/vec2/vec
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/vec3/vec
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $assembly/vec4/vec
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/typedarray/Int8Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint8Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Int16Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint16Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Int32Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint32Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Float32Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Float64Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Int64Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint64Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/array/Array<i32>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#__visit
 )
 (func $~lib/array/Array<i64>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i64>#__visit
 )
 (func $~lib/array/Array<~lib/string/String>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#__visit
 )
 (func $~lib/array/Array<bool>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<bool>#__visit
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i32>>#__visit
 )
 (func $~lib/array/Array<~lib/array/Array<i64>>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/array/Array<i64>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i64>>#__visit
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/string/String>>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/string/String>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<~lib/string/String>>#__visit
 )
 (func $~lib/array/Array<~lib/array/Array<bool>>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/array/Array<bool>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<bool>>#__visit
 )
 (func $~lib/array/Array<f64>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<f64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<f64>#__visit
 )
 (func $~lib/function/Function<%28%29=>f64>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28%29=>f64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28%29=>f64>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>f64>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>f64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Cf64%29=>f64>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>f64>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>f64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>f64>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%29=>f64>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%29=>f64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Float64Array%29=>f64>#__visit
 )
 (func $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2Ci32%2Ci32%2Ci32%2C%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cassembly/imports/IArguments%29=>void%2Cassembly/imports/IArguments%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2Ci32%2Ci32%2Ci32%2C%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cassembly/imports/IArguments%29=>void%2Cassembly/imports/IArguments%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2Ci32%2Ci32%2Ci32%2C%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cassembly/imports/IArguments%29=>void%2Cassembly/imports/IArguments%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2Ci32%2Ci32%2Ci32%2C%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cassembly/imports/IArguments%29=>void%2Cassembly/imports/IArguments%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2Ci32%2Ci32%2Ci32%2C%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cassembly/imports/IArguments%29=>void%2Cassembly/imports/IArguments%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Float64Array%2Ci32%2Ci32%2Ci32%2C%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cassembly/imports/IArguments%29=>void%2Cassembly/imports/IArguments%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2Cf64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2Cf64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Float64Array%2Cf64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>bool>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2Cf64%2Cf64%2Cf64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/typedarray/Float64Array%2Cf64%2Cf64%2Cf64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/typedarray/Float64Array%2Cf64%2Cf64%2Cf64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/array/Array<~lib/typedarray/Float64Array>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/typedarray/Float64Array>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/typedarray/Float64Array>#__visit
 )
 (func $~lib/rt/__visit_members (param $0 i32) (param $1 i32)
  block $invalid
   block $assembly/mat4/Fov
    block $~lib/array/Array<~lib/typedarray/Float64Array>
     block $~lib/function/Function<%28~lib/typedarray/Float64Array%2Cf64%2Cf64%2Cf64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>
      block $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>
       block $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>
        block $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>
         block $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>
          block $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>
           block $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>bool>
            block $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>
             block $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>
              block $~lib/function/Function<%28~lib/typedarray/Float64Array%2Cf64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>
               block $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>
                block $~lib/function/Function<%28f64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>
                 block $~lib/function/Function<%28~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>
                  block $~lib/function/Function<%28~lib/typedarray/Float64Array%2Ci32%2Ci32%2Ci32%2C%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cassembly/imports/IArguments%29=>void%2Cassembly/imports/IArguments%29=>~lib/typedarray/Float64Array>
                   block $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2Ci32%2Ci32%2Ci32%2C%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cassembly/imports/IArguments%29=>void%2Cassembly/imports/IArguments%29=>~lib/typedarray/Float64Array>
                    block $assembly/imports/IArguments
                     block $~lib/function/Function<%28~lib/typedarray/Float64Array%29=>f64>
                      block $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>f64>
                       block $~lib/function/Function<%28f64%2Cf64%29=>f64>
                        block $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>
                         block $~lib/function/Function<%28%29=>f64>
                          block $~lib/array/Array<f64>
                           block $~lib/array/Array<~lib/array/Array<bool>>
                            block $~lib/array/Array<~lib/array/Array<~lib/string/String>>
                             block $~lib/array/Array<~lib/array/Array<i64>>
                              block $~lib/array/Array<~lib/array/Array<i32>>
                               block $~lib/array/Array<bool>
                                block $~lib/array/Array<~lib/string/String>
                                 block $~lib/array/Array<i64>
                                  block $~lib/array/Array<i32>
                                   block $~lib/typedarray/Uint64Array
                                    block $~lib/typedarray/Int64Array
                                     block $~lib/typedarray/Float64Array
                                      block $~lib/typedarray/Float32Array
                                       block $~lib/typedarray/Uint32Array
                                        block $~lib/typedarray/Int32Array
                                         block $~lib/typedarray/Uint16Array
                                          block $~lib/typedarray/Int16Array
                                           block $~lib/typedarray/Uint8Array
                                            block $~lib/typedarray/Int8Array
                                             block $~lib/arraybuffer/ArrayBufferView
                                              block $~lib/string/String
                                               block $~lib/arraybuffer/ArrayBuffer
                                                local.get $0
                                                i32.const 8
                                                i32.sub
                                                i32.load
                                                br_table $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $~lib/typedarray/Int8Array $~lib/typedarray/Uint8Array $~lib/typedarray/Int16Array $~lib/typedarray/Uint16Array $~lib/typedarray/Int32Array $~lib/typedarray/Uint32Array $~lib/typedarray/Float32Array $~lib/typedarray/Float64Array $~lib/typedarray/Int64Array $~lib/typedarray/Uint64Array $~lib/array/Array<i32> $~lib/array/Array<i64> $~lib/array/Array<~lib/string/String> $~lib/array/Array<bool> $~lib/array/Array<~lib/array/Array<i32>> $~lib/array/Array<~lib/array/Array<i64>> $~lib/array/Array<~lib/array/Array<~lib/string/String>> $~lib/array/Array<~lib/array/Array<bool>> $~lib/array/Array<f64> $~lib/function/Function<%28%29=>f64> $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28f64%2Cf64%29=>f64> $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>f64> $~lib/function/Function<%28~lib/typedarray/Float64Array%29=>f64> $assembly/imports/IArguments $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2Ci32%2Ci32%2Ci32%2C%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cassembly/imports/IArguments%29=>void%2Cassembly/imports/IArguments%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28~lib/typedarray/Float64Array%2Ci32%2Ci32%2Ci32%2C%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cassembly/imports/IArguments%29=>void%2Cassembly/imports/IArguments%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28f64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28~lib/typedarray/Float64Array%2Cf64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>bool> $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array> $~lib/function/Function<%28~lib/typedarray/Float64Array%2Cf64%2Cf64%2Cf64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array> $~lib/array/Array<~lib/typedarray/Float64Array> $assembly/mat4/Fov $invalid
                                               end
                                               return
                                              end
                                              return
                                             end
                                             local.get $0
                                             local.get $1
                                             call $~lib/arraybuffer/ArrayBufferView~visit
                                             return
                                            end
                                            local.get $0
                                            local.get $1
                                            call $~lib/typedarray/Int8Array~visit
                                            return
                                           end
                                           local.get $0
                                           local.get $1
                                           call $~lib/typedarray/Uint8Array~visit
                                           return
                                          end
                                          local.get $0
                                          local.get $1
                                          call $~lib/typedarray/Int16Array~visit
                                          return
                                         end
                                         local.get $0
                                         local.get $1
                                         call $~lib/typedarray/Uint16Array~visit
                                         return
                                        end
                                        local.get $0
                                        local.get $1
                                        call $~lib/typedarray/Int32Array~visit
                                        return
                                       end
                                       local.get $0
                                       local.get $1
                                       call $~lib/typedarray/Uint32Array~visit
                                       return
                                      end
                                      local.get $0
                                      local.get $1
                                      call $~lib/typedarray/Float32Array~visit
                                      return
                                     end
                                     local.get $0
                                     local.get $1
                                     call $~lib/typedarray/Float64Array~visit
                                     return
                                    end
                                    local.get $0
                                    local.get $1
                                    call $~lib/typedarray/Int64Array~visit
                                    return
                                   end
                                   local.get $0
                                   local.get $1
                                   call $~lib/typedarray/Uint64Array~visit
                                   return
                                  end
                                  local.get $0
                                  local.get $1
                                  call $~lib/array/Array<i32>~visit
                                  return
                                 end
                                 local.get $0
                                 local.get $1
                                 call $~lib/array/Array<i64>~visit
                                 return
                                end
                                local.get $0
                                local.get $1
                                call $~lib/array/Array<~lib/string/String>~visit
                                return
                               end
                               local.get $0
                               local.get $1
                               call $~lib/array/Array<bool>~visit
                               return
                              end
                              local.get $0
                              local.get $1
                              call $~lib/array/Array<~lib/array/Array<i32>>~visit
                              return
                             end
                             local.get $0
                             local.get $1
                             call $~lib/array/Array<~lib/array/Array<i64>>~visit
                             return
                            end
                            local.get $0
                            local.get $1
                            call $~lib/array/Array<~lib/array/Array<~lib/string/String>>~visit
                            return
                           end
                           local.get $0
                           local.get $1
                           call $~lib/array/Array<~lib/array/Array<bool>>~visit
                           return
                          end
                          local.get $0
                          local.get $1
                          call $~lib/array/Array<f64>~visit
                          return
                         end
                         local.get $0
                         local.get $1
                         call $~lib/function/Function<%28%29=>f64>~visit
                         return
                        end
                        local.get $0
                        local.get $1
                        call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>~visit
                        return
                       end
                       local.get $0
                       local.get $1
                       call $~lib/function/Function<%28f64%2Cf64%29=>f64>~visit
                       return
                      end
                      local.get $0
                      local.get $1
                      call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>f64>~visit
                      return
                     end
                     local.get $0
                     local.get $1
                     call $~lib/function/Function<%28~lib/typedarray/Float64Array%29=>f64>~visit
                     return
                    end
                    return
                   end
                   local.get $0
                   local.get $1
                   call $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2Ci32%2Ci32%2Ci32%2C%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cassembly/imports/IArguments%29=>void%2Cassembly/imports/IArguments%29=>~lib/typedarray/Float64Array>~visit
                   return
                  end
                  local.get $0
                  local.get $1
                  call $~lib/function/Function<%28~lib/typedarray/Float64Array%2Ci32%2Ci32%2Ci32%2C%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cassembly/imports/IArguments%29=>void%2Cassembly/imports/IArguments%29=>~lib/typedarray/Float64Array>~visit
                  return
                 end
                 local.get $0
                 local.get $1
                 call $~lib/function/Function<%28~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>~visit
                 return
                end
                local.get $0
                local.get $1
                call $~lib/function/Function<%28f64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>~visit
                return
               end
               local.get $0
               local.get $1
               call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>~visit
               return
              end
              local.get $0
              local.get $1
              call $~lib/function/Function<%28~lib/typedarray/Float64Array%2Cf64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>~visit
              return
             end
             local.get $0
             local.get $1
             call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>~visit
             return
            end
            local.get $0
            local.get $1
            call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>~visit
            return
           end
           local.get $0
           local.get $1
           call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>bool>~visit
           return
          end
          local.get $0
          local.get $1
          call $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>~visit
          return
         end
         local.get $0
         local.get $1
         call $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>~visit
         return
        end
        local.get $0
        local.get $1
        call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2Cf64%29=>~lib/typedarray/Float64Array>~visit
        return
       end
       local.get $0
       local.get $1
       call $~lib/function/Function<%28%29=>%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>~visit
       return
      end
      local.get $0
      local.get $1
      call $~lib/function/Function<%28~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%2C~lib/typedarray/Float64Array%29=>~lib/typedarray/Float64Array>~visit
      return
     end
     local.get $0
     local.get $1
     call $~lib/function/Function<%28~lib/typedarray/Float64Array%2Cf64%2Cf64%2Cf64%2Cf64%2Cf64%2Cf64%29=>~lib/typedarray/Float64Array>~visit
     return
    end
    local.get $0
    local.get $1
    call $~lib/array/Array<~lib/typedarray/Float64Array>~visit
    return
   end
   return
  end
  unreachable
 )
 (func $~setArgumentsLength (param $0 i32)
  local.get $0
  global.set $~argumentsLength
 )
 (func $~start
  call $start:assembly/index
 )
 (func $~stack_check
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__data_end
  i32.lt_s
  if
   i32.const 28240
   i32.const 28288
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $start:assembly/vec3~anonymous|0~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  (local $9 f64)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $1
  i32.eqz
  if
   i32.const 3
   local.set $1
  end
  local.get $2
  i32.eqz
  if
   i32.const 0
   local.set $2
  end
  local.get $3
  if
   local.get $3
   local.get $1
   i32.mul
   local.get $2
   i32.add
   f64.convert_i32_s
   local.set $9
   local.get $0
   call $~lib/typedarray/Float64Array#get:length
   f64.convert_i32_s
   local.set $8
   local.get $9
   local.get $8
   f64.min
   i32.trunc_f64_s
   local.set $7
  else
   local.get $0
   call $~lib/typedarray/Float64Array#get:length
   local.set $7
  end
  local.get $2
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $7
   i32.lt_s
   local.set $10
   local.get $10
   if
    global.get $assembly/vec3/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 0
    local.get $0
    local.get $6
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    global.get $assembly/vec3/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 1
    local.get $0
    local.get $6
    i32.const 1
    i32.add
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    global.get $assembly/vec3/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 2
    local.get $0
    local.get $6
    i32.const 2
    i32.add
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    global.get $assembly/vec3/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    global.get $assembly/vec3/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store offset=4
    local.get $11
    local.get $5
    i32.const 3
    global.set $~argumentsLength
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $0
    local.get $6
    global.get $assembly/vec3/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 0
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    local.get $6
    i32.const 1
    i32.add
    global.get $assembly/vec3/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 1
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    local.get $6
    i32.const 2
    i32.add
    global.get $assembly/vec3/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 2
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    local.get $6
    local.get $1
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  local.get $0
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $start:assembly/vec4~anonymous|0~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  (local $9 f64)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $1
  i32.eqz
  if
   i32.const 4
   local.set $1
  end
  local.get $2
  i32.eqz
  if
   i32.const 0
   local.set $2
  end
  local.get $3
  if
   local.get $3
   local.get $1
   i32.mul
   local.get $2
   i32.add
   f64.convert_i32_s
   local.set $9
   local.get $0
   call $~lib/typedarray/Float64Array#get:length
   f64.convert_i32_s
   local.set $8
   local.get $9
   local.get $8
   f64.min
   i32.trunc_f64_s
   local.set $7
  else
   local.get $0
   call $~lib/typedarray/Float64Array#get:length
   local.set $7
  end
  local.get $2
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $7
   i32.lt_s
   local.set $10
   local.get $10
   if
    global.get $assembly/vec4/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 0
    local.get $0
    local.get $6
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    global.get $assembly/vec4/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 1
    local.get $0
    local.get $6
    i32.const 1
    i32.add
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    global.get $assembly/vec4/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 2
    local.get $0
    local.get $6
    i32.const 2
    i32.add
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    global.get $assembly/vec4/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 3
    local.get $0
    local.get $6
    i32.const 3
    i32.add
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    global.get $assembly/vec4/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    global.get $assembly/vec4/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store offset=4
    local.get $11
    local.get $5
    i32.const 3
    global.set $~argumentsLength
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $0
    local.get $6
    global.get $assembly/vec4/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 0
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    local.get $6
    i32.const 1
    i32.add
    global.get $assembly/vec4/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 1
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    local.get $6
    i32.const 2
    i32.add
    global.get $assembly/vec4/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 2
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    local.get $6
    i32.const 3
    i32.add
    global.get $assembly/vec4/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 3
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    local.get $6
    local.get $1
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  local.get $0
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $start:assembly/quat~anonymous|0~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 f64)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $1
  local.get $2
  call $assembly/vec3/dot
  local.set $3
  local.get $3
  f64.const -0.999999
  f64.lt
  if
   global.get $assembly/quat/tmpvec3
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   global.get $assembly/quat/xUnitVec3
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   local.get $1
   call $assembly/vec3/cross
   drop
   global.get $assembly/quat/tmpvec3
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   i32.const 1
   global.set $~argumentsLength
   global.get $assembly/vec3/len
   i32.load
   call_indirect $0 (type $i32_=>_f64)
   f64.const 1e-06
   f64.lt
   if
    global.get $assembly/quat/tmpvec3
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    local.get $4
    global.get $assembly/quat/yUnitVec3
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    local.get $1
    call $assembly/vec3/cross
    drop
   end
   global.get $assembly/quat/tmpvec3
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   global.get $assembly/quat/tmpvec3
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   call $assembly/vec3/normalize
   drop
   local.get $0
   global.get $assembly/quat/tmpvec3
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=4
   local.get $4
   global.get $~lib/math/NativeMath.PI
   call $assembly/quat/setAxisAngle
   drop
   local.get $0
   local.set $4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   return
  else
   local.get $3
   f64.const 0.999999
   f64.gt
   if
    local.get $0
    i32.const 0
    f64.const 0
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 1
    f64.const 0
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 2
    f64.const 0
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 3
    f64.const 1
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $4
    return
   else
    global.get $assembly/quat/tmpvec3
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    local.get $4
    local.get $1
    local.get $2
    call $assembly/vec3/cross
    drop
    local.get $0
    i32.const 0
    global.get $assembly/quat/tmpvec3
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    local.get $4
    i32.const 0
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 1
    global.get $assembly/quat/tmpvec3
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    local.get $4
    i32.const 1
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 2
    global.get $assembly/quat/tmpvec3
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store
    local.get $4
    i32.const 2
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 3
    f64.const 1
    local.get $3
    f64.add
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    local.get $0
    i32.const 2
    global.set $~argumentsLength
    global.get $assembly/quat/normalize
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    local.set $4
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $4
    return
   end
   unreachable
  end
  unreachable
 )
 (func $start:assembly/quat~anonymous|1~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f64) (result i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $assembly/quat/temp1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $1
  local.get $4
  local.get $5
  call $assembly/quat/slerp
  drop
  global.get $assembly/quat/temp2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store
  local.get $6
  local.get $2
  local.get $3
  local.get $5
  call $assembly/quat/slerp
  drop
  local.get $0
  global.get $assembly/quat/temp1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=4
  local.get $6
  global.get $assembly/quat/temp2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store offset=8
  local.get $6
  f64.const 2
  local.get $5
  f64.mul
  f64.const 1
  local.get $5
  f64.sub
  f64.mul
  call $assembly/quat/slerp
  drop
  local.get $0
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $start:assembly/quat~anonymous|2~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $assembly/quat/matr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 0
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  global.get $assembly/quat/matr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 3
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  global.get $assembly/quat/matr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 6
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  global.get $assembly/quat/matr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 1
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  global.get $assembly/quat/matr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 4
  local.get $3
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  global.get $assembly/quat/matr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 7
  local.get $3
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  global.get $assembly/quat/matr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 2
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  global.get $assembly/quat/matr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 5
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  global.get $assembly/quat/matr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store
  local.get $4
  i32.const 8
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  local.get $0
  global.get $assembly/quat/matr
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=8
  local.get $4
  call $assembly/quat/fromMat3
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $4
  i32.const 2
  global.set $~argumentsLength
  global.get $assembly/quat/normalize
  i32.load
  call_indirect $0 (type $i32_i32_=>_i32)
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $start:assembly/vec2~anonymous|0~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  (local $9 f64)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $1
  i32.eqz
  if
   i32.const 2
   local.set $1
  end
  local.get $2
  i32.eqz
  if
   i32.const 0
   local.set $2
  end
  local.get $3
  if
   local.get $3
   local.get $1
   i32.mul
   local.get $2
   i32.add
   f64.convert_i32_s
   local.set $9
   local.get $0
   call $~lib/typedarray/Float64Array#get:length
   f64.convert_i32_s
   local.set $8
   local.get $9
   local.get $8
   f64.min
   i32.trunc_f64_s
   local.set $7
  else
   local.get $0
   call $~lib/typedarray/Float64Array#get:length
   local.set $7
  end
  local.get $2
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $7
   i32.lt_s
   local.set $10
   local.get $10
   if
    global.get $assembly/vec2/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 0
    local.get $0
    local.get $6
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    global.get $assembly/vec2/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 1
    local.get $0
    local.get $6
    i32.const 1
    i32.add
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    global.get $assembly/vec2/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    global.get $assembly/vec2/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store offset=4
    local.get $11
    local.get $5
    i32.const 3
    global.set $~argumentsLength
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $0
    local.get $6
    global.get $assembly/vec2/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 0
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    local.get $6
    i32.const 1
    i32.add
    global.get $assembly/vec2/vec
    local.set $11
    global.get $~lib/memory/__stack_pointer
    local.get $11
    i32.store
    local.get $11
    i32.const 1
    call $~lib/typedarray/Float64Array#__get
    call $~lib/typedarray/Float64Array#__set
    local.get $6
    local.get $1
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  local.get $0
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $assembly/mat2/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=32
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=40
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=48
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=56
  i32.const 2752
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=56
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=60
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=48
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=52
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=40
  local.get $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=44
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=32
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=36
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $1
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=28
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 4384
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/mat2d/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 96
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=32
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=40
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=48
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=56
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=64
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=72
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=80
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=88
  i32.const 4416
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=88
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=92
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=80
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=84
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=72
  local.get $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=76
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=64
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=68
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=56
  local.get $1
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=60
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=48
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=52
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=40
  local.get $1
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=44
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=32
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=36
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $1
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=28
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 4384
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 96
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/mat3/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 144
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=32
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=40
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=48
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=56
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=64
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=72
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=80
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=88
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=96
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=104
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=112
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=120
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=128
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=136
  i32.const 4448
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=136
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=140
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=128
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=132
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=120
  local.get $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=124
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=112
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=116
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=104
  local.get $1
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=108
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=96
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=100
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=88
  local.get $1
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=92
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=80
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=84
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=72
  local.get $1
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=76
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=64
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=68
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=56
  local.get $1
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=60
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=48
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=52
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=40
  local.get $1
  local.get $0
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=44
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=32
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=36
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $1
  local.get $0
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=28
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  local.get $0
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 4384
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 144
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/mat4/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 256
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=32
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=40
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=48
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=56
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=64
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=72
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=80
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=88
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=96
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=104
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=112
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=120
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=128
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=136
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=144
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=152
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=160
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=168
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=176
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=184
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=192
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=200
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=208
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=216
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=224
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=232
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=240
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=248
  i32.const 4480
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=248
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=252
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=240
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=244
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=232
  local.get $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=236
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=224
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=228
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=216
  local.get $1
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=220
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=208
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=212
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=200
  local.get $1
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=204
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=192
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=196
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=184
  local.get $1
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=188
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=176
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=180
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=168
  local.get $1
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=172
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=160
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=164
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=152
  local.get $1
  local.get $0
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=156
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=144
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=148
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=136
  local.get $1
  local.get $0
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=140
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=128
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=132
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=120
  local.get $1
  local.get $0
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=124
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=112
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=116
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=104
  local.get $1
  local.get $0
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=108
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=96
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=100
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=88
  local.get $1
  local.get $0
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=92
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=80
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=84
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=72
  local.get $1
  local.get $0
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=76
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=64
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=68
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=56
  local.get $1
  local.get $0
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=60
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=48
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=52
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=40
  local.get $1
  local.get $0
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=44
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=32
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=36
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $1
  local.get $0
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=28
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  local.get $0
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 4384
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 256
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quat/fromEuler (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 i32) (result i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/math/NativeMath.PI
  f64.const 360
  f64.div
  local.set $5
  local.get $1
  local.get $5
  f64.mul
  local.set $1
  local.get $3
  local.get $5
  f64.mul
  local.set $3
  local.get $2
  local.get $5
  f64.mul
  local.set $2
  local.get $1
  call $~lib/math/NativeMath.sin
  local.set $6
  local.get $1
  call $~lib/math/NativeMath.cos
  local.set $7
  local.get $2
  call $~lib/math/NativeMath.sin
  local.set $8
  local.get $2
  call $~lib/math/NativeMath.cos
  local.set $9
  local.get $3
  call $~lib/math/NativeMath.sin
  local.set $10
  local.get $3
  call $~lib/math/NativeMath.cos
  local.set $11
  local.get $4
  i32.const 10672
  i32.eq
  if
   local.get $0
   i32.const 0
   local.get $6
   local.get $9
   f64.mul
   local.get $11
   f64.mul
   local.get $7
   local.get $8
   f64.mul
   local.get $10
   f64.mul
   f64.add
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   local.get $7
   local.get $8
   f64.mul
   local.get $11
   f64.mul
   local.get $6
   local.get $9
   f64.mul
   local.get $10
   f64.mul
   f64.sub
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $7
   local.get $9
   f64.mul
   local.get $10
   f64.mul
   local.get $6
   local.get $8
   f64.mul
   local.get $11
   f64.mul
   f64.add
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 3
   local.get $7
   local.get $9
   f64.mul
   local.get $11
   f64.mul
   local.get $6
   local.get $8
   f64.mul
   local.get $10
   f64.mul
   f64.sub
   call $~lib/typedarray/Float64Array#__set
  else
   local.get $4
   i32.const 10704
   i32.eq
   if
    local.get $0
    i32.const 0
    local.get $6
    local.get $9
    f64.mul
    local.get $11
    f64.mul
    local.get $7
    local.get $8
    f64.mul
    local.get $10
    f64.mul
    f64.sub
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 1
    local.get $7
    local.get $8
    f64.mul
    local.get $11
    f64.mul
    local.get $6
    local.get $9
    f64.mul
    local.get $10
    f64.mul
    f64.sub
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 2
    local.get $7
    local.get $9
    f64.mul
    local.get $10
    f64.mul
    local.get $6
    local.get $8
    f64.mul
    local.get $11
    f64.mul
    f64.add
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 3
    local.get $7
    local.get $9
    f64.mul
    local.get $11
    f64.mul
    local.get $6
    local.get $8
    f64.mul
    local.get $10
    f64.mul
    f64.add
    call $~lib/typedarray/Float64Array#__set
   else
    local.get $4
    i32.const 10736
    i32.eq
    if
     local.get $0
     i32.const 0
     local.get $6
     local.get $9
     f64.mul
     local.get $11
     f64.mul
     local.get $7
     local.get $8
     f64.mul
     local.get $10
     f64.mul
     f64.add
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 1
     local.get $7
     local.get $8
     f64.mul
     local.get $11
     f64.mul
     local.get $6
     local.get $9
     f64.mul
     local.get $10
     f64.mul
     f64.sub
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 2
     local.get $7
     local.get $9
     f64.mul
     local.get $10
     f64.mul
     local.get $6
     local.get $8
     f64.mul
     local.get $11
     f64.mul
     f64.sub
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 3
     local.get $7
     local.get $9
     f64.mul
     local.get $11
     f64.mul
     local.get $6
     local.get $8
     f64.mul
     local.get $10
     f64.mul
     f64.add
     call $~lib/typedarray/Float64Array#__set
    else
     local.get $4
     i32.const 10768
     i32.eq
     if
      local.get $0
      i32.const 0
      local.get $6
      local.get $9
      f64.mul
      local.get $11
      f64.mul
      local.get $7
      local.get $8
      f64.mul
      local.get $10
      f64.mul
      f64.add
      call $~lib/typedarray/Float64Array#__set
      local.get $0
      i32.const 1
      local.get $7
      local.get $8
      f64.mul
      local.get $11
      f64.mul
      local.get $6
      local.get $9
      f64.mul
      local.get $10
      f64.mul
      f64.add
      call $~lib/typedarray/Float64Array#__set
      local.get $0
      i32.const 2
      local.get $7
      local.get $9
      f64.mul
      local.get $10
      f64.mul
      local.get $6
      local.get $8
      f64.mul
      local.get $11
      f64.mul
      f64.sub
      call $~lib/typedarray/Float64Array#__set
      local.get $0
      i32.const 3
      local.get $7
      local.get $9
      f64.mul
      local.get $11
      f64.mul
      local.get $6
      local.get $8
      f64.mul
      local.get $10
      f64.mul
      f64.sub
      call $~lib/typedarray/Float64Array#__set
     else
      local.get $4
      i32.const 10800
      i32.eq
      if
       local.get $0
       i32.const 0
       local.get $6
       local.get $9
       f64.mul
       local.get $11
       f64.mul
       local.get $7
       local.get $8
       f64.mul
       local.get $10
       f64.mul
       f64.sub
       call $~lib/typedarray/Float64Array#__set
       local.get $0
       i32.const 1
       local.get $7
       local.get $8
       f64.mul
       local.get $11
       f64.mul
       local.get $6
       local.get $9
       f64.mul
       local.get $10
       f64.mul
       f64.add
       call $~lib/typedarray/Float64Array#__set
       local.get $0
       i32.const 2
       local.get $7
       local.get $9
       f64.mul
       local.get $10
       f64.mul
       local.get $6
       local.get $8
       f64.mul
       local.get $11
       f64.mul
       f64.add
       call $~lib/typedarray/Float64Array#__set
       local.get $0
       i32.const 3
       local.get $7
       local.get $9
       f64.mul
       local.get $11
       f64.mul
       local.get $6
       local.get $8
       f64.mul
       local.get $10
       f64.mul
       f64.sub
       call $~lib/typedarray/Float64Array#__set
      else
       local.get $4
       i32.const 112
       i32.eq
       if
        local.get $0
        i32.const 0
        local.get $6
        local.get $9
        f64.mul
        local.get $11
        f64.mul
        local.get $7
        local.get $8
        f64.mul
        local.get $10
        f64.mul
        f64.sub
        call $~lib/typedarray/Float64Array#__set
        local.get $0
        i32.const 1
        local.get $7
        local.get $8
        f64.mul
        local.get $11
        f64.mul
        local.get $6
        local.get $9
        f64.mul
        local.get $10
        f64.mul
        f64.add
        call $~lib/typedarray/Float64Array#__set
        local.get $0
        i32.const 2
        local.get $7
        local.get $9
        f64.mul
        local.get $10
        f64.mul
        local.get $6
        local.get $8
        f64.mul
        local.get $11
        f64.mul
        f64.sub
        call $~lib/typedarray/Float64Array#__set
        local.get $0
        i32.const 3
        local.get $7
        local.get $9
        f64.mul
        local.get $11
        f64.mul
        local.get $6
        local.get $8
        f64.mul
        local.get $10
        f64.mul
        f64.add
        call $~lib/typedarray/Float64Array#__set
       else
        i32.const 10832
        local.set $12
        global.get $~lib/memory/__stack_pointer
        local.get $12
        i32.store
        local.get $12
        local.get $4
        call $~lib/string/String.__concat
        i32.const 10896
        i32.const 512
        i32.const 10
        call $~lib/builtins/abort
        unreachable
       end
      end
     end
    end
   end
  end
  local.get $0
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
 )
 (func $assembly/quat/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=32
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=40
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=48
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=56
  i32.const 10960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=56
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=60
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=48
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=52
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=40
  local.get $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=44
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=32
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=36
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $1
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=28
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 4384
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quat2/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 128
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=32
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=40
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=48
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=56
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=64
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=72
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=80
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=88
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=96
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=104
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=112
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=120
  i32.const 10992
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=120
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=124
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=112
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=116
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=104
  local.get $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=108
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=96
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=100
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=88
  local.get $1
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=92
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=80
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=84
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=72
  local.get $1
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=76
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=64
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=68
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=56
  local.get $1
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=60
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=48
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=52
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=40
  local.get $1
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=44
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=32
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=36
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $1
  local.get $0
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=28
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  local.get $0
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 4384
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 128
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/vec2/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=24
  i32.const 11024
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=28
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 4384
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/vec3/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=32
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=40
  i32.const 11296
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=40
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=44
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=32
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=36
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=28
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 4384
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 48
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/vec4/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=24
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=32
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=40
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=48
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=56
  i32.const 11328
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=56
  local.get $1
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=60
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=48
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=52
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=40
  local.get $1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=44
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=32
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=36
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=24
  local.get $1
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=28
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=16
  local.get $1
  i32.const 4352
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=20
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=8
  local.get $1
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  i32.const 0
  call $~lib/number/F64#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=12
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  i32.const 4384
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $1
  call $~lib/string/String.__concat
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $0
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $1
  i32.const 1073741820
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   i32.const 592
   i32.const 640
   i32.const 18
   i32.const 57
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $2
  i32.shl
  local.tee $1
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store offset=4
  local.get $3
  i32.const 0
  local.get $1
  call $~lib/memory/memory.fill
  local.get $0
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $0
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/typedarray/Float64Array#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 10
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.const 3
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $0
  i32.store
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/vec3/create (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $0
  i32.store
  global.get $assembly/common/ARRAY_TYPE
  global.get $assembly/common/ArrayTypeEnum.Float64ArrayT
  i32.ne
  if
   local.get $0
   i32.const 0
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/vec4/create (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Float64Array#constructor
  local.tee $0
  i32.store
  global.get $assembly/common/ARRAY_TYPE
  global.get $assembly/common/ArrayTypeEnum.Float64ArrayT
  i32.ne
  if
   local.get $0
   i32.const 0
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 3
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/vec4/clone (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Float64Array#constructor
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 2
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 3
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/vec4/fromValues (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Float64Array#constructor
  local.tee $4
  i32.store
  local.get $4
  i32.const 0
  local.get $0
  call $~lib/typedarray/Float64Array#__set
  local.get $4
  i32.const 1
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $4
  i32.const 2
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $4
  i32.const 3
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $4
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $assembly/vec3/fromValues (param $0 f64) (param $1 f64) (param $2 f64) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $3
  i32.store
  local.get $3
  i32.const 0
  local.get $0
  call $~lib/typedarray/Float64Array#__set
  local.get $3
  i32.const 1
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $3
  i32.const 2
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $3
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/quat/create (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Float64Array#constructor
  local.tee $0
  i32.store
  global.get $assembly/common/ARRAY_TYPE
  global.get $assembly/common/ArrayTypeEnum.Float64ArrayT
  i32.ne
  if
   local.get $0
   i32.const 0
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
  i32.const 3
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/mat3/create (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 9
  call $~lib/typedarray/Float64Array#constructor
  local.tee $0
  i32.store
  global.get $assembly/common/ARRAY_TYPE
  global.get $assembly/common/ArrayTypeEnum.Float64ArrayT
  i32.ne
  if
   local.get $0
   i32.const 1
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 3
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 5
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 6
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 7
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 8
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/vec2/create (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Float64Array#constructor
  local.tee $0
  i32.store
  global.get $assembly/common/ARRAY_TYPE
  global.get $assembly/common/ArrayTypeEnum.Float64ArrayT
  i32.ne
  if
   local.get $0
   i32.const 0
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/mat2/create (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Float64Array#constructor
  local.tee $0
  i32.store
  global.get $assembly/common/ARRAY_TYPE
  global.get $assembly/common/ArrayTypeEnum.Float64ArrayT
  i32.ne
  if
   local.get $0
   i32.const 1
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/mat2/clone (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Float64Array#constructor
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 2
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 3
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/mat2/fromValues (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Float64Array#constructor
  local.tee $4
  i32.store
  local.get $4
  i32.const 0
  local.get $0
  call $~lib/typedarray/Float64Array#__set
  local.get $4
  i32.const 1
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $4
  i32.const 2
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $4
  i32.const 3
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $4
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/util/number/dtoa (param $0 f64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  f64.const 0
  f64.eq
  if
   i32.const 2784
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $0
  local.get $0
  f64.sub
  f64.const 0
  f64.eq
  i32.eqz
  if
   local.get $0
   local.get $0
   f64.ne
   if
    i32.const 2816
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   i32.const 2848
   i32.const 2896
   local.get $0
   f64.const 0
   f64.lt
   select
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 2928
  local.get $0
  call $~lib/util/number/dtoa_core
  i32.const 1
  i32.shl
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  i32.const 2928
  local.get $1
  call $~lib/memory/memory.copy
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/string/String#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $2
  local.get $1
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $3
  local.get $2
  local.get $3
  i32.add
  local.set $4
  local.get $4
  i32.const 0
  i32.eq
  if
   i32.const 4320
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store
  local.get $5
  local.get $0
  local.get $2
  call $~lib/memory/memory.copy
  local.get $5
  local.get $2
  i32.add
  local.get $1
  local.get $3
  call $~lib/memory/memory.copy
  local.get $5
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  i32.shl
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 0
  local.get $3
  call $~lib/rt/__newBuffer
  local.tee $5
  i32.store
  i32.const 16
  local.get $2
  call $~lib/rt/itcms/__new
  local.set $6
  local.get $6
  local.get $5
  i32.store
  local.get $6
  local.get $5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $6
  local.get $5
  i32.store offset=4
  local.get $6
  local.get $4
  i32.store offset=8
  local.get $6
  local.get $0
  i32.store offset=12
  local.get $6
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $assembly/mat2/LDU (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  i32.const 2
  local.get $3
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.div
  call $~lib/typedarray/Float64Array#__set
  local.get $2
  i32.const 0
  local.get $3
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $2
  i32.const 1
  local.get $3
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $2
  i32.const 3
  local.get $3
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 3
  i32.const 2
  i32.const 43
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $4
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.load offset=4
  local.tee $5
  i32.store offset=4
  local.get $4
  i32.const 0
  local.get $0
  call $~lib/array/Array<~lib/typedarray/Float64Array>#__uset
  local.get $4
  i32.const 1
  local.get $1
  call $~lib/array/Array<~lib/typedarray/Float64Array>#__uset
  local.get $4
  i32.const 2
  local.get $2
  call $~lib/array/Array<~lib/typedarray/Float64Array>#__uset
  local.get $4
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $assembly/mat2d/create (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Float64Array#constructor
  local.tee $0
  i32.store
  global.get $assembly/common/ARRAY_TYPE
  global.get $assembly/common/ArrayTypeEnum.Float64ArrayT
  i32.ne
  if
   local.get $0
   i32.const 1
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 4
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 5
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/mat2d/clone (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Float64Array#constructor
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 2
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 3
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 4
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 5
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/mat2d/fromValues (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (result i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Float64Array#constructor
  local.tee $6
  i32.store
  local.get $6
  i32.const 0
  local.get $0
  call $~lib/typedarray/Float64Array#__set
  local.get $6
  i32.const 1
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $6
  i32.const 2
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $6
  i32.const 3
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $6
  i32.const 4
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $6
  i32.const 5
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $6
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $assembly/mat3/clone (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 9
  call $~lib/typedarray/Float64Array#constructor
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 2
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 3
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 4
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 5
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 6
  local.get $0
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 7
  local.get $0
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 8
  local.get $0
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/mat3/fromValues (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (param $7 f64) (param $8 f64) (result i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 9
  call $~lib/typedarray/Float64Array#constructor
  local.tee $9
  i32.store
  local.get $9
  i32.const 0
  local.get $0
  call $~lib/typedarray/Float64Array#__set
  local.get $9
  i32.const 1
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $9
  i32.const 2
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $9
  i32.const 3
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $9
  i32.const 4
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $9
  i32.const 5
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $9
  i32.const 6
  local.get $6
  call $~lib/typedarray/Float64Array#__set
  local.get $9
  i32.const 7
  local.get $7
  call $~lib/typedarray/Float64Array#__set
  local.get $9
  i32.const 8
  local.get $8
  call $~lib/typedarray/Float64Array#__set
  local.get $9
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $assembly/mat4/Fov#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 44
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  f64.const 0
  call $assembly/mat4/Fov#set:upDegrees
  local.get $0
  f64.const 0
  call $assembly/mat4/Fov#set:downDegrees
  local.get $0
  f64.const 0
  call $assembly/mat4/Fov#set:leftDegrees
  local.get $0
  f64.const 0
  call $assembly/mat4/Fov#set:rightDegrees
  local.get $0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/mat4/create (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Float64Array#constructor
  local.tee $0
  i32.store
  global.get $assembly/common/ARRAY_TYPE
  global.get $assembly/common/ArrayTypeEnum.Float64ArrayT
  i32.ne
  if
   local.get $0
   i32.const 1
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 3
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 4
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 6
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 7
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 8
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 9
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 11
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 12
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 13
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 14
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 10
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 15
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/mat4/clone (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Float64Array#constructor
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 2
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 3
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 4
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 5
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 6
  local.get $0
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 7
  local.get $0
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 8
  local.get $0
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 9
  local.get $0
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 10
  local.get $0
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 11
  local.get $0
  i32.const 11
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 12
  local.get $0
  i32.const 12
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 13
  local.get $0
  i32.const 13
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 14
  local.get $0
  i32.const 14
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 15
  local.get $0
  i32.const 15
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/mat4/fromValues (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (param $7 f64) (param $8 f64) (param $9 f64) (param $10 f64) (param $11 f64) (param $12 f64) (param $13 f64) (param $14 f64) (param $15 f64) (result i32)
  (local $16 i32)
  (local $17 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 16
  call $~lib/typedarray/Float64Array#constructor
  local.tee $16
  i32.store
  local.get $16
  i32.const 0
  local.get $0
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 1
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 2
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 3
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 4
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 5
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 6
  local.get $6
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 7
  local.get $7
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 8
  local.get $8
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 9
  local.get $9
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 10
  local.get $10
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 11
  local.get $11
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 12
  local.get $12
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 13
  local.get $13
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 14
  local.get $14
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  i32.const 15
  local.get $15
  call $~lib/typedarray/Float64Array#__set
  local.get $16
  local.set $17
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $17
 )
 (func $assembly/mat4/fromQuat2 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $2
  i32.store
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $3
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $4
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.neg
  local.set $5
  local.get $1
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  local.set $6
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.set $7
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.set $8
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.set $9
  local.get $1
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  local.set $10
  local.get $3
  local.get $3
  f64.mul
  local.get $4
  local.get $4
  f64.mul
  f64.add
  local.get $5
  local.get $5
  f64.mul
  f64.add
  local.get $6
  local.get $6
  f64.mul
  f64.add
  local.set $11
  local.get $11
  f64.const 0
  f64.gt
  if
   local.get $2
   i32.const 0
   local.get $7
   local.get $6
   f64.mul
   local.get $10
   local.get $3
   f64.mul
   f64.add
   local.get $8
   local.get $5
   f64.mul
   f64.add
   local.get $9
   local.get $4
   f64.mul
   f64.sub
   f64.const 2
   f64.mul
   local.get $11
   f64.div
   call $~lib/typedarray/Float64Array#__set
   local.get $2
   i32.const 1
   local.get $8
   local.get $6
   f64.mul
   local.get $10
   local.get $4
   f64.mul
   f64.add
   local.get $9
   local.get $3
   f64.mul
   f64.add
   local.get $7
   local.get $5
   f64.mul
   f64.sub
   f64.const 2
   f64.mul
   local.get $11
   f64.div
   call $~lib/typedarray/Float64Array#__set
   local.get $2
   i32.const 2
   local.get $9
   local.get $6
   f64.mul
   local.get $10
   local.get $5
   f64.mul
   f64.add
   local.get $7
   local.get $4
   f64.mul
   f64.add
   local.get $8
   local.get $3
   f64.mul
   f64.sub
   f64.const 2
   f64.mul
   local.get $11
   f64.div
   call $~lib/typedarray/Float64Array#__set
  else
   local.get $2
   i32.const 0
   local.get $7
   local.get $6
   f64.mul
   local.get $10
   local.get $3
   f64.mul
   f64.add
   local.get $8
   local.get $5
   f64.mul
   f64.add
   local.get $9
   local.get $4
   f64.mul
   f64.sub
   f64.const 2
   f64.mul
   call $~lib/typedarray/Float64Array#__set
   local.get $2
   i32.const 1
   local.get $8
   local.get $6
   f64.mul
   local.get $10
   local.get $4
   f64.mul
   f64.add
   local.get $9
   local.get $3
   f64.mul
   f64.add
   local.get $7
   local.get $5
   f64.mul
   f64.sub
   f64.const 2
   f64.mul
   call $~lib/typedarray/Float64Array#__set
   local.get $2
   i32.const 2
   local.get $9
   local.get $6
   f64.mul
   local.get $10
   local.get $5
   f64.mul
   f64.add
   local.get $7
   local.get $4
   f64.mul
   f64.add
   local.get $8
   local.get $3
   f64.mul
   f64.sub
   f64.const 2
   f64.mul
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat4/fromRotationTranslation
  drop
  local.get $0
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
 )
 (func $assembly/mat4/getRotation (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 f64)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local $16 f64)
  (local $17 f64)
  (local $18 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $2
  i32.store
  local.get $2
  local.get $1
  call $assembly/mat4/getScaling
  drop
  i32.const 1
  f64.convert_i32_s
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.div
  local.set $3
  i32.const 1
  f64.convert_i32_s
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.div
  local.set $4
  i32.const 1
  f64.convert_i32_s
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.div
  local.set $5
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.set $6
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  local.set $7
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  local.set $8
  local.get $1
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.set $9
  local.get $1
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  local.set $10
  local.get $1
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  local.set $11
  local.get $1
  i32.const 8
  call $~lib/typedarray/Float64Array#__get
  local.get $3
  f64.mul
  local.set $12
  local.get $1
  i32.const 9
  call $~lib/typedarray/Float64Array#__get
  local.get $4
  f64.mul
  local.set $13
  local.get $1
  i32.const 10
  call $~lib/typedarray/Float64Array#__get
  local.get $5
  f64.mul
  local.set $14
  local.get $6
  local.get $10
  f64.add
  local.get $14
  f64.add
  local.set $15
  f64.const 0
  local.set $16
  local.get $15
  f64.const 0
  f64.gt
  if
   local.get $15
   f64.const 1
   f64.add
   local.set $17
   local.get $17
   f64.sqrt
   f64.const 2
   f64.mul
   local.set $16
   local.get $0
   i32.const 3
   f64.const 0.25
   local.get $16
   f64.mul
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 0
   local.get $11
   local.get $13
   f64.sub
   local.get $16
   f64.div
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   local.get $12
   local.get $8
   f64.sub
   local.get $16
   f64.div
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   local.get $7
   local.get $9
   f64.sub
   local.get $16
   f64.div
   call $~lib/typedarray/Float64Array#__set
  else
   local.get $6
   local.get $10
   f64.gt
   if (result i32)
    local.get $6
    local.get $14
    f64.gt
   else
    i32.const 0
   end
   if
    f64.const 1
    local.get $6
    f64.add
    local.get $10
    f64.sub
    local.get $14
    f64.sub
    local.set $17
    local.get $17
    f64.sqrt
    f64.const 2
    f64.mul
    local.set $16
    local.get $0
    i32.const 3
    local.get $11
    local.get $13
    f64.sub
    local.get $16
    f64.div
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 0
    f64.const 0.25
    local.get $16
    f64.mul
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 1
    local.get $7
    local.get $9
    f64.add
    local.get $16
    f64.div
    call $~lib/typedarray/Float64Array#__set
    local.get $0
    i32.const 2
    local.get $12
    local.get $8
    f64.add
    local.get $16
    f64.div
    call $~lib/typedarray/Float64Array#__set
   else
    local.get $10
    local.get $14
    f64.gt
    if
     f64.const 1
     local.get $10
     f64.add
     local.get $6
     f64.sub
     local.get $14
     f64.sub
     local.set $17
     local.get $17
     f64.sqrt
     f64.const 2
     f64.mul
     local.set $16
     local.get $0
     i32.const 3
     local.get $12
     local.get $8
     f64.sub
     local.get $16
     f64.div
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 0
     local.get $7
     local.get $9
     f64.add
     local.get $16
     f64.div
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 1
     f64.const 0.25
     local.get $16
     f64.mul
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 2
     local.get $11
     local.get $13
     f64.add
     local.get $16
     f64.div
     call $~lib/typedarray/Float64Array#__set
    else
     f64.const 1
     local.get $14
     f64.add
     local.get $6
     f64.sub
     local.get $10
     f64.sub
     local.set $17
     local.get $17
     f64.sqrt
     f64.const 2
     f64.mul
     local.set $16
     local.get $0
     i32.const 3
     local.get $7
     local.get $9
     f64.sub
     local.get $16
     f64.div
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 0
     local.get $12
     local.get $8
     f64.add
     local.get $16
     f64.div
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 1
     local.get $11
     local.get $13
     f64.add
     local.get $16
     f64.div
     call $~lib/typedarray/Float64Array#__set
     local.get $0
     i32.const 2
     f64.const 0.25
     local.get $16
     f64.mul
     call $~lib/typedarray/Float64Array#__set
    end
   end
  end
  local.get $0
  local.set $18
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $18
 )
 (func $assembly/quat2/create (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  call $~lib/typedarray/Float64Array#constructor
  local.tee $0
  i32.store
  global.get $assembly/common/ARRAY_TYPE
  global.get $assembly/common/ArrayTypeEnum.Float64ArrayT
  i32.ne
  if
   local.get $0
   i32.const 0
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 1
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 2
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 4
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 5
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 6
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
   local.get $0
   i32.const 7
   f64.const 0
   call $~lib/typedarray/Float64Array#__set
  end
  local.get $0
  i32.const 3
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $assembly/quat2/clone (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  call $~lib/typedarray/Float64Array#constructor
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 2
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 3
  local.get $0
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 4
  local.get $0
  i32.const 4
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 5
  local.get $0
  i32.const 5
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 6
  local.get $0
  i32.const 6
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 7
  local.get $0
  i32.const 7
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/quat2/fromValues (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (param $7 f64) (result i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  call $~lib/typedarray/Float64Array#constructor
  local.tee $8
  i32.store
  local.get $8
  i32.const 0
  local.get $0
  call $~lib/typedarray/Float64Array#__set
  local.get $8
  i32.const 1
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $8
  i32.const 2
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $8
  i32.const 3
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $8
  i32.const 4
  local.get $4
  call $~lib/typedarray/Float64Array#__set
  local.get $8
  i32.const 5
  local.get $5
  call $~lib/typedarray/Float64Array#__set
  local.get $8
  i32.const 6
  local.get $6
  call $~lib/typedarray/Float64Array#__set
  local.get $8
  i32.const 7
  local.get $7
  call $~lib/typedarray/Float64Array#__set
  local.get $8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $assembly/quat2/fromRotationTranslationValues (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (result i32)
  (local $7 i32)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  call $~lib/typedarray/Float64Array#constructor
  local.tee $7
  i32.store
  local.get $7
  i32.const 0
  local.get $0
  call $~lib/typedarray/Float64Array#__set
  local.get $7
  i32.const 1
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $7
  i32.const 2
  local.get $2
  call $~lib/typedarray/Float64Array#__set
  local.get $7
  i32.const 3
  local.get $3
  call $~lib/typedarray/Float64Array#__set
  local.get $4
  f64.const 0.5
  f64.mul
  local.set $8
  local.get $5
  f64.const 0.5
  f64.mul
  local.set $9
  local.get $6
  f64.const 0.5
  f64.mul
  local.set $10
  local.get $7
  i32.const 4
  local.get $8
  local.get $3
  f64.mul
  local.get $9
  local.get $2
  f64.mul
  f64.add
  local.get $10
  local.get $1
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $7
  i32.const 5
  local.get $9
  local.get $3
  f64.mul
  local.get $10
  local.get $0
  f64.mul
  f64.add
  local.get $8
  local.get $2
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $7
  i32.const 6
  local.get $10
  local.get $3
  f64.mul
  local.get $8
  local.get $1
  f64.mul
  f64.add
  local.get $9
  local.get $0
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $7
  i32.const 7
  local.get $8
  f64.neg
  local.get $0
  f64.mul
  local.get $9
  local.get $1
  f64.mul
  f64.sub
  local.get $10
  local.get $2
  f64.mul
  f64.sub
  call $~lib/typedarray/Float64Array#__set
  local.get $7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $assembly/quat2/fromMat4 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  call $assembly/quat/create
  local.tee $2
  i32.store
  local.get $2
  local.get $1
  call $assembly/mat4/getRotation
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $3
  i32.store offset=4
  local.get $3
  local.get $1
  call $assembly/mat4/getTranslation
  drop
  local.get $0
  local.get $2
  local.get $3
  call $assembly/quat2/fromRotationTranslation
  drop
  local.get $0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $assembly/vec2/clone (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Float64Array#constructor
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/vec2/fromValues (param $0 f64) (param $1 f64) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Float64Array#constructor
  local.tee $2
  i32.store
  local.get $2
  i32.const 0
  local.get $0
  call $~lib/typedarray/Float64Array#__set
  local.get $2
  i32.const 1
  local.get $1
  call $~lib/typedarray/Float64Array#__set
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $assembly/vec3/clone (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $1
  i32.store
  local.get $1
  i32.const 0
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 1
  local.get $0
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  i32.const 2
  local.get $0
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $assembly/vec3/rotateX (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  i32.const 21
  i32.const 11056
  call $~lib/rt/__newArray
  local.tee $5
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  i32.const 21
  i32.const 11088
  call $~lib/rt/__newArray
  local.tee $6
  i32.store offset=4
  local.get $5
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/array/Array<f64>#__set
  local.get $5
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/array/Array<f64>#__set
  local.get $5
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/array/Array<f64>#__set
  local.get $6
  i32.const 0
  local.get $5
  i32.const 0
  call $~lib/array/Array<f64>#__get
  call $~lib/array/Array<f64>#__set
  local.get $6
  i32.const 1
  local.get $5
  i32.const 1
  call $~lib/array/Array<f64>#__get
  local.get $3
  call $~lib/math/NativeMath.cos
  f64.mul
  local.get $5
  i32.const 2
  call $~lib/array/Array<f64>#__get
  local.get $3
  call $~lib/math/NativeMath.sin
  f64.mul
  f64.sub
  call $~lib/array/Array<f64>#__set
  local.get $6
  i32.const 2
  local.get $5
  i32.const 1
  call $~lib/array/Array<f64>#__get
  local.get $3
  call $~lib/math/NativeMath.sin
  f64.mul
  local.get $5
  i32.const 2
  call $~lib/array/Array<f64>#__get
  local.get $3
  call $~lib/math/NativeMath.cos
  f64.mul
  f64.add
  call $~lib/array/Array<f64>#__set
  local.get $0
  i32.const 0
  local.get $6
  i32.const 0
  call $~lib/array/Array<f64>#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $6
  i32.const 1
  call $~lib/array/Array<f64>#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $6
  i32.const 2
  call $~lib/array/Array<f64>#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $assembly/vec3/rotateY (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  i32.const 21
  i32.const 11168
  call $~lib/rt/__newArray
  local.tee $5
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  i32.const 21
  i32.const 11200
  call $~lib/rt/__newArray
  local.tee $6
  i32.store offset=4
  local.get $5
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/array/Array<f64>#__set
  local.get $5
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/array/Array<f64>#__set
  local.get $5
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/array/Array<f64>#__set
  local.get $6
  i32.const 0
  local.get $5
  i32.const 2
  call $~lib/array/Array<f64>#__get
  local.get $3
  call $~lib/math/NativeMath.sin
  f64.mul
  local.get $5
  i32.const 0
  call $~lib/array/Array<f64>#__get
  local.get $3
  call $~lib/math/NativeMath.cos
  f64.mul
  f64.add
  call $~lib/array/Array<f64>#__set
  local.get $6
  i32.const 1
  local.get $5
  i32.const 1
  call $~lib/array/Array<f64>#__get
  call $~lib/array/Array<f64>#__set
  local.get $6
  i32.const 2
  local.get $5
  i32.const 2
  call $~lib/array/Array<f64>#__get
  local.get $3
  call $~lib/math/NativeMath.cos
  f64.mul
  local.get $5
  i32.const 0
  call $~lib/array/Array<f64>#__get
  local.get $3
  call $~lib/math/NativeMath.sin
  f64.mul
  f64.sub
  call $~lib/array/Array<f64>#__set
  local.get $0
  i32.const 0
  local.get $6
  i32.const 0
  call $~lib/array/Array<f64>#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $6
  i32.const 1
  call $~lib/array/Array<f64>#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $6
  i32.const 2
  call $~lib/array/Array<f64>#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $assembly/vec3/rotateZ (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  i32.const 21
  i32.const 11232
  call $~lib/rt/__newArray
  local.tee $5
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  i32.const 21
  i32.const 11264
  call $~lib/rt/__newArray
  local.tee $6
  i32.store offset=4
  local.get $5
  i32.const 0
  local.get $1
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/array/Array<f64>#__set
  local.get $5
  i32.const 1
  local.get $1
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/array/Array<f64>#__set
  local.get $5
  i32.const 2
  local.get $1
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.sub
  call $~lib/array/Array<f64>#__set
  local.get $6
  i32.const 0
  local.get $5
  i32.const 0
  call $~lib/array/Array<f64>#__get
  local.get $3
  call $~lib/math/NativeMath.cos
  f64.mul
  local.get $5
  i32.const 1
  call $~lib/array/Array<f64>#__get
  local.get $3
  call $~lib/math/NativeMath.sin
  f64.mul
  f64.sub
  call $~lib/array/Array<f64>#__set
  local.get $6
  i32.const 1
  local.get $5
  i32.const 0
  call $~lib/array/Array<f64>#__get
  local.get $3
  call $~lib/math/NativeMath.sin
  f64.mul
  local.get $5
  i32.const 1
  call $~lib/array/Array<f64>#__get
  local.get $3
  call $~lib/math/NativeMath.cos
  f64.mul
  f64.add
  call $~lib/array/Array<f64>#__set
  local.get $6
  i32.const 2
  local.get $5
  i32.const 2
  call $~lib/array/Array<f64>#__get
  call $~lib/array/Array<f64>#__set
  local.get $0
  i32.const 0
  local.get $6
  i32.const 0
  call $~lib/array/Array<f64>#__get
  local.get $2
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  local.get $6
  i32.const 1
  call $~lib/array/Array<f64>#__get
  local.get $2
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  local.get $6
  i32.const 2
  call $~lib/array/Array<f64>#__get
  local.get $2
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.add
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $assembly/quat/fromEuler@varargs (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 4
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $assembly/common/ANGLE_ORDER
   local.tee $4
   i32.store
  end
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $assembly/quat/fromEuler
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $export:assembly/mat2/clone (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat2/clone
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat2/copy (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat2/copy
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2/identity (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat2/identity
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat2/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $assembly/mat2/set
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $export:assembly/mat2/transpose (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat2/transpose
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2/invert (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat2/invert
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2/adjoint (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat2/adjoint
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2/determinant (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat2/determinant
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat2/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat2/multiply
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat2/rotate (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat2/rotate
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat2/scale (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat2/scale
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat2/fromRotation (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/mat2/fromRotation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2/fromScaling (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat2/fromScaling
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat2/str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat2/frob (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat2/frob
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat2/LDU (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/mat2/LDU
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/mat2/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat2/add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat2/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat2/subtract
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat2/exactEquals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat2/exactEquals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat2/equals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2/multiplyScalar (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat2/multiplyScalar
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat2/multiplyScalarAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/mat2/multiplyScalarAndAdd
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/mat2d/clone (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat2d/clone
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat2d/copy (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat2d/copy
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2d/identity (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat2d/identity
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat2d/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  local.get $6
  call $assembly/mat2d/set
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $export:assembly/mat2d/invert (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat2d/invert
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2d/determinant (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat2d/determinant
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat2d/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat2d/multiply
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat2d/rotate (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat2d/rotate
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat2d/scale (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat2d/scale
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat2d/translate (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat2d/translate
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat2d/fromRotation (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/mat2d/fromRotation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2d/fromScaling (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat2d/fromScaling
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2d/fromTranslation (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat2d/fromTranslation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2d/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat2d/str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat2d/frob (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat2d/frob
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat2d/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat2d/add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat2d/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat2d/subtract
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat2d/multiplyScalar (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat2d/multiplyScalar
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat2d/multiplyScalarAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/mat2d/multiplyScalarAndAdd
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/mat2d/exactEquals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat2d/exactEquals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat2d/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat2d/equals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat3/fromMat4 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat3/fromMat4
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat3/clone (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat3/clone
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat3/copy (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat3/copy
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat3/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (param $7 f64) (param $8 f64) (param $9 f64) (result i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  local.get $6
  local.get $7
  local.get $8
  local.get $9
  call $assembly/mat3/set
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $export:assembly/mat3/identity (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat3/identity
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat3/transpose (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat3/transpose
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat3/invert (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat3/invert
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat3/adjoint (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat3/adjoint
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat3/determinant (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat3/determinant
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat3/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat3/multiply
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat3/translate (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat3/translate
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat3/rotate (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat3/rotate
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat3/scale (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat3/scale
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat3/fromTranslation (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat3/fromTranslation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat3/fromRotation (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/mat3/fromRotation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat3/fromScaling (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat3/fromScaling
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat3/fromMat2d (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat3/fromMat2d
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat3/fromQuat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat3/fromQuat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat3/normalFromMat4 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat3/normalFromMat4
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat3/projection (param $0 i32) (param $1 f64) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat3/projection
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat3/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat3/str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat3/frob (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat3/frob
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat3/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat3/add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat3/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat3/subtract
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat3/multiplyScalar (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat3/multiplyScalar
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat3/multiplyScalarAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/mat3/multiplyScalarAndAdd
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/mat3/exactEquals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat3/exactEquals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat3/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat3/equals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/Fov#get:upDegrees (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat4/Fov#get:upDegrees
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat4/Fov#set:upDegrees (param $0 i32) (param $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/mat4/Fov#set:upDegrees
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/mat4/Fov#get:downDegrees (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat4/Fov#get:downDegrees
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat4/Fov#set:downDegrees (param $0 i32) (param $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/mat4/Fov#set:downDegrees
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/mat4/Fov#get:leftDegrees (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat4/Fov#get:leftDegrees
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat4/Fov#set:leftDegrees (param $0 i32) (param $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/mat4/Fov#set:leftDegrees
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/mat4/Fov#get:rightDegrees (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat4/Fov#get:rightDegrees
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat4/Fov#set:rightDegrees (param $0 i32) (param $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/mat4/Fov#set:rightDegrees
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $export:assembly/mat4/Fov#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat4/Fov#constructor
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat4/clone (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat4/clone
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat4/copy (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat4/copy
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (param $7 f64) (param $8 f64) (param $9 f64) (param $10 f64) (param $11 f64) (param $12 f64) (param $13 f64) (param $14 f64) (param $15 f64) (param $16 f64) (result i32)
  (local $17 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  local.get $6
  local.get $7
  local.get $8
  local.get $9
  local.get $10
  local.get $11
  local.get $12
  local.get $13
  local.get $14
  local.get $15
  local.get $16
  call $assembly/mat4/set
  local.set $17
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $17
 )
 (func $export:assembly/mat4/identity (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat4/identity
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat4/transpose (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat4/transpose
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/invert (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat4/invert
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/adjoint (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat4/adjoint
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/determinant (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat4/determinant
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat4/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat4/multiply
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat4/translate (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat4/translate
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat4/scale (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat4/scale
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat4/rotate (param $0 i32) (param $1 i32) (param $2 f64) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/mat4/rotate
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/mat4/rotateX (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat4/rotateX
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat4/rotateY (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat4/rotateY
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat4/rotateZ (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat4/rotateZ
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat4/fromTranslation (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat4/fromTranslation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/fromScaling (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat4/fromScaling
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/fromRotation (param $0 i32) (param $1 f64) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat4/fromRotation
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat4/fromXRotation (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/mat4/fromXRotation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/fromYRotation (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/mat4/fromYRotation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/fromZRotation (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/mat4/fromZRotation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/fromRotationTranslation (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat4/fromRotationTranslation
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat4/fromQuat2 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat4/fromQuat2
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/getTranslation (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat4/getTranslation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/getScaling (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat4/getScaling
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/getRotation (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat4/getRotation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/decompose (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/mat4/decompose
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/mat4/fromRotationTranslationScale (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/mat4/fromRotationTranslationScale
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/mat4/fromRotationTranslationScaleOrigin (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $assembly/mat4/fromRotationTranslationScaleOrigin
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $export:assembly/mat4/fromQuat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat4/fromQuat
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/frustum (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  local.get $6
  call $assembly/mat4/frustum
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $export:assembly/mat4/perspectiveNO (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $assembly/mat4/perspectiveNO
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $export:assembly/mat4/perspectiveZO (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $assembly/mat4/perspectiveZO
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $export:assembly/mat4/perspectiveFromFieldOfView (param $0 i32) (param $1 i32) (param $2 f64) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/mat4/perspectiveFromFieldOfView
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/mat4/orthoNO (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  local.get $6
  call $assembly/mat4/orthoNO
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $export:assembly/mat4/orthoZO (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  local.get $6
  call $assembly/mat4/orthoZO
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $export:assembly/mat4/lookAt (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/mat4/lookAt
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/mat4/targetTo (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/mat4/targetTo
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/mat4/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat4/str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat4/frob (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/mat4/frob
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/mat4/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat4/add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat4/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat4/subtract
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat4/multiplyScalar (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/mat4/multiplyScalar
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/mat4/multiplyScalarAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/mat4/multiplyScalarAndAdd
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/mat4/exactEquals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat4/exactEquals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/mat4/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/mat4/equals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat/identity (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/quat/identity
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/quat/setAxisAngle (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat/setAxisAngle
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat/getAxisAngle (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat/getAxisAngle
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat/getAngle (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat/getAngle
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat/multiply
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat/rotateX (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat/rotateX
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat/rotateY (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat/rotateY
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat/rotateZ (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat/rotateZ
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat/calculateW (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat/calculateW
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat/exp (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat/exp
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat/ln (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat/ln
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat/pow (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat/pow
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat/slerp (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/quat/slerp
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/quat/random (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/quat/random
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/quat/invert (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat/invert
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat/conjugate (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat/conjugate
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat/fromMat3 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat/fromMat3
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat/fromEuler@varargs (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 i32) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $assembly/quat/fromEuler@varargs
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $export:assembly/quat/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/quat/str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/quat/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat/equals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat2/clone (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/quat2/clone
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/quat2/fromRotationTranslation (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat2/fromRotationTranslation
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat2/fromTranslation (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat2/fromTranslation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat2/fromRotation (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat2/fromRotation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat2/fromMat4 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat2/fromMat4
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat2/copy (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat2/copy
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat2/identity (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/quat2/identity
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/quat2/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64) (param $7 f64) (param $8 f64) (result i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  local.get $6
  local.get $7
  local.get $8
  call $assembly/quat2/set
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $export:assembly/quat2/getDual (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat2/getDual
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat2/setDual (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat2/setDual
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat2/getTranslation (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat2/getTranslation
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat2/translate (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat2/translate
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat2/rotateX (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat2/rotateX
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat2/rotateY (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat2/rotateY
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat2/rotateZ (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat2/rotateZ
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat2/rotateByQuatAppend (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat2/rotateByQuatAppend
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat2/rotateByQuatPrepend (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat2/rotateByQuatPrepend
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat2/rotateAroundAxis (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/quat2/rotateAroundAxis
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/quat2/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat2/add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat2/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat2/multiply
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat2/scale (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/quat2/scale
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/quat2/lerp (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/quat2/lerp
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/quat2/invert (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat2/invert
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat2/conjugate (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat2/conjugate
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat2/normalize (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat2/normalize
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat2/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/quat2/str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/quat2/exactEquals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat2/exactEquals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/quat2/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/quat2/equals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/clone (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec2/clone
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec2/copy (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec2/copy
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/set (param $0 i32) (param $1 f64) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec2/set
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec2/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec2/add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec2/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec2/subtract
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec2/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec2/multiply
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec2/divide (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec2/divide
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec2/ceil (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec2/ceil
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/floor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec2/floor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/min (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec2/min
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec2/max (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec2/max
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec2/round (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec2/round
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/scale (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec2/scale
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec2/scaleAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/vec2/scaleAndAdd
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/vec2/distance (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec2/distance
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/squaredDistance (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec2/squaredDistance
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/length (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec2/length
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec2/squaredLength (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec2/squaredLength
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec2/negate (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec2/negate
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/inverse (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec2/inverse
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/normalize (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec2/normalize
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/dot (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec2/dot
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/cross (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec2/cross
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec2/lerp (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/vec2/lerp
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/vec2/random (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/vec2/random
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/transformMat2 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec2/transformMat2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec2/transformMat2d (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec2/transformMat2d
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec2/transformMat3 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec2/transformMat3
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec2/transformMat4 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec2/transformMat4
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec2/rotate (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/vec2/rotate
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/vec2/angle (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec2/angle
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/zero (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec2/zero
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec2/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec2/str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec2/exactEquals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec2/exactEquals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec2/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec2/equals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/clone (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec3/clone
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec3/length (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec3/length
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec3/copy (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec3/copy
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/vec3/set
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/vec3/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec3/add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec3/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec3/subtract
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec3/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec3/multiply
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec3/divide (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec3/divide
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec3/ceil (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec3/ceil
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/floor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec3/floor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/min (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec3/min
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec3/max (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec3/max
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec3/round (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec3/round
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/scale (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec3/scale
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec3/scaleAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/vec3/scaleAndAdd
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/vec3/distance (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec3/distance
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/squaredDistance (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec3/squaredDistance
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/squaredLength (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec3/squaredLength
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec3/negate (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec3/negate
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/inverse (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec3/inverse
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/normalize (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec3/normalize
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/dot (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec3/dot
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/cross (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec3/cross
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec3/lerp (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/vec3/lerp
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/vec3/slerp (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/vec3/slerp
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/vec3/hermite (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f64) (result i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  call $assembly/vec3/hermite
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $export:assembly/vec3/bezier (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 f64) (result i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store offset=16
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  local.get $5
  call $assembly/vec3/bezier
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $export:assembly/vec3/random (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/vec3/random
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/transformMat4 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec3/transformMat4
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec3/transformMat3 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec3/transformMat3
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec3/transformQuat (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec3/transformQuat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec3/rotateX (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/vec3/rotateX
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/vec3/rotateY (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/vec3/rotateY
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/vec3/rotateZ (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/vec3/rotateZ
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/vec3/angle (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec3/angle
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/zero (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec3/zero
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec3/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec3/str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec3/exactEquals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec3/exactEquals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec3/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec3/equals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec4/clone (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec4/clone
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec4/copy (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec4/copy
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec4/set (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (result i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  local.get $4
  call $assembly/vec4/set
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $export:assembly/vec4/add (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec4/add
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec4/subtract (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec4/subtract
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec4/multiply (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec4/multiply
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec4/divide (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec4/divide
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec4/ceil (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec4/ceil
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec4/floor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec4/floor
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec4/min (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec4/min
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec4/max (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec4/max
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec4/round (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec4/round
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec4/scale (param $0 i32) (param $1 i32) (param $2 f64) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec4/scale
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec4/scaleAndAdd (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/vec4/scaleAndAdd
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/vec4/distance (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec4/distance
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec4/squaredDistance (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec4/squaredDistance
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec4/length (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec4/length
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec4/squaredLength (param $0 i32) (result f64)
  (local $1 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec4/squaredLength
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec4/negate (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec4/negate
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec4/inverse (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec4/inverse
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec4/normalize (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec4/normalize
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec4/dot (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec4/dot
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec4/cross (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store offset=12
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/vec4/cross
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/vec4/lerp (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f64) (result i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $assembly/vec4/lerp
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $export:assembly/vec4/random (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  local.get $1
  call $assembly/vec4/random
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec4/transformMat4 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec4/transformMat4
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec4/transformQuat (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store offset=8
  local.get $0
  local.get $1
  local.get $2
  call $assembly/vec4/transformQuat
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $export:assembly/vec4/zero (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec4/zero
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec4/str (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  local.get $0
  call $assembly/vec4/str
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $export:assembly/vec4/exactEquals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec4/exactEquals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $export:assembly/vec4/equals (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store offset=4
  local.get $0
  local.get $1
  call $assembly/vec4/equals
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
)
